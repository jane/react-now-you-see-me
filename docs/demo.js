!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["react-now-you-see-me"]=t():e["react-now-you-see-me"]=t()}("undefined"!=typeof self?self:this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=21)}([function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},function(e,t,n){"use strict";e.exports=n(6)},function(e,t,n){"use strict";function r(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var o=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,u=r(e),s=1;s<arguments.length;s++){n=Object(arguments[s]);for(var c in n)i.call(n,c)&&(u[c]=n[c]);if(o){l=o(n);for(var p=0;p<l.length;p++)a.call(n,l[p])&&(u[l[p]]=n[l[p]])}}return u}},function(e,t,n){"use strict";var r={};e.exports=r},function(e,t,n){"use strict";function r(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(r)}catch(e){console.error(e)}}r(),e.exports=n(7)},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";function r(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."),t.name="Invariant Violation",t.framesToPop=1,t}function o(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||P}function i(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||P}function a(){}function l(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||P}function u(e,t,n){var r,o={},i=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(i=""+t.key),t)R.call(t,r)&&!M.hasOwnProperty(r)&&(o[r]=t[r]);var l=arguments.length-2;if(1===l)o.children=n;else if(1<l){for(var u=Array(l),s=0;s<l;s++)u[s]=arguments[s+2];o.children=u}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===o[r]&&(o[r]=l[r]);return{$$typeof:x,type:e,key:i,ref:a,props:o,_owner:I.current}}function s(e){return"object"==typeof e&&null!==e&&e.$$typeof===x}function c(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}function p(e,t,n,r){if(L.length){var o=L.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function f(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>L.length&&L.push(e)}function d(e,t,n,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var a=!1;if(null===e)a=!0;else switch(i){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case x:case C:case E:case T:a=!0}}if(a)return n(o,e,""===t?"."+h(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var l=0;l<e.length;l++){i=e[l];var u=t+h(i,l);a+=d(i,u,n,o)}else if(null===e||void 0===e?u=null:(u=S&&e[S]||e["@@iterator"],u="function"==typeof u?u:null),"function"==typeof u)for(e=u.call(e),l=0;!(i=e.next()).done;)i=i.value,u=t+h(i,l++),a+=d(i,u,n,o);else"object"===i&&(n=""+e,r("31","[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return a}function h(e,t){return"object"==typeof e&&null!==e&&null!=e.key?c(e.key):t.toString(36)}function g(e,t){e.func.call(e.context,t,e.count++)}function m(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?y(e,r,n,k.thatReturnsArgument):null!=e&&(s(e)&&(t=o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(D,"$&/")+"/")+n,e={$$typeof:x,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}),r.push(e))}function y(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(D,"$&/")+"/"),t=p(t,i,r,o),null==e||d(e,"",m,t),f(t)}/** @license React v16.2.0
 * react.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var v=n(2),b=n(3),k=n(0),w="function"==typeof Symbol&&Symbol.for,x=w?Symbol.for("react.element"):60103,C=w?Symbol.for("react.call"):60104,E=w?Symbol.for("react.return"):60105,T=w?Symbol.for("react.portal"):60106,_=w?Symbol.for("react.fragment"):60107,S="function"==typeof Symbol&&Symbol.iterator,P={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};o.prototype.isReactComponent={},o.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&r("85"),this.updater.enqueueSetState(this,e,t,"setState")},o.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},a.prototype=o.prototype;var O=i.prototype=new a;O.constructor=i,v(O,o.prototype),O.isPureReactComponent=!0;var N=l.prototype=new a;N.constructor=l,v(N,o.prototype),N.unstable_isAsyncReactComponent=!0,N.render=function(){return this.props.children};var I={current:null},R=Object.prototype.hasOwnProperty,M={key:!0,ref:!0,__self:!0,__source:!0},D=/\/+/g,L=[],A={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return y(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;t=p(null,null,t,n),null==e||d(e,"",g,t),f(t)},count:function(e){return null==e?0:d(e,"",k.thatReturnsNull,null)},toArray:function(e){var t=[];return y(e,t,null,k.thatReturnsArgument),t},only:function(e){return s(e)||r("143"),e}},Component:o,PureComponent:i,unstable_AsyncComponent:l,Fragment:_,createElement:u,cloneElement:function(e,t,n){var r=v({},e.props),o=e.key,i=e.ref,a=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,a=I.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(u in t)R.call(t,u)&&!M.hasOwnProperty(u)&&(r[u]=void 0===t[u]&&void 0!==l?l[u]:t[u])}var u=arguments.length-2;if(1===u)r.children=n;else if(1<u){l=Array(u);for(var s=0;s<u;s++)l[s]=arguments[s+2];r.children=l}return{$$typeof:x,type:e.type,key:o,ref:i,props:r,_owner:a}},createFactory:function(e){var t=u.bind(null,e);return t.type=e,t},isValidElement:s,version:"16.2.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:I,assign:v}},F=Object.freeze({default:A}),U=F&&A||F;e.exports=U.default?U.default:U},function(e,t,n){"use strict";function r(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."),t.name="Invariant Violation",t.framesToPop=1,t}function o(e,t){return(e&t)===t}function i(e,t){if(On.hasOwnProperty(e)||2<e.length&&("o"===e[0]||"O"===e[0])&&("n"===e[1]||"N"===e[1]))return!1;if(null===t)return!0;switch(typeof t){case"boolean":return On.hasOwnProperty(e)?e=!0:(t=a(e))?e=t.hasBooleanValue||t.hasStringBooleanValue||t.hasOverloadedBooleanValue:(e=e.toLowerCase().slice(0,5),e="data-"===e||"aria-"===e),e;case"undefined":case"number":case"string":case"object":return!0;default:return!1}}function a(e){return In.hasOwnProperty(e)?In[e]:null}function l(e){return e[1].toUpperCase()}function u(e,t,n,r,o,i,a,l,u){$n._hasCaughtError=!1,$n._caughtError=null;var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){$n._caughtError=e,$n._hasCaughtError=!0}}function s(){if($n._hasRethrowError){var e=$n._rethrowError;throw $n._rethrowError=null,$n._hasRethrowError=!1,e}}function c(){if(Wn)for(var e in Kn){var t=Kn[e],n=Wn.indexOf(e);if(-1<n||r("96",e),!qn[n]){t.extractEvents||r("97",e),qn[n]=t,n=t.eventTypes;for(var o in n){var i=void 0,a=n[o],l=t,u=o;Qn.hasOwnProperty(u)&&r("99",u),Qn[u]=a;var s=a.phasedRegistrationNames;if(s){for(i in s)s.hasOwnProperty(i)&&p(s[i],l,u);i=!0}else a.registrationName?(p(a.registrationName,l,u),i=!0):i=!1;i||r("98",o,e)}}}}function p(e,t,n){Gn[e]&&r("100",e),Gn[e]=t,Yn[e]=t.eventTypes[n].dependencies}function f(e){Wn&&r("101"),Wn=Array.prototype.slice.call(e),c()}function d(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var o=e[t];Kn.hasOwnProperty(t)&&Kn[t]===o||(Kn[t]&&r("102",t),Kn[t]=o,n=!0)}n&&c()}function h(e,t,n,r){t=e.type||"unknown-event",e.currentTarget=er(r),$n.invokeGuardedCallbackAndCatchFirstError(t,n,void 0,e),e.currentTarget=null}function g(e,t){return null==t&&r("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function m(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}function y(e,t){if(e){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)h(e,t,n[o],r[o]);else n&&h(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function v(e){return y(e,!0)}function b(e){return y(e,!1)}function k(e,t){var n=e.stateNode;if(!n)return null;var o=Zn(n);if(!o)return null;n=o[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(o=!o.disabled)||(e=e.type,o=!("button"===e||"input"===e||"select"===e||"textarea"===e)),e=!o;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&r("231",t,typeof n),n)}function w(e,t,n,r){for(var o,i=0;i<qn.length;i++){var a=qn[i];a&&(a=a.extractEvents(e,t,n,r))&&(o=g(o,a))}return o}function x(e){e&&(tr=g(tr,e))}function C(e){var t=tr;tr=null,t&&(e?m(t,v):m(t,b),tr&&r("95"),$n.rethrowCaughtError())}function E(e){if(e[ir])return e[ir];for(var t=[];!e[ir];){if(t.push(e),!e.parentNode)return null;e=e.parentNode}var n=void 0,r=e[ir];if(5===r.tag||6===r.tag)return r;for(;e&&(r=e[ir]);e=t.pop())n=r;return n}function T(e){if(5===e.tag||6===e.tag)return e.stateNode;r("33")}function _(e){return e[ar]||null}function S(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function P(e,t,n){for(var r=[];e;)r.push(e),e=S(e);for(e=r.length;0<e--;)t(r[e],"captured",n);for(e=0;e<r.length;e++)t(r[e],"bubbled",n)}function O(e,t,n){(t=k(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=g(n._dispatchListeners,t),n._dispatchInstances=g(n._dispatchInstances,e))}function N(e){e&&e.dispatchConfig.phasedRegistrationNames&&P(e._targetInst,O,e)}function I(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst;t=t?S(t):null,P(t,O,e)}}function R(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=k(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=g(n._dispatchListeners,t),n._dispatchInstances=g(n._dispatchInstances,e))}function M(e){e&&e.dispatchConfig.registrationName&&R(e._targetInst,null,e)}function D(e){m(e,N)}function L(e,t,n,r){if(n&&r)e:{for(var o=n,i=r,a=0,l=o;l;l=S(l))a++;l=0;for(var u=i;u;u=S(u))l++;for(;0<a-l;)o=S(o),a--;for(;0<l-a;)i=S(i),l--;for(;a--;){if(o===i||o===i.alternate)break e;o=S(o),i=S(i)}o=null}else o=null;for(i=o,o=[];n&&n!==i&&(null===(a=n.alternate)||a!==i);)o.push(n),n=S(n);for(n=[];r&&r!==i&&(null===(a=r.alternate)||a!==i);)n.push(r),r=S(r);for(r=0;r<o.length;r++)R(o[r],"bubbled",e);for(e=n.length;0<e--;)R(n[e],"captured",t)}function A(){return!sr&&kn.canUseDOM&&(sr="textContent"in document.documentElement?"textContent":"innerText"),sr}function F(){if(cr._fallbackText)return cr._fallbackText;var e,t,n=cr._startText,r=n.length,o=U(),i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return cr._fallbackText=o.slice(e,1<t?1-t:void 0),cr._fallbackText}function U(){return"value"in cr._root?cr._root.value:cr._root[A()]}function j(e,t,n,r){this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface;for(var o in e)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?xn.thatReturnsTrue:xn.thatReturnsFalse,this.isPropagationStopped=xn.thatReturnsFalse,this}function H(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function V(e){e instanceof this||r("223"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function z(e){e.eventPool=[],e.getPooled=H,e.release=V}function B(e,t,n,r){return j.call(this,e,t,n,r)}function $(e,t,n,r){return j.call(this,e,t,n,r)}function W(e,t){switch(e){case"topKeyUp":return-1!==dr.indexOf(t.keyCode);case"topKeyDown":return 229!==t.keyCode;case"topKeyPress":case"topMouseDown":case"topBlur":return!0;default:return!1}}function K(e){return e=e.detail,"object"==typeof e&&"data"in e?e.data:null}function q(e,t){switch(e){case"topCompositionEnd":return K(t);case"topKeyPress":return 32!==t.which?null:(Cr=!0,wr);case"topTextInput":return e=t.data,e===wr&&Cr?null:e;default:return null}}function Q(e,t){if(Er)return"topCompositionEnd"===e||!hr&&W(e,t)?(e=F(),cr._root=null,cr._startText=null,cr._fallbackText=null,Er=!1,e):null;switch(e){case"topPaste":return null;case"topKeyPress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"topCompositionEnd":return kr?null:t.data;default:return null}}function G(e){if(e=Jn(e)){_r&&"function"==typeof _r.restoreControlledState||r("194");var t=Zn(e.stateNode);_r.restoreControlledState(e.stateNode,e.type,t)}}function Y(e){Sr?Pr?Pr.push(e):Pr=[e]:Sr=e}function X(){if(Sr){var e=Sr,t=Pr;if(Pr=Sr=null,G(e),t)for(e=0;e<t.length;e++)G(t[e])}}function Z(e,t){return e(t)}function J(e,t){if(Ir)return Z(e,t);Ir=!0;try{return Z(e,t)}finally{Ir=!1,X()}}function ee(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Rr[e.type]:"textarea"===t}function te(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ne(e,t){if(!kn.canUseDOM||t&&!("addEventListener"in document))return!1;t="on"+e;var n=t in document;return n||(n=document.createElement("div"),n.setAttribute(t,"return;"),n="function"==typeof n[t]),!n&&vr&&"wheel"===e&&(n=document.implementation.hasFeature("Events.wheel","3.0")),n}function re(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function oe(e){var t=re(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"function"==typeof n.get&&"function"==typeof n.set)return Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:!0,get:function(){return n.get.call(this)},set:function(e){r=""+e,n.set.call(this,e)}}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}function ie(e){e._valueTracker||(e._valueTracker=oe(e))}function ae(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=re(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function le(e,t,n){return e=j.getPooled(Mr.change,e,t,n),e.type="change",Y(n),D(e),e}function ue(e){x(e),C(!1)}function se(e){if(ae(T(e)))return e}function ce(e,t){if("topChange"===e)return t}function pe(){Dr&&(Dr.detachEvent("onpropertychange",fe),Lr=Dr=null)}function fe(e){"value"===e.propertyName&&se(Lr)&&(e=le(Lr,e,te(e)),J(ue,e))}function de(e,t,n){"topFocus"===e?(pe(),Dr=t,Lr=n,Dr.attachEvent("onpropertychange",fe)):"topBlur"===e&&pe()}function he(e){if("topSelectionChange"===e||"topKeyUp"===e||"topKeyDown"===e)return se(Lr)}function ge(e,t){if("topClick"===e)return se(t)}function me(e,t){if("topInput"===e||"topChange"===e)return se(t)}function ye(e,t,n,r){return j.call(this,e,t,n,r)}function ve(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Ur[e])&&!!t[e]}function be(){return ve}function ke(e,t,n,r){return j.call(this,e,t,n,r)}function we(e){return e=e.type,"string"==typeof e?e:"function"==typeof e?e.displayName||e.name:null}function xe(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(t=t.return,0!=(2&t.effectTag))return 1}return 3===t.tag?2:3}function Ce(e){return!!(e=e._reactInternalFiber)&&2===xe(e)}function Ee(e){2!==xe(e)&&r("188")}function Te(e){var t=e.alternate;if(!t)return t=xe(e),3===t&&r("188"),1===t?null:e;for(var n=e,o=t;;){var i=n.return,a=i?i.alternate:null;if(!i||!a)break;if(i.child===a.child){for(var l=i.child;l;){if(l===n)return Ee(i),e;if(l===o)return Ee(i),t;l=l.sibling}r("188")}if(n.return!==o.return)n=i,o=a;else{l=!1;for(var u=i.child;u;){if(u===n){l=!0,n=i,o=a;break}if(u===o){l=!0,o=i,n=a;break}u=u.sibling}if(!l){for(u=a.child;u;){if(u===n){l=!0,n=a,o=i;break}if(u===o){l=!0,o=a,n=i;break}u=u.sibling}l||r("189")}}n.alternate!==o&&r("190")}return 3!==n.tag&&r("188"),n.stateNode.current===n?e:t}function _e(e){if(!(e=Te(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Se(e){if(!(e=Te(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child&&4!==t.tag)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Pe(e){var t=e.targetInst;do{if(!t){e.ancestors.push(t);break}var n;for(n=t;n.return;)n=n.return;if(!(n=3!==n.tag?null:n.stateNode.containerInfo))break;e.ancestors.push(t),t=E(n)}while(t);for(n=0;n<e.ancestors.length;n++)t=e.ancestors[n],$r(e.topLevelType,t,e.nativeEvent,te(e.nativeEvent))}function Oe(e){Br=!!e}function Ne(e,t,n){return n?Cn.listen(n,t,Re.bind(null,e)):null}function Ie(e,t,n){return n?Cn.capture(n,t,Re.bind(null,e)):null}function Re(e,t){if(Br){var n=te(t);if(n=E(n),null===n||"number"!=typeof n.tag||2===xe(n)||(n=null),zr.length){var r=zr.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{J(Pe,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>zr.length&&zr.push(e)}}}function Me(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}function De(e){if(qr[e])return qr[e];if(!Kr[e])return e;var t,n=Kr[e];for(t in n)if(n.hasOwnProperty(t)&&t in Qr)return qr[e]=n[t];return""}function Le(e){return Object.prototype.hasOwnProperty.call(e,Zr)||(e[Zr]=Xr++,Yr[e[Zr]]={}),Yr[e[Zr]]}function Ae(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Fe(e,t){var n=Ae(e);e=0;for(var r;n;){if(3===n.nodeType){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=Ae(n)}}function Ue(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&"text"===e.type||"textarea"===t||"true"===e.contentEditable)}function je(e,t){if(oo||null==to||to!==En())return null;var n=to;return"selectionStart"in n&&Ue(n)?n={start:n.selectionStart,end:n.selectionEnd}:window.getSelection?(n=window.getSelection(),n={anchorNode:n.anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}):n=void 0,ro&&Tn(ro,n)?null:(ro=n,e=j.getPooled(eo.select,no,e,t),e.type="select",e.target=to,D(e),e)}function He(e,t,n,r){return j.call(this,e,t,n,r)}function Ve(e,t,n,r){return j.call(this,e,t,n,r)}function ze(e,t,n,r){return j.call(this,e,t,n,r)}function Be(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,32<=e||13===e?e:0}function $e(e,t,n,r){return j.call(this,e,t,n,r)}function We(e,t,n,r){return j.call(this,e,t,n,r)}function Ke(e,t,n,r){return j.call(this,e,t,n,r)}function qe(e,t,n,r){return j.call(this,e,t,n,r)}function Qe(e,t,n,r){return j.call(this,e,t,n,r)}function Ge(e){0>fo||(e.current=po[fo],po[fo]=null,fo--)}function Ye(e,t){fo++,po[fo]=e.current,e.current=t}function Xe(e){return Je(e)?mo:ho.current}function Ze(e,t){var n=e.type.contextTypes;if(!n)return Pn;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function Je(e){return 2===e.tag&&null!=e.type.childContextTypes}function et(e){Je(e)&&(Ge(go,e),Ge(ho,e))}function tt(e,t,n){null!=ho.cursor&&r("168"),Ye(ho,t,e),Ye(go,n,e)}function nt(e,t){var n=e.stateNode,o=e.type.childContextTypes;if("function"!=typeof n.getChildContext)return t;n=n.getChildContext();for(var i in n)i in o||r("108",we(e)||"Unknown",i);return wn({},t,n)}function rt(e){if(!Je(e))return!1;var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Pn,mo=ho.current,Ye(ho,t,e),Ye(go,go.current,e),!0}function ot(e,t){var n=e.stateNode;if(n||r("169"),t){var o=nt(e,mo);n.__reactInternalMemoizedMergedChildContext=o,Ge(go,e),Ge(ho,e),Ye(ho,o,e)}else Ge(go,e);Ye(go,t,e)}function it(e,t,n){this.tag=e,this.key=t,this.stateNode=this.type=null,this.sibling=this.child=this.return=null,this.index=0,this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null,this.internalContextTag=n,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.expirationTime=0,this.alternate=null}function at(e,t,n){var r=e.alternate;return null===r?(r=new it(e.tag,e.key,e.internalContextTag),r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.effectTag=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.expirationTime=n,r.pendingProps=t,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function lt(e,t,n){var o=void 0,i=e.type,a=e.key;return"function"==typeof i?(o=i.prototype&&i.prototype.isReactComponent?new it(2,a,t):new it(0,a,t),o.type=i,o.pendingProps=e.props):"string"==typeof i?(o=new it(5,a,t),o.type=i,o.pendingProps=e.props):"object"==typeof i&&null!==i&&"number"==typeof i.tag?(o=i,o.pendingProps=e.props):r("130",null==i?i:typeof i,""),o.expirationTime=n,o}function ut(e,t,n,r){return t=new it(10,r,t),t.pendingProps=e,t.expirationTime=n,t}function st(e,t,n){return t=new it(6,null,t),t.pendingProps=e,t.expirationTime=n,t}function ct(e,t,n){return t=new it(7,e.key,t),t.type=e.handler,t.pendingProps=e,t.expirationTime=n,t}function pt(e,t,n){return e=new it(9,null,t),e.expirationTime=n,e}function ft(e,t,n){return t=new it(4,e.key,t),t.pendingProps=e.children||[],t.expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function dt(e){return function(t){try{return e(t)}catch(e){}}}function ht(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);yo=dt(function(e){return t.onCommitFiberRoot(n,e)}),vo=dt(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}return!0}function gt(e){"function"==typeof yo&&yo(e)}function mt(e){"function"==typeof vo&&vo(e)}function yt(e){return{baseState:e,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1}}function vt(e,t){null===e.last?e.first=e.last=t:(e.last.next=t,e.last=t),(0===e.expirationTime||e.expirationTime>t.expirationTime)&&(e.expirationTime=t.expirationTime)}function bt(e,t){var n=e.alternate,r=e.updateQueue;null===r&&(r=e.updateQueue=yt(null)),null!==n?null===(e=n.updateQueue)&&(e=n.updateQueue=yt(null)):e=null,e=e!==r?e:null,null===e?vt(r,t):null===r.last||null===e.last?(vt(r,t),vt(e,t)):(vt(r,t),e.last=t)}function kt(e,t,n,r){return e=e.partialState,"function"==typeof e?e.call(t,n,r):e}function wt(e,t,n,r,o,i){null!==e&&e.updateQueue===n&&(n=t.updateQueue={baseState:n.baseState,expirationTime:n.expirationTime,first:n.first,last:n.last,isInitialized:n.isInitialized,callbackList:null,hasForceUpdate:!1}),n.expirationTime=0,n.isInitialized?e=n.baseState:(e=n.baseState=t.memoizedState,n.isInitialized=!0);for(var a=!0,l=n.first,u=!1;null!==l;){var s=l.expirationTime;if(s>i){var c=n.expirationTime;(0===c||c>s)&&(n.expirationTime=s),u||(u=!0,n.baseState=e)}else u||(n.first=l.next,null===n.first&&(n.last=null)),l.isReplace?(e=kt(l,r,e,o),a=!0):(s=kt(l,r,e,o))&&(e=a?wn({},e,s):wn(e,s),a=!1),l.isForced&&(n.hasForceUpdate=!0),null!==l.callback&&(s=n.callbackList,null===s&&(s=n.callbackList=[]),s.push(l));l=l.next}return null!==n.callbackList?t.effectTag|=32:null!==n.first||n.hasForceUpdate||(t.updateQueue=null),u||(n.baseState=e),e}function xt(e,t){var n=e.callbackList;if(null!==n)for(e.callbackList=null,e=0;e<n.length;e++){var o=n[e],i=o.callback;o.callback=null,"function"!=typeof i&&r("191",i),i.call(t)}}function Ct(e,t,n,o){function i(e,t){t.updater=a,e.stateNode=t,t._reactInternalFiber=e}var a={isMounted:Ce,enqueueSetState:function(n,r,o){n=n._reactInternalFiber,o=void 0===o?null:o;var i=t(n);bt(n,{expirationTime:i,partialState:r,callback:o,isReplace:!1,isForced:!1,nextCallback:null,next:null}),e(n,i)},enqueueReplaceState:function(n,r,o){n=n._reactInternalFiber,o=void 0===o?null:o;var i=t(n);bt(n,{expirationTime:i,partialState:r,callback:o,isReplace:!0,isForced:!1,nextCallback:null,next:null}),e(n,i)},enqueueForceUpdate:function(n,r){n=n._reactInternalFiber,r=void 0===r?null:r;var o=t(n);bt(n,{expirationTime:o,partialState:null,callback:r,isReplace:!1,isForced:!0,nextCallback:null,next:null}),e(n,o)}};return{adoptClassInstance:i,constructClassInstance:function(e,t){var n=e.type,r=Xe(e),o=2===e.tag&&null!=e.type.contextTypes,a=o?Ze(e,r):Pn;return t=new n(t,a),i(e,t),o&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=a),t},mountClassInstance:function(e,t){var n=e.alternate,o=e.stateNode,i=o.state||null,l=e.pendingProps;l||r("158");var u=Xe(e);o.props=l,o.state=e.memoizedState=i,o.refs=Pn,o.context=Ze(e,u),null!=e.type&&null!=e.type.prototype&&!0===e.type.prototype.unstable_isAsyncReactComponent&&(e.internalContextTag|=1),"function"==typeof o.componentWillMount&&(i=o.state,o.componentWillMount(),i!==o.state&&a.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(o.state=wt(n,e,i,o,l,t))),"function"==typeof o.componentDidMount&&(e.effectTag|=4)},updateClassInstance:function(e,t,i){var l=t.stateNode;l.props=t.memoizedProps,l.state=t.memoizedState;var u=t.memoizedProps,s=t.pendingProps;s||null==(s=u)&&r("159");var c=l.context,p=Xe(t);if(p=Ze(t,p),"function"!=typeof l.componentWillReceiveProps||u===s&&c===p||(c=l.state,l.componentWillReceiveProps(s,p),l.state!==c&&a.enqueueReplaceState(l,l.state,null)),c=t.memoizedState,i=null!==t.updateQueue?wt(e,t,t.updateQueue,l,s,i):c,!(u!==s||c!==i||go.current||null!==t.updateQueue&&t.updateQueue.hasForceUpdate))return"function"!=typeof l.componentDidUpdate||u===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),!1;var f=s;if(null===u||null!==t.updateQueue&&t.updateQueue.hasForceUpdate)f=!0;else{var d=t.stateNode,h=t.type;f="function"==typeof d.shouldComponentUpdate?d.shouldComponentUpdate(f,i,p):!h.prototype||!h.prototype.isPureReactComponent||(!Tn(u,f)||!Tn(c,i))}return f?("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(s,i,p),"function"==typeof l.componentDidUpdate&&(t.effectTag|=4)):("function"!=typeof l.componentDidUpdate||u===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),n(t,s),o(t,i)),l.props=s,l.state=i,l.context=p,f}}}function Et(e){return null===e||void 0===e?null:(e=To&&e[To]||e["@@iterator"],"function"==typeof e?e:null)}function Tt(e,t){var n=t.ref;if(null!==n&&"function"!=typeof n){if(t._owner){t=t._owner;var o=void 0;t&&(2!==t.tag&&r("110"),o=t.stateNode),o||r("147",n);var i=""+n;return null!==e&&null!==e.ref&&e.ref._stringRef===i?e.ref:(e=function(e){var t=o.refs===Pn?o.refs={}:o.refs;null===e?delete t[i]:t[i]=e},e._stringRef=i,e)}"string"!=typeof n&&r("148"),t._owner||r("149",n)}return n}function _t(e,t){"textarea"!==e.type&&r("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function St(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function o(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function i(e,t,n){return e=at(e,t,n),e.index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index,r<n?(t.effectTag=2,n):r):(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?(t=st(n,e.internalContextTag,r),t.return=e,t):(t=i(t,n,r),t.return=e,t)}function s(e,t,n,r){return null!==t&&t.type===n.type?(r=i(t,n.props,r),r.ref=Tt(t,n),r.return=e,r):(r=lt(n,e.internalContextTag,r),r.ref=Tt(t,n),r.return=e,r)}function c(e,t,n,r){return null===t||7!==t.tag?(t=ct(n,e.internalContextTag,r),t.return=e,t):(t=i(t,n,r),t.return=e,t)}function p(e,t,n,r){return null===t||9!==t.tag?(t=pt(n,e.internalContextTag,r),t.type=n.value,t.return=e,t):(t=i(t,null,r),t.type=n.value,t.return=e,t)}function f(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?(t=ft(n,e.internalContextTag,r),t.return=e,t):(t=i(t,n.children||[],r),t.return=e,t)}function d(e,t,n,r,o){return null===t||10!==t.tag?(t=ut(n,e.internalContextTag,r,o),t.return=e,t):(t=i(t,n,r),t.return=e,t)}function h(e,t,n){if("string"==typeof t||"number"==typeof t)return t=st(""+t,e.internalContextTag,n),t.return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ko:return t.type===Eo?(t=ut(t.props.children,e.internalContextTag,n,t.key),t.return=e,t):(n=lt(t,e.internalContextTag,n),n.ref=Tt(null,t),n.return=e,n);case wo:return t=ct(t,e.internalContextTag,n),t.return=e,t;case xo:return n=pt(t,e.internalContextTag,n),n.type=t.value,n.return=e,n;case Co:return t=ft(t,e.internalContextTag,n),t.return=e,t}if(_o(t)||Et(t))return t=ut(t,e.internalContextTag,n,null),t.return=e,t;_t(e,t)}return null}function g(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ko:return n.key===o?n.type===Eo?d(e,t,n.props.children,r,o):s(e,t,n,r):null;case wo:return n.key===o?c(e,t,n,r):null;case xo:return null===o?p(e,t,n,r):null;case Co:return n.key===o?f(e,t,n,r):null}if(_o(n)||Et(n))return null!==o?null:d(e,t,n,r,null);_t(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return e=e.get(n)||null,u(t,e,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ko:return e=e.get(null===r.key?n:r.key)||null,r.type===Eo?d(t,e,r.props.children,o,r.key):s(t,e,r,o);case wo:return e=e.get(null===r.key?n:r.key)||null,c(t,e,r,o);case xo:return e=e.get(n)||null,p(t,e,r,o);case Co:return e=e.get(null===r.key?n:r.key)||null,f(t,e,r,o)}if(_o(r)||Et(r))return e=e.get(n)||null,d(t,e,r,o,null);_t(t,r)}return null}function y(r,i,l,u){for(var s=null,c=null,p=i,f=i=0,d=null;null!==p&&f<l.length;f++){p.index>f?(d=p,p=null):d=p.sibling;var y=g(r,p,l[f],u);if(null===y){null===p&&(p=d);break}e&&p&&null===y.alternate&&t(r,p),i=a(y,i,f),null===c?s=y:c.sibling=y,c=y,p=d}if(f===l.length)return n(r,p),s;if(null===p){for(;f<l.length;f++)(p=h(r,l[f],u))&&(i=a(p,i,f),null===c?s=p:c.sibling=p,c=p);return s}for(p=o(r,p);f<l.length;f++)(d=m(p,r,f,l[f],u))&&(e&&null!==d.alternate&&p.delete(null===d.key?f:d.key),i=a(d,i,f),null===c?s=d:c.sibling=d,c=d);return e&&p.forEach(function(e){return t(r,e)}),s}function v(i,l,u,s){var c=Et(u);"function"!=typeof c&&r("150"),null==(u=c.call(u))&&r("151");for(var p=c=null,f=l,d=l=0,y=null,v=u.next();null!==f&&!v.done;d++,v=u.next()){f.index>d?(y=f,f=null):y=f.sibling;var b=g(i,f,v.value,s);if(null===b){f||(f=y);break}e&&f&&null===b.alternate&&t(i,f),l=a(b,l,d),null===p?c=b:p.sibling=b,p=b,f=y}if(v.done)return n(i,f),c;if(null===f){for(;!v.done;d++,v=u.next())null!==(v=h(i,v.value,s))&&(l=a(v,l,d),null===p?c=v:p.sibling=v,p=v);return c}for(f=o(i,f);!v.done;d++,v=u.next())null!==(v=m(f,i,d,v.value,s))&&(e&&null!==v.alternate&&f.delete(null===v.key?d:v.key),l=a(v,l,d),null===p?c=v:p.sibling=v,p=v);return e&&f.forEach(function(e){return t(i,e)}),c}return function(e,o,a,u){"object"==typeof a&&null!==a&&a.type===Eo&&null===a.key&&(a=a.props.children);var s="object"==typeof a&&null!==a;if(s)switch(a.$$typeof){case ko:e:{var c=a.key;for(s=o;null!==s;){if(s.key===c){if(10===s.tag?a.type===Eo:s.type===a.type){n(e,s.sibling),o=i(s,a.type===Eo?a.props.children:a.props,u),o.ref=Tt(s,a),o.return=e,e=o;break e}n(e,s);break}t(e,s),s=s.sibling}a.type===Eo?(o=ut(a.props.children,e.internalContextTag,u,a.key),o.return=e,e=o):(u=lt(a,e.internalContextTag,u),u.ref=Tt(o,a),u.return=e,e=u)}return l(e);case wo:e:{for(s=a.key;null!==o;){if(o.key===s){if(7===o.tag){n(e,o.sibling),o=i(o,a,u),o.return=e,e=o;break e}n(e,o);break}t(e,o),o=o.sibling}o=ct(a,e.internalContextTag,u),o.return=e,e=o}return l(e);case xo:e:{if(null!==o){if(9===o.tag){n(e,o.sibling),o=i(o,null,u),o.type=a.value,o.return=e,e=o;break e}n(e,o)}o=pt(a,e.internalContextTag,u),o.type=a.value,o.return=e,e=o}return l(e);case Co:e:{for(s=a.key;null!==o;){if(o.key===s){if(4===o.tag&&o.stateNode.containerInfo===a.containerInfo&&o.stateNode.implementation===a.implementation){n(e,o.sibling),o=i(o,a.children||[],u),o.return=e,e=o;break e}n(e,o);break}t(e,o),o=o.sibling}o=ft(a,e.internalContextTag,u),o.return=e,e=o}return l(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==o&&6===o.tag?(n(e,o.sibling),o=i(o,a,u)):(n(e,o),o=st(a,e.internalContextTag,u)),o.return=e,e=o,l(e);if(_o(a))return y(e,o,a,u);if(Et(a))return v(e,o,a,u);if(s&&_t(e,a),void 0===a)switch(e.tag){case 2:case 1:u=e.type,r("152",u.displayName||u.name||"Component")}return n(e,o)}}function Pt(e,t,n,o,i){function a(e,t,n){var r=t.expirationTime;t.child=null===e?Po(t,null,n,r):So(t,e.child,n,r)}function l(e,t){var n=t.ref;null===n||e&&e.ref===n||(t.effectTag|=128)}function u(e,t,n,r){if(l(e,t),!n)return r&&ot(t,!1),c(e,t);n=t.stateNode,Vr.current=t;var o=n.render();return t.effectTag|=1,a(e,t,o),t.memoizedState=n.state,t.memoizedProps=n.props,r&&ot(t,!0),t.child}function s(e){var t=e.stateNode;t.pendingContext?tt(e,t.pendingContext,t.pendingContext!==t.context):t.context&&tt(e,t.context,!1),m(e,t.containerInfo)}function c(e,t){if(null!==e&&t.child!==e.child&&r("153"),null!==t.child){e=t.child;var n=at(e,e.pendingProps,e.expirationTime);for(t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,n=n.sibling=at(e,e.pendingProps,e.expirationTime),n.return=t;n.sibling=null}return t.child}function p(e,t){switch(t.tag){case 3:s(t);break;case 2:rt(t);break;case 4:m(t,t.stateNode.containerInfo)}return null}var f=e.shouldSetTextContent,d=e.useSyncScheduling,h=e.shouldDeprioritizeSubtree,g=t.pushHostContext,m=t.pushHostContainer,y=n.enterHydrationState,v=n.resetHydrationState,b=n.tryToClaimNextHydratableInstance;e=Ct(o,i,function(e,t){e.memoizedProps=t},function(e,t){e.memoizedState=t});var k=e.adoptClassInstance,w=e.constructClassInstance,x=e.mountClassInstance,C=e.updateClassInstance;return{beginWork:function(e,t,n){if(0===t.expirationTime||t.expirationTime>n)return p(e,t);switch(t.tag){case 0:null!==e&&r("155");var o=t.type,i=t.pendingProps,E=Xe(t);return E=Ze(t,E),o=o(i,E),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render?(t.tag=2,i=rt(t),k(t,o),x(t,n),t=u(e,t,!0,i)):(t.tag=1,a(e,t,o),t.memoizedProps=i,t=t.child),t;case 1:e:{if(i=t.type,n=t.pendingProps,o=t.memoizedProps,go.current)null===n&&(n=o);else if(null===n||o===n){t=c(e,t);break e}o=Xe(t),o=Ze(t,o),i=i(n,o),t.effectTag|=1,a(e,t,i),t.memoizedProps=n,t=t.child}return t;case 2:return i=rt(t),o=void 0,null===e?t.stateNode?r("153"):(w(t,t.pendingProps),x(t,n),o=!0):o=C(e,t,n),u(e,t,o,i);case 3:return s(t),i=t.updateQueue,null!==i?(o=t.memoizedState,i=wt(e,t,i,null,null,n),o===i?(v(),t=c(e,t)):(o=i.element,E=t.stateNode,(null===e||null===e.child)&&E.hydrate&&y(t)?(t.effectTag|=2,t.child=Po(t,null,o,n)):(v(),a(e,t,o)),t.memoizedState=i,t=t.child)):(v(),t=c(e,t)),t;case 5:g(t),null===e&&b(t),i=t.type;var T=t.memoizedProps;return o=t.pendingProps,null===o&&null===(o=T)&&r("154"),E=null!==e?e.memoizedProps:null,go.current||null!==o&&T!==o?(T=o.children,f(i,o)?T=null:E&&f(i,E)&&(t.effectTag|=16),l(e,t),2147483647!==n&&!d&&h(i,o)?(t.expirationTime=2147483647,t=null):(a(e,t,T),t.memoizedProps=o,t=t.child)):t=c(e,t),t;case 6:return null===e&&b(t),e=t.pendingProps,null===e&&(e=t.memoizedProps),t.memoizedProps=e,null;case 8:t.tag=7;case 7:return i=t.pendingProps,go.current?null===i&&null===(i=e&&e.memoizedProps)&&r("154"):null!==i&&t.memoizedProps!==i||(i=t.memoizedProps),o=i.children,t.stateNode=null===e?Po(t,t.stateNode,o,n):So(t,t.stateNode,o,n),t.memoizedProps=i,t.stateNode;case 9:return null;case 4:e:{if(m(t,t.stateNode.containerInfo),i=t.pendingProps,go.current)null===i&&null==(i=e&&e.memoizedProps)&&r("154");else if(null===i||t.memoizedProps===i){t=c(e,t);break e}null===e?t.child=So(t,null,i,n):a(e,t,i),t.memoizedProps=i,t=t.child}return t;case 10:e:{if(n=t.pendingProps,go.current)null===n&&(n=t.memoizedProps);else if(null===n||t.memoizedProps===n){t=c(e,t);break e}a(e,t,n),t.memoizedProps=n,t=t.child}return t;default:r("156")}},beginFailedWork:function(e,t,n){switch(t.tag){case 2:rt(t);break;case 3:s(t);break;default:r("157")}return t.effectTag|=64,null===e?t.child=null:t.child!==e.child&&(t.child=e.child),0===t.expirationTime||t.expirationTime>n?p(e,t):(t.firstEffect=null,t.lastEffect=null,t.child=null===e?Po(t,null,null,n):So(t,e.child,null,n),2===t.tag&&(e=t.stateNode,t.memoizedProps=e.props,t.memoizedState=e.state),t.child)}}}function Ot(e,t,n){function o(e){e.effectTag|=4}var i=e.createInstance,a=e.createTextInstance,l=e.appendInitialChild,u=e.finalizeInitialChildren,s=e.prepareUpdate,c=e.persistence,p=t.getRootHostContainer,f=t.popHostContext,d=t.getHostContext,h=t.popHostContainer,g=n.prepareToHydrateHostInstance,m=n.prepareToHydrateHostTextInstance,y=n.popHydrationState,v=void 0,b=void 0,k=void 0;return e.mutation?(v=function(){},b=function(e,t,n){(t.updateQueue=n)&&o(t)},k=function(e,t,n,r){n!==r&&o(t)}):r(c?"235":"236"),{completeWork:function(e,t,n){var c=t.pendingProps;switch(null===c?c=t.memoizedProps:2147483647===t.expirationTime&&2147483647!==n||(t.pendingProps=null),t.tag){case 1:return null;case 2:return et(t),null;case 3:return h(t),Ge(go,t),Ge(ho,t),c=t.stateNode,c.pendingContext&&(c.context=c.pendingContext,c.pendingContext=null),null!==e&&null!==e.child||(y(t),t.effectTag&=-3),v(t),null;case 5:f(t),n=p();var w=t.type;if(null!==e&&null!=t.stateNode){var x=e.memoizedProps,C=t.stateNode,E=d();C=s(C,w,x,c,n,E),b(e,t,C,w,x,c,n),e.ref!==t.ref&&(t.effectTag|=128)}else{if(!c)return null===t.stateNode&&r("166"),null;if(e=d(),y(t))g(t,n,e)&&o(t);else{e=i(w,c,n,e,t);e:for(x=t.child;null!==x;){if(5===x.tag||6===x.tag)l(e,x.stateNode);else if(4!==x.tag&&null!==x.child){x.child.return=x,x=x.child;continue}if(x===t)break;for(;null===x.sibling;){if(null===x.return||x.return===t)break e;x=x.return}x.sibling.return=x.return,x=x.sibling}u(e,w,c,n)&&o(t),t.stateNode=e}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)k(e,t,e.memoizedProps,c);else{if("string"!=typeof c)return null===t.stateNode&&r("166"),null;e=p(),n=d(),y(t)?m(t)&&o(t):t.stateNode=a(c,e,n,t)}return null;case 7:(c=t.memoizedProps)||r("165"),t.tag=8,w=[];e:for((x=t.stateNode)&&(x.return=t);null!==x;){if(5===x.tag||6===x.tag||4===x.tag)r("247");else if(9===x.tag)w.push(x.type);else if(null!==x.child){x.child.return=x,x=x.child;continue}for(;null===x.sibling;){if(null===x.return||x.return===t)break e;x=x.return}x.sibling.return=x.return,x=x.sibling}return x=c.handler,c=x(c.props,w),t.child=So(t,null!==e?e.child:null,c,n),t.child;case 8:return t.tag=7,null;case 9:case 10:return null;case 4:return h(t),v(t),null;case 0:r("167");default:r("156")}}}}function Nt(e,t){function n(e){var n=e.ref;if(null!==n)try{n(null)}catch(n){t(e,n)}}function o(e){switch("function"==typeof mt&&mt(e),e.tag){case 2:n(e);var r=e.stateNode;if("function"==typeof r.componentWillUnmount)try{r.props=e.memoizedProps,r.state=e.memoizedState,r.componentWillUnmount()}catch(n){t(e,n)}break;case 5:n(e);break;case 7:i(e.stateNode);break;case 4:s&&l(e)}}function i(e){for(var t=e;;)if(o(t),null===t.child||s&&4===t.tag){if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}else t.child.return=t,t=t.child}function a(e){return 5===e.tag||3===e.tag||4===e.tag}function l(e){for(var t=e,n=!1,a=void 0,l=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&r("160"),n.tag){case 5:a=n.stateNode,l=!1;break e;case 3:case 4:a=n.stateNode.containerInfo,l=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag)i(t),l?b(a,t.stateNode):v(a,t.stateNode);else if(4===t.tag?a=t.stateNode.containerInfo:o(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return,4===t.tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}var u=e.getPublicInstance,s=e.mutation;e=e.persistence,s||r(e?"235":"236");var c=s.commitMount,p=s.commitUpdate,f=s.resetTextContent,d=s.commitTextUpdate,h=s.appendChild,g=s.appendChildToContainer,m=s.insertBefore,y=s.insertInContainerBefore,v=s.removeChild,b=s.removeChildFromContainer;return{commitResetTextContent:function(e){f(e.stateNode)},commitPlacement:function(e){e:{for(var t=e.return;null!==t;){if(a(t)){var n=t;break e}t=t.return}r("160"),n=void 0}var o=t=void 0;switch(n.tag){case 5:t=n.stateNode,o=!1;break;case 3:case 4:t=n.stateNode.containerInfo,o=!0;break;default:r("161")}16&n.effectTag&&(f(t),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||a(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var i=e;;){if(5===i.tag||6===i.tag)n?o?y(t,i.stateNode,n):m(t,i.stateNode,n):o?g(t,i.stateNode):h(t,i.stateNode);else if(4!==i.tag&&null!==i.child){i.child.return=i,i=i.child;continue}if(i===e)break;for(;null===i.sibling;){if(null===i.return||i.return===e)return;i=i.return}i.sibling.return=i.return,i=i.sibling}},commitDeletion:function(e){l(e),e.return=null,e.child=null,e.alternate&&(e.alternate.child=null,e.alternate.return=null)},commitWork:function(e,t){switch(t.tag){case 2:break;case 5:var n=t.stateNode;if(null!=n){var o=t.memoizedProps;e=null!==e?e.memoizedProps:o;var i=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&p(n,a,i,e,o,t)}break;case 6:null===t.stateNode&&r("162"),n=t.memoizedProps,d(t.stateNode,null!==e?e.memoizedProps:n,n);break;case 3:break;default:r("163")}},commitLifeCycles:function(e,t){switch(t.tag){case 2:var n=t.stateNode;if(4&t.effectTag)if(null===e)n.props=t.memoizedProps,n.state=t.memoizedState,n.componentDidMount();else{var o=e.memoizedProps;e=e.memoizedState,n.props=t.memoizedProps,n.state=t.memoizedState,n.componentDidUpdate(o,e)}t=t.updateQueue,null!==t&&xt(t,n);break;case 3:n=t.updateQueue,null!==n&&xt(n,null!==t.child?t.child.stateNode:null);break;case 5:n=t.stateNode,null===e&&4&t.effectTag&&c(n,t.type,t.memoizedProps,t);break;case 6:case 4:break;default:r("163")}},commitAttachRef:function(e){var t=e.ref;if(null!==t){var n=e.stateNode;switch(e.tag){case 5:t(u(n));break;default:t(n)}}},commitDetachRef:function(e){null!==(e=e.ref)&&e(null)}}}function It(e){function t(e){return e===Oo&&r("174"),e}var n=e.getChildHostContext,o=e.getRootHostContext,i={current:Oo},a={current:Oo},l={current:Oo};return{getHostContext:function(){return t(i.current)},getRootHostContainer:function(){return t(l.current)},popHostContainer:function(e){Ge(i,e),Ge(a,e),Ge(l,e)},popHostContext:function(e){a.current===e&&(Ge(i,e),Ge(a,e))},pushHostContainer:function(e,t){Ye(l,t,e),t=o(t),Ye(a,e,e),Ye(i,t,e)},pushHostContext:function(e){var r=t(l.current),o=t(i.current);r=n(o,e.type,r),o!==r&&(Ye(a,e,e),Ye(i,r,e))},resetHostContainer:function(){i.current=Oo,l.current=Oo}}}function Rt(e){function t(e,t){var n=new it(5,null,0);n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function n(e,t){switch(e.tag){case 5:return null!==(t=a(t,e.type,e.pendingProps))&&(e.stateNode=t,!0);case 6:return null!==(t=l(t,e.pendingProps))&&(e.stateNode=t,!0);default:return!1}}function o(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;f=e}var i=e.shouldSetTextContent;if(!(e=e.hydration))return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){r("175")},prepareToHydrateHostTextInstance:function(){r("176")},popHydrationState:function(){return!1}};var a=e.canHydrateInstance,l=e.canHydrateTextInstance,u=e.getNextHydratableSibling,s=e.getFirstHydratableChild,c=e.hydrateInstance,p=e.hydrateTextInstance,f=null,d=null,h=!1;return{enterHydrationState:function(e){return d=s(e.stateNode.containerInfo),f=e,h=!0},resetHydrationState:function(){d=f=null,h=!1},tryToClaimNextHydratableInstance:function(e){if(h){var r=d;if(r){if(!n(e,r)){if(!(r=u(r))||!n(e,r))return e.effectTag|=2,h=!1,void(f=e);t(f,d)}f=e,d=s(r)}else e.effectTag|=2,h=!1,f=e}},prepareToHydrateHostInstance:function(e,t,n){return t=c(e.stateNode,e.type,e.memoizedProps,t,n,e),e.updateQueue=t,null!==t},prepareToHydrateHostTextInstance:function(e){return p(e.stateNode,e.memoizedProps,e)},popHydrationState:function(e){if(e!==f)return!1;if(!h)return o(e),h=!0,!1;var n=e.type;if(5!==e.tag||"head"!==n&&"body"!==n&&!i(n,e.memoizedProps))for(n=d;n;)t(e,n),n=u(n);return o(e),d=f?u(e.stateNode):null,!0}}}function Mt(e){function t(e){ie=G=!0;var t=e.stateNode;if(t.current===e&&r("177"),t.isReadyForCommit=!1,Vr.current=null,1<e.effectTag)if(null!==e.lastEffect){e.lastEffect.nextEffect=e;var n=e.firstEffect}else n=e;else n=e.firstEffect;for($(),J=n;null!==J;){var o=!1,i=void 0;try{for(;null!==J;){var a=J.effectTag;if(16&a&&M(J),128&a){var l=J.alternate;null!==l&&j(l)}switch(-242&a){case 2:D(J),J.effectTag&=-3;break;case 6:D(J),J.effectTag&=-3,A(J.alternate,J);break;case 4:A(J.alternate,J);break;case 8:ae=!0,L(J),ae=!1}J=J.nextEffect}}catch(e){o=!0,i=e}o&&(null===J&&r("178"),u(J,i),null!==J&&(J=J.nextEffect))}for(W(),t.current=e,J=n;null!==J;){n=!1,o=void 0;try{for(;null!==J;){var s=J.effectTag;if(36&s&&F(J.alternate,J),128&s&&U(J),64&s)switch(i=J,a=void 0,null!==ee&&(a=ee.get(i),ee.delete(i),null==a&&null!==i.alternate&&(i=i.alternate,a=ee.get(i),ee.delete(i))),null==a&&r("184"),i.tag){case 2:i.stateNode.componentDidCatch(a.error,{componentStack:a.componentStack});break;case 3:null===re&&(re=a.error);break;default:r("157")}var c=J.nextEffect;J.nextEffect=null,J=c}}catch(e){n=!0,o=e}n&&(null===J&&r("178"),u(J,o),null!==J&&(J=J.nextEffect))}return G=ie=!1,"function"==typeof gt&&gt(e.stateNode),ne&&(ne.forEach(g),ne=null),null!==re&&(e=re,re=null,C(e)),t=t.current.expirationTime,0===t&&(te=ee=null),t}function n(e){for(;;){var t=R(e.alternate,e,Z),n=e.return,r=e.sibling,o=e;if(2147483647===Z||2147483647!==o.expirationTime){if(2!==o.tag&&3!==o.tag)var i=0;else i=o.updateQueue,i=null===i?0:i.expirationTime;for(var a=o.child;null!==a;)0!==a.expirationTime&&(0===i||i>a.expirationTime)&&(i=a.expirationTime),a=a.sibling;o.expirationTime=i}if(null!==t)return t;if(null!==n&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e)),null!==r)return r;if(null===n){e.stateNode.isReadyForCommit=!0;break}e=n}return null}function o(e){var t=N(e.alternate,e,Z);return null===t&&(t=n(e)),Vr.current=null,t}function i(e){var t=I(e.alternate,e,Z);return null===t&&(t=n(e)),Vr.current=null,t}function a(e){if(null!==ee){if(!(0===Z||Z>e))if(Z<=q)for(;null!==Y;)Y=s(Y)?i(Y):o(Y);else for(;null!==Y&&!x();)Y=s(Y)?i(Y):o(Y)}else if(!(0===Z||Z>e))if(Z<=q)for(;null!==Y;)Y=o(Y);else for(;null!==Y&&!x();)Y=o(Y)}function l(e,t){if(G&&r("243"),G=!0,e.isReadyForCommit=!1,e!==X||t!==Z||null===Y){for(;-1<fo;)po[fo]=null,fo--;mo=Pn,ho.current=Pn,go.current=!1,P(),X=e,Z=t,Y=at(X.current,null,t)}var n=!1,o=null;try{a(t)}catch(e){n=!0,o=e}for(;n;){if(oe){re=o;break}var l=Y;if(null===l)oe=!0;else{var s=u(l,o);if(null===s&&r("183"),!oe){try{for(n=s,o=t,s=n;null!==l;){switch(l.tag){case 2:et(l);break;case 5:S(l);break;case 3:_(l);break;case 4:_(l)}if(l===s||l.alternate===s)break;l=l.return}Y=i(n),a(o)}catch(e){n=!0,o=e;continue}break}}}return t=re,oe=G=!1,re=null,null!==t&&C(t),e.isReadyForCommit?e.current.alternate:null}function u(e,t){var n=Vr.current=null,r=!1,o=!1,i=null;if(3===e.tag)n=e,c(e)&&(oe=!0);else for(var a=e.return;null!==a&&null===n;){if(2===a.tag?"function"==typeof a.stateNode.componentDidCatch&&(r=!0,i=we(a),n=a,o=!0):3===a.tag&&(n=a),c(a)){if(ae||null!==ne&&(ne.has(a)||null!==a.alternate&&ne.has(a.alternate)))return null;n=null,o=!1}a=a.return}if(null!==n){null===te&&(te=new Set),te.add(n);var l="";a=e;do{e:switch(a.tag){case 0:case 1:case 2:case 5:var u=a._debugOwner,s=a._debugSource,p=we(a),f=null;u&&(f=we(u)),u=s,p="\n    in "+(p||"Unknown")+(u?" (at "+u.fileName.replace(/^.*[\\\/]/,"")+":"+u.lineNumber+")":f?" (created by "+f+")":"");break e;default:p=""}l+=p,a=a.return}while(a);a=l,e=we(e),null===ee&&(ee=new Map),t={componentName:e,componentStack:a,error:t,errorBoundary:r?n.stateNode:null,errorBoundaryFound:r,errorBoundaryName:i,willRetry:o},ee.set(n,t);try{var d=t.error;d&&d.suppressReactErrorLogging||console.error(d)}catch(e){e&&e.suppressReactErrorLogging||console.error(e)}return ie?(null===ne&&(ne=new Set),ne.add(n)):g(n),n}return null===re&&(re=t),null}function s(e){return null!==ee&&(ee.has(e)||null!==e.alternate&&ee.has(e.alternate))}function c(e){return null!==te&&(te.has(e)||null!==e.alternate&&te.has(e.alternate))}function p(){return 20*(1+((m()+100)/20|0))}function f(e){return 0!==Q?Q:G?ie?1:Z:!B||1&e.internalContextTag?p():1}function d(e,t){return h(e,t,!1)}function h(e,t){for(;null!==e;){if((0===e.expirationTime||e.expirationTime>t)&&(e.expirationTime=t),null!==e.alternate&&(0===e.alternate.expirationTime||e.alternate.expirationTime>t)&&(e.alternate.expirationTime=t),null===e.return){if(3!==e.tag)break;var n=e.stateNode;!G&&n===X&&t<Z&&(Y=X=null,Z=0);var o=n,i=t;if(xe>ke&&r("185"),null===o.nextScheduledRoot)o.remainingExpirationTime=i,null===ue?(le=ue=o,o.nextScheduledRoot=o):(ue=ue.nextScheduledRoot=o,ue.nextScheduledRoot=le);else{var a=o.remainingExpirationTime;(0===a||i<a)&&(o.remainingExpirationTime=i)}pe||(ve?be&&(fe=o,de=1,w(fe,de)):1===i?k(1,null):y(i)),!G&&n===X&&t<Z&&(Y=X=null,Z=0)}e=e.return}}function g(e){h(e,1,!0)}function m(){return q=2+((H()-K)/10|0)}function y(e){if(0!==se){if(e>se)return;z(ce)}var t=H()-K;se=e,ce=V(b,{timeout:10*(e-2)-t})}function v(){var e=0,t=null;if(null!==ue)for(var n=ue,o=le;null!==o;){var i=o.remainingExpirationTime;if(0===i){if((null===n||null===ue)&&r("244"),o===o.nextScheduledRoot){le=ue=o.nextScheduledRoot=null;break}if(o===le)le=i=o.nextScheduledRoot,ue.nextScheduledRoot=i,o.nextScheduledRoot=null;else{if(o===ue){ue=n,ue.nextScheduledRoot=le,o.nextScheduledRoot=null;break}n.nextScheduledRoot=o.nextScheduledRoot,o.nextScheduledRoot=null}o=n.nextScheduledRoot}else{if((0===e||i<e)&&(e=i,t=o),o===ue)break;n=o,o=o.nextScheduledRoot}}n=fe,null!==n&&n===t?xe++:xe=0,fe=t,de=e}function b(e){k(0,e)}function k(e,t){for(ye=t,v();null!==fe&&0!==de&&(0===e||de<=e)&&!he;)w(fe,de),v();if(null!==ye&&(se=0,ce=-1),0!==de&&y(de),ye=null,he=!1,xe=0,ge)throw e=me,me=null,ge=!1,e}function w(e,n){if(pe&&r("245"),pe=!0,n<=m()){var o=e.finishedWork;null!==o?(e.finishedWork=null,e.remainingExpirationTime=t(o)):(e.finishedWork=null,null!==(o=l(e,n))&&(e.remainingExpirationTime=t(o)))}else o=e.finishedWork,null!==o?(e.finishedWork=null,e.remainingExpirationTime=t(o)):(e.finishedWork=null,null!==(o=l(e,n))&&(x()?e.finishedWork=o:e.remainingExpirationTime=t(o)));pe=!1}function x(){return!(null===ye||ye.timeRemaining()>Ce)&&(he=!0)}function C(e){null===fe&&r("246"),fe.remainingExpirationTime=0,ge||(ge=!0,me=e)}var E=It(e),T=Rt(e),_=E.popHostContainer,S=E.popHostContext,P=E.resetHostContainer,O=Pt(e,E,T,d,f),N=O.beginWork,I=O.beginFailedWork,R=Ot(e,E,T).completeWork;E=Nt(e,u);var M=E.commitResetTextContent,D=E.commitPlacement,L=E.commitDeletion,A=E.commitWork,F=E.commitLifeCycles,U=E.commitAttachRef,j=E.commitDetachRef,H=e.now,V=e.scheduleDeferredCallback,z=e.cancelDeferredCallback,B=e.useSyncScheduling,$=e.prepareForCommit,W=e.resetAfterCommit,K=H(),q=2,Q=0,G=!1,Y=null,X=null,Z=0,J=null,ee=null,te=null,ne=null,re=null,oe=!1,ie=!1,ae=!1,le=null,ue=null,se=0,ce=-1,pe=!1,fe=null,de=0,he=!1,ge=!1,me=null,ye=null,ve=!1,be=!1,ke=1e3,xe=0,Ce=1;return{computeAsyncExpiration:p,computeExpirationForFiber:f,scheduleWork:d,batchedUpdates:function(e,t){var n=ve;ve=!0;try{return e(t)}finally{(ve=n)||pe||k(1,null)}},unbatchedUpdates:function(e){if(ve&&!be){be=!0;try{return e()}finally{be=!1}}return e()},flushSync:function(e){var t=ve;ve=!0;try{e:{var n=Q;Q=1;try{var o=e();break e}finally{Q=n}o=void 0}return o}finally{ve=t,pe&&r("187"),k(1,null)}},deferredUpdates:function(e){var t=Q;Q=p();try{return e()}finally{Q=t}}}}function Dt(e){function t(e){return e=_e(e),null===e?null:e.stateNode}var n=e.getPublicInstance;e=Mt(e);var o=e.computeAsyncExpiration,i=e.computeExpirationForFiber,a=e.scheduleWork;return{createContainer:function(e,t){var n=new it(3,null,0);return e={current:n,containerInfo:e,pendingChildren:null,remainingExpirationTime:0,isReadyForCommit:!1,finishedWork:null,context:null,pendingContext:null,hydrate:t,nextScheduledRoot:null},n.stateNode=e},updateContainer:function(e,t,n,l){var u=t.current;if(n){n=n._reactInternalFiber;var s;e:{for(2===xe(n)&&2===n.tag||r("170"),s=n;3!==s.tag;){if(Je(s)){s=s.stateNode.__reactInternalMemoizedMergedChildContext;break e}(s=s.return)||r("171")}s=s.stateNode.context}n=Je(n)?nt(n,s):s}else n=Pn;null===t.context?t.context=n:t.pendingContext=n,t=l,t=void 0===t?null:t,l=null!=e&&null!=e.type&&null!=e.type.prototype&&!0===e.type.prototype.unstable_isAsyncReactComponent?o():i(u),bt(u,{expirationTime:l,partialState:{element:e},callback:t,isReplace:!1,isForced:!1,nextCallback:null,next:null}),a(u,l)},batchedUpdates:e.batchedUpdates,unbatchedUpdates:e.unbatchedUpdates,deferredUpdates:e.deferredUpdates,flushSync:e.flushSync,getPublicRootInstance:function(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return n(e.child.stateNode);default:return e.child.stateNode}},findHostInstance:t,findHostInstanceWithNoPortals:function(e){return e=Se(e),null===e?null:e.stateNode},injectIntoDevTools:function(e){var n=e.findFiberByHostInstance;return ht(wn({},e,{findHostInstanceByFiber:function(e){return t(e)},findFiberByHostInstance:function(e){return n?n(e):null}}))}}}function Lt(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Co,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function At(e){return!!Go.hasOwnProperty(e)||!Qo.hasOwnProperty(e)&&(qo.test(e)?Go[e]=!0:(Qo[e]=!0,!1))}function Ft(e,t,n){var r=a(t);if(r&&i(t,n)){var o=r.mutationMethod;o?o(e,n):null==n||r.hasBooleanValue&&!n||r.hasNumericValue&&isNaN(n)||r.hasPositiveNumericValue&&1>n||r.hasOverloadedBooleanValue&&!1===n?jt(e,t):r.mustUseProperty?e[r.propertyName]=n:(t=r.attributeName,(o=r.attributeNamespace)?e.setAttributeNS(o,t,""+n):r.hasBooleanValue||r.hasOverloadedBooleanValue&&!0===n?e.setAttribute(t,""):e.setAttribute(t,""+n))}else Ut(e,t,i(t,n)?n:null)}function Ut(e,t,n){At(t)&&(null==n?e.removeAttribute(t):e.setAttribute(t,""+n))}function jt(e,t){var n=a(t);n?(t=n.mutationMethod)?t(e,void 0):n.mustUseProperty?e[n.propertyName]=!n.hasBooleanValue&&"":e.removeAttribute(n.attributeName):e.removeAttribute(t)}function Ht(e,t){var n=t.value,r=t.checked;return wn({type:void 0,step:void 0,min:void 0,max:void 0},t,{defaultChecked:void 0,defaultValue:void 0,value:null!=n?n:e._wrapperState.initialValue,checked:null!=r?r:e._wrapperState.initialChecked})}function Vt(e,t){var n=t.defaultValue;e._wrapperState={initialChecked:null!=t.checked?t.checked:t.defaultChecked,initialValue:null!=t.value?t.value:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function zt(e,t){null!=(t=t.checked)&&Ft(e,"checked",t)}function Bt(e,t){zt(e,t);var n=t.value;null!=n?0===n&&""===e.value?e.value="0":"number"===t.type?(t=parseFloat(e.value)||0,(n!=t||n==t&&e.value!=n)&&(e.value=""+n)):e.value!==""+n&&(e.value=""+n):(null==t.value&&null!=t.defaultValue&&e.defaultValue!==""+t.defaultValue&&(e.defaultValue=""+t.defaultValue),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked))}function $t(e,t){switch(t.type){case"submit":case"reset":break;case"color":case"date":case"datetime":case"datetime-local":case"month":case"time":case"week":e.value="",e.value=e.defaultValue;break;default:e.value=e.value}t=e.name,""!==t&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!e.defaultChecked,""!==t&&(e.name=t)}function Wt(e){var t="";return bn.Children.forEach(e,function(e){null==e||"string"!=typeof e&&"number"!=typeof e||(t+=e)}),t}function Kt(e,t){return e=wn({children:void 0},t),(t=Wt(t.children))&&(e.children=t),e}function qt(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+n,t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Qt(e,t){var n=t.value;e._wrapperState={initialValue:null!=n?n:t.defaultValue,wasMultiple:!!t.multiple}}function Gt(e,t){return null!=t.dangerouslySetInnerHTML&&r("91"),wn({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Yt(e,t){var n=t.value;null==n&&(n=t.defaultValue,t=t.children,null!=t&&(null!=n&&r("92"),Array.isArray(t)&&(1>=t.length||r("93"),t=t[0]),n=""+t),null==n&&(n="")),e._wrapperState={initialValue:""+n}}function Xt(e,t){var n=t.value;null!=n&&(n=""+n,n!==e.value&&(e.value=n),null==t.defaultValue&&(e.defaultValue=n)),null!=t.defaultValue&&(e.defaultValue=t.defaultValue)}function Zt(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}function Jt(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function en(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Jt(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}function tn(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function nn(e,t){e=e.style;for(var n in t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=n,i=t[n];o=null==i||"boolean"==typeof i||""===i?"":r||"number"!=typeof i||0===i||Jo.hasOwnProperty(o)&&Jo[o]?(""+i).trim():i+"px","float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}function rn(e,t,n){t&&(ti[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&r("137",e,n()),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&r("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||r("61")),null!=t.style&&"object"!=typeof t.style&&r("62",n()))}function on(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function an(e,t){e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument;var n=Le(e);t=Yn[t];for(var r=0;r<t.length;r++){var o=t[r];n.hasOwnProperty(o)&&n[o]||("topScroll"===o?Ie("topScroll","scroll",e):"topFocus"===o||"topBlur"===o?(Ie("topFocus","focus",e),Ie("topBlur","blur",e),n.topBlur=!0,n.topFocus=!0):"topCancel"===o?(ne("cancel",!0)&&Ie("topCancel","cancel",e),n.topCancel=!0):"topClose"===o?(ne("close",!0)&&Ie("topClose","close",e),n.topClose=!0):Gr.hasOwnProperty(o)&&Ne(o,Gr[o],e),n[o]=!0)}}function ln(e,t,n,r){return n=9===n.nodeType?n:n.ownerDocument,r===ni&&(r=Jt(e)),r===ni?"script"===e?(e=n.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):e="string"==typeof t.is?n.createElement(e,{is:t.is}):n.createElement(e):e=n.createElementNS(r,e),e}function un(e,t){return(9===t.nodeType?t:t.ownerDocument).createTextNode(e)}function sn(e,t,n,r){var o=on(t,n);switch(t){case"iframe":case"object":Ne("topLoad","load",e);var i=n;break;case"video":case"audio":for(i in oi)oi.hasOwnProperty(i)&&Ne(i,oi[i],e);i=n;break;case"source":Ne("topError","error",e),i=n;break;case"img":case"image":Ne("topError","error",e),Ne("topLoad","load",e),i=n;break;case"form":Ne("topReset","reset",e),Ne("topSubmit","submit",e),i=n;break;case"details":Ne("topToggle","toggle",e),i=n;break;case"input":Vt(e,n),i=Ht(e,n),Ne("topInvalid","invalid",e),an(r,"onChange");break;case"option":i=Kt(e,n);break;case"select":Qt(e,n),i=wn({},n,{value:void 0}),Ne("topInvalid","invalid",e),an(r,"onChange");break;case"textarea":Yt(e,n),i=Gt(e,n),Ne("topInvalid","invalid",e),an(r,"onChange");break;default:i=n}rn(t,i,ri);var a,l=i;for(a in l)if(l.hasOwnProperty(a)){var u=l[a];"style"===a?nn(e,u,ri):"dangerouslySetInnerHTML"===a?null!=(u=u?u.__html:void 0)&&Zo(e,u):"children"===a?"string"==typeof u?("textarea"!==t||""!==u)&&tn(e,u):"number"==typeof u&&tn(e,""+u):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(Gn.hasOwnProperty(a)?null!=u&&an(r,a):o?Ut(e,a,u):null!=u&&Ft(e,a,u))}switch(t){case"input":ie(e),$t(e,n);break;case"textarea":ie(e),Zt(e,n);break;case"option":null!=n.value&&e.setAttribute("value",n.value);break;case"select":e.multiple=!!n.multiple,t=n.value,null!=t?qt(e,!!n.multiple,t,!1):null!=n.defaultValue&&qt(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof i.onClick&&(e.onclick=xn)}}function cn(e,t,n,r,o){var i=null;switch(t){case"input":n=Ht(e,n),r=Ht(e,r),i=[];break;case"option":n=Kt(e,n),r=Kt(e,r),i=[];break;case"select":n=wn({},n,{value:void 0}),r=wn({},r,{value:void 0}),i=[];break;case"textarea":n=Gt(e,n),r=Gt(e,r),i=[];break;default:"function"!=typeof n.onClick&&"function"==typeof r.onClick&&(e.onclick=xn)}rn(t,r,ri);var a,l;e=null;for(a in n)if(!r.hasOwnProperty(a)&&n.hasOwnProperty(a)&&null!=n[a])if("style"===a)for(l in t=n[a])t.hasOwnProperty(l)&&(e||(e={}),e[l]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(Gn.hasOwnProperty(a)?i||(i=[]):(i=i||[]).push(a,null));for(a in r){var u=r[a];if(t=null!=n?n[a]:void 0,r.hasOwnProperty(a)&&u!==t&&(null!=u||null!=t))if("style"===a)if(t){for(l in t)!t.hasOwnProperty(l)||u&&u.hasOwnProperty(l)||(e||(e={}),e[l]="");for(l in u)u.hasOwnProperty(l)&&t[l]!==u[l]&&(e||(e={}),e[l]=u[l])}else e||(i||(i=[]),i.push(a,e)),e=u;else"dangerouslySetInnerHTML"===a?(u=u?u.__html:void 0,t=t?t.__html:void 0,null!=u&&t!==u&&(i=i||[]).push(a,""+u)):"children"===a?t===u||"string"!=typeof u&&"number"!=typeof u||(i=i||[]).push(a,""+u):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(Gn.hasOwnProperty(a)?(null!=u&&an(o,a),i||t===u||(i=[])):(i=i||[]).push(a,u))}return e&&(i=i||[]).push("style",e),i}function pn(e,t,n,r,o){"input"===n&&"radio"===o.type&&null!=o.name&&zt(e,o),on(n,r),r=on(n,o);for(var i=0;i<t.length;i+=2){var a=t[i],l=t[i+1];"style"===a?nn(e,l,ri):"dangerouslySetInnerHTML"===a?Zo(e,l):"children"===a?tn(e,l):r?null!=l?Ut(e,a,l):e.removeAttribute(a):null!=l?Ft(e,a,l):jt(e,a)}switch(n){case"input":Bt(e,o);break;case"textarea":Xt(e,o);break;case"select":e._wrapperState.initialValue=void 0,t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,n=o.value,null!=n?qt(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?qt(e,!!o.multiple,o.defaultValue,!0):qt(e,!!o.multiple,o.multiple?[]:"",!1))}}function fn(e,t,n,r,o){switch(t){case"iframe":case"object":Ne("topLoad","load",e);break;case"video":case"audio":for(var i in oi)oi.hasOwnProperty(i)&&Ne(i,oi[i],e);break;case"source":Ne("topError","error",e);break;case"img":case"image":Ne("topError","error",e),Ne("topLoad","load",e);break;case"form":Ne("topReset","reset",e),Ne("topSubmit","submit",e);break;case"details":Ne("topToggle","toggle",e);break;case"input":Vt(e,n),Ne("topInvalid","invalid",e),an(o,"onChange");break;case"select":Qt(e,n),Ne("topInvalid","invalid",e),an(o,"onChange");break;case"textarea":Yt(e,n),Ne("topInvalid","invalid",e),an(o,"onChange")}rn(t,n,ri),r=null;for(var a in n)n.hasOwnProperty(a)&&(i=n[a],"children"===a?"string"==typeof i?e.textContent!==i&&(r=["children",i]):"number"==typeof i&&e.textContent!==""+i&&(r=["children",""+i]):Gn.hasOwnProperty(a)&&null!=i&&an(o,a));switch(t){case"input":ie(e),$t(e,n);break;case"textarea":ie(e),Zt(e,n);break;case"select":case"option":break;default:"function"==typeof n.onClick&&(e.onclick=xn)}return r}function dn(e,t){return e.nodeValue!==t}function hn(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function gn(e){return!(!(e=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==e.nodeType||!e.hasAttribute("data-reactroot"))}function mn(e,t,n,o,i){hn(n)||r("200");var a=n._reactRootContainer;if(a)ui.updateContainer(t,a,e,i);else{if(!(o=o||gn(n)))for(a=void 0;a=n.lastChild;)n.removeChild(a);var l=ui.createContainer(n,o);a=n._reactRootContainer=l,ui.unbatchedUpdates(function(){ui.updateContainer(t,l,e,i)})}return ui.getPublicRootInstance(a)}function yn(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return hn(t)||r("200"),Lt(e,t,null,n)}function vn(e,t){this._reactRootContainer=ui.createContainer(e,t)}/** @license React v16.2.0
 * react-dom.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var bn=n(1),kn=n(8),wn=n(2),xn=n(0),Cn=n(9),En=n(10),Tn=n(11),_n=n(12),Sn=n(15),Pn=n(3);bn||r("227");var On={children:!0,dangerouslySetInnerHTML:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,suppressHydrationWarning:!0,style:!0},Nn={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(e){var t=Nn,n=e.Properties||{},i=e.DOMAttributeNamespaces||{},a=e.DOMAttributeNames||{};e=e.DOMMutationMethods||{};for(var l in n){In.hasOwnProperty(l)&&r("48",l);var u=l.toLowerCase(),s=n[l];u={attributeName:u,attributeNamespace:null,propertyName:l,mutationMethod:null,mustUseProperty:o(s,t.MUST_USE_PROPERTY),hasBooleanValue:o(s,t.HAS_BOOLEAN_VALUE),hasNumericValue:o(s,t.HAS_NUMERIC_VALUE),hasPositiveNumericValue:o(s,t.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:o(s,t.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:o(s,t.HAS_STRING_BOOLEAN_VALUE)},1>=u.hasBooleanValue+u.hasNumericValue+u.hasOverloadedBooleanValue||r("50",l),a.hasOwnProperty(l)&&(u.attributeName=a[l]),i.hasOwnProperty(l)&&(u.attributeNamespace=i[l]),e.hasOwnProperty(l)&&(u.mutationMethod=e[l]),In[l]=u}}},In={},Rn=Nn,Mn=Rn.MUST_USE_PROPERTY,Dn=Rn.HAS_BOOLEAN_VALUE,Ln=Rn.HAS_NUMERIC_VALUE,An=Rn.HAS_POSITIVE_NUMERIC_VALUE,Fn=Rn.HAS_OVERLOADED_BOOLEAN_VALUE,Un=Rn.HAS_STRING_BOOLEAN_VALUE,jn={Properties:{allowFullScreen:Dn,async:Dn,autoFocus:Dn,autoPlay:Dn,capture:Fn,checked:Mn|Dn,cols:An,contentEditable:Un,controls:Dn,default:Dn,defer:Dn,disabled:Dn,download:Fn,draggable:Un,formNoValidate:Dn,hidden:Dn,loop:Dn,multiple:Mn|Dn,muted:Mn|Dn,noValidate:Dn,open:Dn,playsInline:Dn,readOnly:Dn,required:Dn,reversed:Dn,rows:An,rowSpan:Ln,scoped:Dn,seamless:Dn,selected:Mn|Dn,size:An,start:Ln,span:An,spellCheck:Un,style:0,tabIndex:0,itemScope:Dn,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:Un},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMMutationMethods:{value:function(e,t){if(null==t)return e.removeAttribute("value");"number"!==e.type||!1===e.hasAttribute("value")?e.setAttribute("value",""+t):e.validity&&!e.validity.badInput&&e.ownerDocument.activeElement!==e&&e.setAttribute("value",""+t)}}},Hn=Rn.HAS_STRING_BOOLEAN_VALUE,Vn={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"},zn={Properties:{autoReverse:Hn,externalResourcesRequired:Hn,preserveAlpha:Hn},DOMAttributeNames:{autoReverse:"autoReverse",externalResourcesRequired:"externalResourcesRequired",preserveAlpha:"preserveAlpha"},DOMAttributeNamespaces:{xlinkActuate:Vn.xlink,xlinkArcrole:Vn.xlink,xlinkHref:Vn.xlink,xlinkRole:Vn.xlink,xlinkShow:Vn.xlink,xlinkTitle:Vn.xlink,xlinkType:Vn.xlink,xmlBase:Vn.xml,xmlLang:Vn.xml,xmlSpace:Vn.xml}},Bn=/[\-\:]([a-z])/g;"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space".split(" ").forEach(function(e){var t=e.replace(Bn,l);zn.Properties[t]=0,zn.DOMAttributeNames[t]=e}),Rn.injectDOMPropertyConfig(jn),Rn.injectDOMPropertyConfig(zn);var $n={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(e){"function"!=typeof e.invokeGuardedCallback&&r("197"),u=e.invokeGuardedCallback}},invokeGuardedCallback:function(e,t,n,r,o,i,a,l,s){u.apply($n,arguments)},invokeGuardedCallbackAndCatchFirstError:function(e,t,n,r,o,i,a,l,u){if($n.invokeGuardedCallback.apply(this,arguments),$n.hasCaughtError()){var s=$n.clearCaughtError();$n._hasRethrowError||($n._hasRethrowError=!0,$n._rethrowError=s)}},rethrowCaughtError:function(){return s.apply($n,arguments)},hasCaughtError:function(){return $n._hasCaughtError},clearCaughtError:function(){if($n._hasCaughtError){var e=$n._caughtError;return $n._caughtError=null,$n._hasCaughtError=!1,e}r("198")}},Wn=null,Kn={},qn=[],Qn={},Gn={},Yn={},Xn=Object.freeze({plugins:qn,eventNameDispatchConfigs:Qn,registrationNameModules:Gn,registrationNameDependencies:Yn,possibleRegistrationNames:null,injectEventPluginOrder:f,injectEventPluginsByName:d}),Zn=null,Jn=null,er=null,tr=null,nr={injectEventPluginOrder:f,injectEventPluginsByName:d},rr=Object.freeze({injection:nr,getListener:k,extractEvents:w,enqueueEvents:x,processEventQueue:C}),or=Math.random().toString(36).slice(2),ir="__reactInternalInstance$"+or,ar="__reactEventHandlers$"+or,lr=Object.freeze({precacheFiberNode:function(e,t){t[ir]=e},getClosestInstanceFromNode:E,getInstanceFromNode:function(e){return e=e[ir],!e||5!==e.tag&&6!==e.tag?null:e},getNodeFromInstance:T,getFiberCurrentPropsFromNode:_,updateFiberProps:function(e,t){e[ar]=t}}),ur=Object.freeze({accumulateTwoPhaseDispatches:D,accumulateTwoPhaseDispatchesSkipTarget:function(e){m(e,I)},accumulateEnterLeaveDispatches:L,accumulateDirectDispatches:function(e){m(e,M)}}),sr=null,cr={_root:null,_startText:null,_fallbackText:null},pr="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),fr={type:null,target:null,currentTarget:xn.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};wn(j.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=xn.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=xn.thatReturnsTrue)},persist:function(){this.isPersistent=xn.thatReturnsTrue},isPersistent:xn.thatReturnsFalse,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;for(t=0;t<pr.length;t++)this[pr[t]]=null}}),j.Interface=fr,j.augmentClass=function(e,t){function n(){}n.prototype=this.prototype;var r=new n;wn(r,e.prototype),e.prototype=r,e.prototype.constructor=e,e.Interface=wn({},this.Interface,t),e.augmentClass=this.augmentClass,z(e)},z(j),j.augmentClass(B,{data:null}),j.augmentClass($,{data:null});var dr=[9,13,27,32],hr=kn.canUseDOM&&"CompositionEvent"in window,gr=null;kn.canUseDOM&&"documentMode"in document&&(gr=document.documentMode);var mr;if(mr=kn.canUseDOM&&"TextEvent"in window&&!gr){var yr=window.opera;mr=!("object"==typeof yr&&"function"==typeof yr.version&&12>=parseInt(yr.version(),10))}var vr,br=mr,kr=kn.canUseDOM&&(!hr||gr&&8<gr&&11>=gr),wr=String.fromCharCode(32),xr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["topCompositionEnd","topKeyPress","topTextInput","topPaste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")}},Cr=!1,Er=!1,Tr={eventTypes:xr,extractEvents:function(e,t,n,r){var o;if(hr)e:{switch(e){case"topCompositionStart":var i=xr.compositionStart;break e;case"topCompositionEnd":i=xr.compositionEnd;break e;case"topCompositionUpdate":i=xr.compositionUpdate;break e}i=void 0}else Er?W(e,n)&&(i=xr.compositionEnd):"topKeyDown"===e&&229===n.keyCode&&(i=xr.compositionStart);return i?(kr&&(Er||i!==xr.compositionStart?i===xr.compositionEnd&&Er&&(o=F()):(cr._root=r,cr._startText=U(),Er=!0)),i=B.getPooled(i,t,n,r),o?i.data=o:null!==(o=K(n))&&(i.data=o),D(i),o=i):o=null,(e=br?q(e,n):Q(e,n))?(t=$.getPooled(xr.beforeInput,t,n,r),t.data=e,D(t)):t=null,[o,t]}},_r=null,Sr=null,Pr=null,Or={injectFiberControlledHostComponent:function(e){_r=e}},Nr=Object.freeze({injection:Or,enqueueStateRestore:Y,restoreStateIfNeeded:X}),Ir=!1,Rr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};kn.canUseDOM&&(vr=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature("",""));var Mr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange".split(" ")}},Dr=null,Lr=null,Ar=!1;kn.canUseDOM&&(Ar=ne("input")&&(!document.documentMode||9<document.documentMode));var Fr={eventTypes:Mr,_isInputEventSupported:Ar,extractEvents:function(e,t,n,r){var o=t?T(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var a=ce;else if(ee(o))if(Ar)a=me;else{a=he;var l=de}else!(i=o.nodeName)||"input"!==i.toLowerCase()||"checkbox"!==o.type&&"radio"!==o.type||(a=ge);if(a&&(a=a(e,t)))return le(a,n,r);l&&l(e,o,t),"topBlur"===e&&null!=t&&(e=t._wrapperState||o._wrapperState)&&e.controlled&&"number"===o.type&&(e=""+o.value,o.getAttribute("value")!==e&&o.setAttribute("value",e))}};j.augmentClass(ye,{view:null,detail:null});var Ur={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};ye.augmentClass(ke,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:be,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)}});var jr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["topMouseOut","topMouseOver"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["topMouseOut","topMouseOver"]}},Hr={eventTypes:jr,extractEvents:function(e,t,n,r){if("topMouseOver"===e&&(n.relatedTarget||n.fromElement)||"topMouseOut"!==e&&"topMouseOver"!==e)return null;var o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window;if("topMouseOut"===e?(e=t,t=(t=n.relatedTarget||n.toElement)?E(t):null):e=null,e===t)return null;var i=null==e?o:T(e);o=null==t?o:T(t);var a=ke.getPooled(jr.mouseLeave,e,n,r);return a.type="mouseleave",a.target=i,a.relatedTarget=o,n=ke.getPooled(jr.mouseEnter,t,n,r),n.type="mouseenter",n.target=o,n.relatedTarget=i,L(a,n,e,t),[a,n]}},Vr=bn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,zr=[],Br=!0,$r=void 0,Wr=Object.freeze({get _enabled(){return Br},get _handleTopLevel(){return $r},setHandleTopLevel:function(e){$r=e},setEnabled:Oe,isEnabled:function(){return Br},trapBubbledEvent:Ne,trapCapturedEvent:Ie,dispatchEvent:Re}),Kr={animationend:Me("Animation","AnimationEnd"),animationiteration:Me("Animation","AnimationIteration"),animationstart:Me("Animation","AnimationStart"),transitionend:Me("Transition","TransitionEnd")},qr={},Qr={};kn.canUseDOM&&(Qr=document.createElement("div").style,"AnimationEvent"in window||(delete Kr.animationend.animation,delete Kr.animationiteration.animation,delete Kr.animationstart.animation),"TransitionEvent"in window||delete Kr.transitionend.transition);var Gr={topAbort:"abort",topAnimationEnd:De("animationend")||"animationend",topAnimationIteration:De("animationiteration")||"animationiteration",topAnimationStart:De("animationstart")||"animationstart",topBlur:"blur",topCancel:"cancel",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topClose:"close",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoad:"load",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topToggle:"toggle",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topTransitionEnd:De("transitionend")||"transitionend",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},Yr={},Xr=0,Zr="_reactListenersID"+(""+Math.random()).slice(2),Jr=kn.canUseDOM&&"documentMode"in document&&11>=document.documentMode,eo={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange".split(" ")}},to=null,no=null,ro=null,oo=!1,io={eventTypes:eo,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=Le(i),o=Yn.onSelect;for(var a=0;a<o.length;a++){var l=o[a];if(!i.hasOwnProperty(l)||!i[l]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?T(t):window,e){case"topFocus":(ee(i)||"true"===i.contentEditable)&&(to=i,no=t,ro=null);break;case"topBlur":ro=no=to=null;break;case"topMouseDown":oo=!0;break;case"topContextMenu":case"topMouseUp":return oo=!1,je(n,r);case"topSelectionChange":if(Jr)break;case"topKeyDown":case"topKeyUp":return je(n,r)}return null}};j.augmentClass(He,{animationName:null,elapsedTime:null,pseudoElement:null}),j.augmentClass(Ve,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),ye.augmentClass(ze,{relatedTarget:null});var ao={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},lo={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};ye.augmentClass($e,{key:function(e){if(e.key){var t=ao[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?(e=Be(e),13===e?"Enter":String.fromCharCode(e)):"keydown"===e.type||"keyup"===e.type?lo[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:be,charCode:function(e){return"keypress"===e.type?Be(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Be(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),ke.augmentClass(We,{dataTransfer:null}),ye.augmentClass(Ke,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:be}),j.augmentClass(qe,{propertyName:null,elapsedTime:null,pseudoElement:null}),ke.augmentClass(Qe,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null});var uo={},so={};"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel".split(" ").forEach(function(e){var t=e[0].toUpperCase()+e.slice(1),n="on"+t;t="top"+t,n={phasedRegistrationNames:{bubbled:n,captured:n+"Capture"},dependencies:[t]},uo[e]=n,so[t]=n});var co={eventTypes:uo,extractEvents:function(e,t,n,r){var o=so[e];if(!o)return null;switch(e){case"topKeyPress":if(0===Be(n))return null;case"topKeyDown":case"topKeyUp":e=$e;break;case"topBlur":case"topFocus":e=ze;break;case"topClick":if(2===n.button)return null;case"topDoubleClick":case"topMouseDown":case"topMouseMove":case"topMouseUp":case"topMouseOut":case"topMouseOver":case"topContextMenu":e=ke;break;case"topDrag":case"topDragEnd":case"topDragEnter":case"topDragExit":case"topDragLeave":case"topDragOver":case"topDragStart":case"topDrop":e=We;break;case"topTouchCancel":case"topTouchEnd":case"topTouchMove":case"topTouchStart":e=Ke;break;case"topAnimationEnd":case"topAnimationIteration":case"topAnimationStart":e=He;break;case"topTransitionEnd":e=qe;break;case"topScroll":e=ye;break;case"topWheel":e=Qe;break;case"topCopy":case"topCut":case"topPaste":e=Ve;break;default:e=j}return t=e.getPooled(o,t,n,r),D(t),t}};$r=function(e,t,n,r){e=w(e,t,n,r),x(e),C(!1)},nr.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),Zn=lr.getFiberCurrentPropsFromNode,Jn=lr.getInstanceFromNode,er=lr.getNodeFromInstance,nr.injectEventPluginsByName({SimpleEventPlugin:co,EnterLeaveEventPlugin:Hr,ChangeEventPlugin:Fr,SelectEventPlugin:io,BeforeInputEventPlugin:Tr});var po=[],fo=-1;new Set;var ho={current:Pn},go={current:!1},mo=Pn,yo=null,vo=null,bo="function"==typeof Symbol&&Symbol.for,ko=bo?Symbol.for("react.element"):60103,wo=bo?Symbol.for("react.call"):60104,xo=bo?Symbol.for("react.return"):60105,Co=bo?Symbol.for("react.portal"):60106,Eo=bo?Symbol.for("react.fragment"):60107,To="function"==typeof Symbol&&Symbol.iterator,_o=Array.isArray,So=St(!0),Po=St(!1),Oo={},No=Object.freeze({default:Dt}),Io=No&&Dt||No,Ro=Io.default?Io.default:Io,Mo="object"==typeof performance&&"function"==typeof performance.now,Do=void 0;Do=Mo?function(){return performance.now()}:function(){return Date.now()};var Lo=void 0,Ao=void 0;if(kn.canUseDOM)if("function"!=typeof requestIdleCallback||"function"!=typeof cancelIdleCallback){var Fo,Uo=null,jo=!1,Ho=-1,Vo=!1,zo=0,Bo=33,$o=33;Fo=Mo?{didTimeout:!1,timeRemaining:function(){var e=zo-performance.now();return 0<e?e:0}}:{didTimeout:!1,timeRemaining:function(){var e=zo-Date.now();return 0<e?e:0}};var Wo="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){if(e.source===window&&e.data===Wo){if(jo=!1,e=Do(),0>=zo-e){if(!(-1!==Ho&&Ho<=e))return void(Vo||(Vo=!0,requestAnimationFrame(Ko)));Fo.didTimeout=!0}else Fo.didTimeout=!1;Ho=-1,e=Uo,Uo=null,null!==e&&e(Fo)}},!1);var Ko=function(e){Vo=!1;var t=e-zo+$o;t<$o&&Bo<$o?(8>t&&(t=8),$o=t<Bo?Bo:t):Bo=t,zo=e+$o,jo||(jo=!0,window.postMessage(Wo,"*"))};Lo=function(e,t){return Uo=e,null!=t&&"number"==typeof t.timeout&&(Ho=Do()+t.timeout),Vo||(Vo=!0,requestAnimationFrame(Ko)),0},Ao=function(){Uo=null,jo=!1,Ho=-1}}else Lo=window.requestIdleCallback,Ao=window.cancelIdleCallback;else Lo=function(e){return setTimeout(function(){e({timeRemaining:function(){return 1/0}})})},Ao=function(e){clearTimeout(e)};var qo=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Qo={},Go={},Yo={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"},Xo=void 0,Zo=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==Yo.svg||"innerHTML"in e)e.innerHTML=t;else{for(Xo=Xo||document.createElement("div"),Xo.innerHTML="<svg>"+t+"</svg>",t=Xo.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}),Jo={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ei=["Webkit","ms","Moz","O"];Object.keys(Jo).forEach(function(e){ei.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Jo[t]=Jo[e]})});var ti=wn({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0}),ni=Yo.html,ri=xn.thatReturns(""),oi={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",topWaiting:"waiting"},ii=Object.freeze({createElement:ln,createTextNode:un,setInitialProperties:sn,diffProperties:cn,updateProperties:pn,diffHydratedProperties:fn,diffHydratedText:dn,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(e,t,n){switch(t){case"input":if(Bt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var o=n[t];if(o!==e&&o.form===e.form){var i=_(o);i||r("90"),ae(o),Bt(o,i)}}}break;case"textarea":Xt(e,n);break;case"select":null!=(t=n.value)&&qt(e,!!n.multiple,t,!1)}}});Or.injectFiberControlledHostComponent(ii);var ai=null,li=null,ui=Ro({getRootHostContext:function(e){var t=e.nodeType;switch(t){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:en(null,"");break;default:t=8===t?e.parentNode:e,e=t.namespaceURI||null,t=t.tagName,e=en(e,t)}return e},getChildHostContext:function(e,t){return en(e,t)},getPublicInstance:function(e){return e},prepareForCommit:function(){ai=Br;var e=En();if(Ue(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=window.getSelection&&window.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var i=0,a=-1,l=-1,u=0,s=0,c=e,p=null;t:for(;;){for(var f;c!==t||0!==r&&3!==c.nodeType||(a=i+r),c!==o||0!==n&&3!==c.nodeType||(l=i+n),3===c.nodeType&&(i+=c.nodeValue.length),null!==(f=c.firstChild);)p=c,c=f;for(;;){if(c===e)break t;if(p===t&&++u===r&&(a=i),p===o&&++s===n&&(l=i),null!==(f=c.nextSibling))break;c=p,p=c.parentNode}c=f}t=-1===a||-1===l?null:{start:a,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;li={focusedElem:e,selectionRange:t},Oe(!1)},resetAfterCommit:function(){var e=li,t=En(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&_n(document.documentElement,n)){if(Ue(n))if(t=r.start,e=r.end,void 0===e&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if(window.getSelection){t=window.getSelection();var o=n[A()].length;e=Math.min(r.start,o),r=void 0===r.end?e:Math.min(r.end,o),!t.extend&&e>r&&(o=r,r=e,e=o),o=Fe(n,e);var i=Fe(n,r);if(o&&i&&(1!==t.rangeCount||t.anchorNode!==o.node||t.anchorOffset!==o.offset||t.focusNode!==i.node||t.focusOffset!==i.offset)){var a=document.createRange();a.setStart(o.node,o.offset),t.removeAllRanges(),e>r?(t.addRange(a),t.extend(i.node,i.offset)):(a.setEnd(i.node,i.offset),t.addRange(a))}}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(Sn(n),n=0;n<t.length;n++)e=t[n],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}li=null,Oe(ai),ai=null},createInstance:function(e,t,n,r,o){return e=ln(e,t,n,r),e[ir]=o,e[ar]=t,e},appendInitialChild:function(e,t){e.appendChild(t)},finalizeInitialChildren:function(e,t,n,r){sn(e,t,n,r);e:{switch(t){case"button":case"input":case"select":case"textarea":e=!!n.autoFocus;break e}e=!1}return e},prepareUpdate:function(e,t,n,r,o){return cn(e,t,n,r,o)},shouldSetTextContent:function(e,t){return"textarea"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&"string"==typeof t.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(e,t){return!!t.hidden},createTextInstance:function(e,t,n,r){return e=un(e,t),e[ir]=r,e},now:Do,mutation:{commitMount:function(e){e.focus()},commitUpdate:function(e,t,n,r,o){e[ar]=o,pn(e,t,n,r,o)},resetTextContent:function(e){e.textContent=""},commitTextUpdate:function(e,t,n){e.nodeValue=n},appendChild:function(e,t){e.appendChild(t)},appendChildToContainer:function(e,t){8===e.nodeType?e.parentNode.insertBefore(t,e):e.appendChild(t)},insertBefore:function(e,t,n){e.insertBefore(t,n)},insertInContainerBefore:function(e,t,n){8===e.nodeType?e.parentNode.insertBefore(t,n):e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},removeChildFromContainer:function(e,t){8===e.nodeType?e.parentNode.removeChild(t):e.removeChild(t)}},hydration:{canHydrateInstance:function(e,t){return 1!==e.nodeType||t.toLowerCase()!==e.nodeName.toLowerCase()?null:e},canHydrateTextInstance:function(e,t){return""===t||3!==e.nodeType?null:e},getNextHydratableSibling:function(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e},getFirstHydratableChild:function(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e},hydrateInstance:function(e,t,n,r,o,i){return e[ir]=i,e[ar]=n,fn(e,t,n,o,r)},hydrateTextInstance:function(e,t,n){return e[ir]=n,dn(e,t)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},didNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},didNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:Lo,cancelDeferredCallback:Ao,useSyncScheduling:!0});Z=ui.batchedUpdates,vn.prototype.render=function(e,t){ui.updateContainer(e,this._reactRootContainer,null,t)},vn.prototype.unmount=function(e){ui.updateContainer(null,this._reactRootContainer,null,e)};var si={createPortal:yn,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(t)return ui.findHostInstance(t);"function"==typeof e.render?r("188"):r("213",Object.keys(e))},hydrate:function(e,t,n){return mn(null,e,t,!0,n)},render:function(e,t,n){return mn(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,o){return(null==e||void 0===e._reactInternalFiber)&&r("38"),mn(e,t,n,!1,o)},unmountComponentAtNode:function(e){return hn(e)||r("40"),!!e._reactRootContainer&&(ui.unbatchedUpdates(function(){mn(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:yn,unstable_batchedUpdates:J,unstable_deferredUpdates:ui.deferredUpdates,flushSync:ui.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:rr,EventPluginRegistry:Xn,EventPropagators:ur,ReactControlledComponent:Nr,ReactDOMComponentTree:lr,ReactDOMEventListener:Wr}};ui.injectIntoDevTools({findFiberByHostInstance:E,bundleType:0,version:"16.2.0",rendererPackageName:"react-dom"});var ci=Object.freeze({default:si}),pi=ci&&si||ci;e.exports=pi.default?pi.default:pi},function(e,t,n){"use strict";var r=!("undefined"==typeof window||!window.document||!window.document.createElement),o={canUseDOM:r,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};e.exports=o},function(e,t,n){"use strict";var r=n(0),o={listen:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!1),{remove:function(){e.removeEventListener(t,n,!1)}}):e.attachEvent?(e.attachEvent("on"+t,n),{remove:function(){e.detachEvent("on"+t,n)}}):void 0},capture:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!0),{remove:function(){e.removeEventListener(t,n,!0)}}):{remove:r}},registerDefault:function(){}};e.exports=o},function(e,t,n){"use strict";function r(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}e.exports=r},function(e,t,n){"use strict";function r(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!==e&&t!==t}function o(e,t){if(r(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),o=Object.keys(t);if(n.length!==o.length)return!1;for(var a=0;a<n.length;a++)if(!i.call(t,n[a])||!r(e[n[a]],t[n[a]]))return!1;return!0}var i=Object.prototype.hasOwnProperty;e.exports=o},function(e,t,n){"use strict";function r(e,t){return!(!e||!t)&&(e===t||!o(e)&&(o(t)?r(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}var o=n(13);e.exports=r},function(e,t,n){"use strict";function r(e){return o(e)&&3==e.nodeType}var o=n(14);e.exports=r},function(e,t,n){"use strict";function r(e){var t=e?e.ownerDocument||e:document,n=t.defaultView||window;return!(!e||!("function"==typeof n.Node?e instanceof n.Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}e.exports=r},function(e,t,n){"use strict";function r(e){try{e.focus()}catch(e){}}e.exports=r},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=n(17);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},function(e,t,n){"use strict";(function(e){function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var l=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(1),s=r(u),c=n(4),p=n(19),f=r(p),d=n(20),h=(0,d.on)("scroll",{capture:!0,passive:!0})(window),g=e&&e.env&&!0,m=function(e){function t(){var e,n,r,a;o(this,t);for(var l=arguments.length,u=Array(l),s=0;s<l;s++)u[s]=arguments[s];return n=r=i(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(u))),r.mounted=!1,r.state={isInView:!1,hasUpdated:!1},r.checkIsInView=function(){if(r.mounted&&(!r.props.once||!r.state.hasUpdated)){var e=r.props.threshold;e>10&&g&&console.warn('High InView threshold: "'+e+'". Threshold is multiplied by the viewport dimensions!');var t=r.state.isInView,n=r.isInViewport(r._ref);t!==n&&r.setState(function(){return{isInView:n,hasUpdated:!0}})}},r.checkIsInViewDebounced=(0,f.default)(r.checkIsInView,r.props.debounce),a=n,i(r,a)}return a(t,e),l(t,[{key:"componentDidMount",value:function(){this.mounted=!0,this._ref=(0,c.findDOMNode)(this),this.isInViewport=(0,d.inViewport)({threshold:this.props.threshold,boundingLeft:this.props.boundingLeft,boundingRight:this.props.boundingRight,requireEntireElementInViewport:!0}),this.checkIsInView(),this.scrollUnsubscribe=h(this.checkIsInViewDebounced)}},{key:"componentWillUnmount",value:function(){this.mounted=!1,this.scrollUnsubscribe()}},{key:"componentWillReceiveProps",value:function(e){var t=e.threshold,n=e.debounce;this.isInViewport=(0,d.inViewport)({threshold:t,requireEntireElementInViewport:!0}),this.checkIsInViewDebounced=(0,f.default)(this.checkIsInView,n)}},{key:"render",value:function(){return this.props.children(this.state.isInView)}}]),t}(s.default.Component);m.defaultProps={debounce:250,threshold:0,once:!1},t.default=m}).call(t,n(18))},function(e,t){function n(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function o(e){if(c===setTimeout)return setTimeout(e,0);if((c===n||!c)&&setTimeout)return c=setTimeout,setTimeout(e,0);try{return c(e,0)}catch(t){try{return c.call(null,e,0)}catch(t){return c.call(this,e,0)}}}function i(e){if(p===clearTimeout)return clearTimeout(e);if((p===r||!p)&&clearTimeout)return p=clearTimeout,clearTimeout(e);try{return p(e)}catch(t){try{return p.call(null,e)}catch(t){return p.call(this,e)}}}function a(){g&&d&&(g=!1,d.length?h=d.concat(h):m=-1,h.length&&l())}function l(){if(!g){var e=o(a);g=!0;for(var t=h.length;t;){for(d=h,h=[];++m<t;)d&&d[m].run();m=-1,t=h.length}d=null,g=!1,i(e)}}function u(e,t){this.fun=e,this.array=t}function s(){}var c,p,f=e.exports={};!function(){try{c="function"==typeof setTimeout?setTimeout:n}catch(e){c=n}try{p="function"==typeof clearTimeout?clearTimeout:r}catch(e){p=r}}();var d,h=[],g=!1,m=-1;f.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];h.push(new u(e,t)),1!==h.length||g||o(l)},u.prototype.run=function(){this.fun.apply(null,this.array)},f.title="browser",f.browser=!0,f.env={},f.argv=[],f.version="",f.versions={},f.on=s,f.addListener=s,f.once=s,f.off=s,f.removeListener=s,f.removeAllListeners=s,f.emit=s,f.prependListener=s,f.prependOnceListener=s,f.listeners=function(e){return[]},f.binding=function(e){throw new Error("process.binding is not supported")},f.cwd=function(){return"/"},f.chdir=function(e){throw new Error("process.chdir is not supported")},f.umask=function(){return 0}},function(e,t,n){(function(t){function n(e,t,n){function o(t){var n=g,r=m;return g=m=void 0,E=t,v=e.apply(r,n)}function i(e){return E=e,b=setTimeout(c,t),T?o(e):v}function u(e){var n=e-C,r=e-E,o=t-n;return _?w(o,y-r):o}function s(e){var n=e-C,r=e-E;return void 0===C||n>=t||n<0||_&&r>=y}function c(){var e=x();if(s(e))return p(e);b=setTimeout(c,u(e))}function p(e){return b=void 0,S&&g?o(e):(g=m=void 0,v)}function f(){void 0!==b&&clearTimeout(b),E=0,g=C=m=b=void 0}function d(){return void 0===b?v:p(x())}function h(){var e=x(),n=s(e);if(g=arguments,m=this,C=e,n){if(void 0===b)return i(C);if(_)return b=setTimeout(c,t),o(C)}return void 0===b&&(b=setTimeout(c,t)),v}var g,m,y,v,b,C,E=0,T=!1,_=!1,S=!0;if("function"!=typeof e)throw new TypeError(l);return t=a(t)||0,r(n)&&(T=!!n.leading,_="maxWait"in n,y=_?k(a(n.maxWait)||0,t):y,S="trailing"in n?!!n.trailing:S),h.cancel=f,h.flush=d,h}function r(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function o(e){return!!e&&"object"==typeof e}function i(e){return"symbol"==typeof e||o(e)&&b.call(e)==s}function a(e){if("number"==typeof e)return e;if(i(e))return u;if(r(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=r(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(c,"");var n=f.test(e);return n||d.test(e)?h(e.slice(2),n?2:8):p.test(e)?u:+e}var l="Expected a function",u=NaN,s="[object Symbol]",c=/^\s+|\s+$/g,p=/^[-+]0x[0-9a-f]+$/i,f=/^0b[01]+$/i,d=/^0o[0-7]+$/i,h=parseInt,g="object"==typeof t&&t&&t.Object===Object&&t,m="object"==typeof self&&self&&self.Object===Object&&self,y=g||m||Function("return this")(),v=Object.prototype,b=v.toString,k=Math.max,w=Math.min,x=function(){return y.Date.now()};e.exports=n}).call(t,n(5))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=(t.on=function(e,t){return function(n){return function(r){return n.addEventListener(e,r,t),function(){n.removeEventListener(e,r),r.cancel&&r.cancel()}}}},function(e,t){return function(n){return Math.max(Math.min(t,n),e)===n}}),o=function(e){var t=e.targetRect,n=e.boundingRect,o=e.fullyContained,i=r(n.left,n.right),a=r(n.top,n.bottom);return o?i(t.left)&&i(t.right)&&a(t.top)&&a(t.bottom):i(t.left)||i(t.right)||a(t.top)||a(t.bottom)};t.inViewport=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.threshold,n=void 0===t?0:t,r=e.offsetVert,i=void 0===r?window.innerHeight*n:r,a=e.offsetHoriz,l=void 0===a?window.innerWidth*n:a,u=e.boundingLeft,s=e.boundingRight,c=e.requireEntireElementInViewport,p=void 0!==c&&c;return function(e){if(!e)return!1;if(!e.offsetParent)return!0;var t=0-l,n=window.innerWidth+l,r=0-i,a=window.innerHeight+i;return o({targetRect:e.getBoundingClientRect(),boundingRect:{top:r,bottom:a,left:isNaN(u)?t:u,right:isNaN(s)?n:s},fullyContained:p})}}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var l=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(1),s=r(u),c=n(4),p=n(16),f=r(p),d=n(22),h=n(26),g=r(h),m=["#f47467","#95dd12","#24c0ed","#0af1ba","#decced","#bdf6c0","#e7ee28","#e08388","#62fd1e","#eaa30a"],y=function(e){function t(){return o(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return a(t,e),l(t,[{key:"componentWillReceiveProps",value:function(e){e.isInView&&!this.props.isInView&&(window.document.title=this.props.i+1)}},{key:"render",value:function(){var e=this.props.i;return s.default.createElement("div",{className:"box",style:{backgroundColor:m[e]}},s.default.createElement("h3",null,s.default.createElement("code",null,"location.title")," should now be ",e+1))}}]),t}(u.Component);y.proptypes={isInView:d.bool,i:d.number.isRequired};var v=function(e){function t(){var e,n,r,a;o(this,t);for(var l=arguments.length,u=Array(l),s=0;s<l;s++)u[s]=arguments[s];return n=r=i(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(u))),r.updateTitle=function(e){return function(){window.document.title=e}},a=n,i(r,a)}return a(t,e),l(t,[{key:"render",value:function(){return s.default.createElement("div",{style:{height:"calc(100vh * 10)"}},Array(10).fill().map(function(e,t){return s.default.createElement(f.default,{key:t,threshold:0},function(e){return s.default.createElement(y,{i:t,isInView:e})})}))}}]),t}(u.Component),b=function(e){function t(){var e,n,r,a;o(this,t);for(var l=arguments.length,u=Array(l),s=0;s<l;s++)u[s]=arguments[s];return n=r=i(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(u))),r.state={docs:""},a=n,i(r,a)}return a(t,e),l(t,[{key:"componentWillMount",value:function(){var e=this;window.fetch("https://raw.githubusercontent.com/jane/react-now-you-see-me/master/README.md").then(function(e){return e.text()}).then(function(t){e.setState({docs:(0,g.default)(t)})}).catch(console.error)}},{key:"render",value:function(){return s.default.createElement("div",{className:"wrapper"},s.default.createElement("div",{dangerouslySetInnerHTML:{__html:this.state.docs},className:"md"}),s.default.createElement(v,null))}}]),t}(u.Component);(0,c.render)(s.default.createElement(b,null),document.getElementById("root"))},function(e,t,n){e.exports=n(23)()},function(e,t,n){"use strict";var r=n(0),o=n(24),i=n(25);e.exports=function(){function e(e,t,n,r,a,l){l!==i&&o(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types")}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=r,n.PropTypes=n,n}},function(e,t,n){"use strict";function r(e,t,n,r,i,a,l,u){if(o(t),!e){var s;if(void 0===t)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,i,a,l,u],p=0;s=new Error(t.replace(/%s/g,function(){return c[p++]})),s.name="Invariant Violation"}throw s.framesToPop=1,s}}var o=function(e){};e.exports=r},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){(function(t){(function(){"use strict";function t(e){this.tokens=[],this.tokens.links={},this.options=e||p.defaults,this.rules=f.normal,this.options.gfm&&(this.options.tables?this.rules=f.tables:this.rules=f.gfm)}function n(e,t){if(this.options=t||p.defaults,this.links=e,this.rules=d.normal,this.renderer=this.options.renderer||new r,this.renderer.options=this.options,!this.links)throw new Error("Tokens array requires a `links` property.");this.options.gfm?this.options.breaks?this.rules=d.breaks:this.rules=d.gfm:this.options.pedantic&&(this.rules=d.pedantic)}function r(e){this.options=e||{}}function o(e){this.tokens=[],this.token=null,this.options=e||p.defaults,this.options.renderer=this.options.renderer||new r,this.renderer=this.options.renderer,this.renderer.options=this.options}function i(e,t){return e.replace(t?/&/g:/&(?!#?\w+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}function a(e){return e.replace(/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi,function(e,t){return t=t.toLowerCase(),"colon"===t?":":"#"===t.charAt(0)?"x"===t.charAt(1)?String.fromCharCode(parseInt(t.substring(2),16)):String.fromCharCode(+t.substring(1)):""})}function l(e,t){return e=e.source,t=t||"",function n(r,o){return r?(o=o.source||o,o=o.replace(/(^|[^\[])\^/g,"$1"),e=e.replace(r,o),n):new RegExp(e,t)}}function u(e,t){return h[" "+e]||(/^[^:]+:\/*[^\/]*$/.test(e)?h[" "+e]=e+"/":h[" "+e]=e.replace(/[^\/]*$/,"")),e=h[" "+e],"//"===t.slice(0,2)?e.replace(/:[\s\S]*/,":")+t:"/"===t.charAt(0)?e.replace(/(:\/*[^\/]*)[\s\S]*/,"$1")+t:e+t}function s(){}function c(e){for(var t,n,r=1;r<arguments.length;r++){t=arguments[r];for(n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}function p(e,n,r){if(r||"function"==typeof n){r||(r=n,n=null),n=c({},p.defaults,n||{});var a,l,u=n.highlight,s=0;try{a=t.lex(e,n)}catch(e){return r(e)}l=a.length;var f=function(e){if(e)return n.highlight=u,r(e);var t;try{t=o.parse(a,n)}catch(t){e=t}return n.highlight=u,e?r(e):r(null,t)};if(!u||u.length<3)return f();if(delete n.highlight,!l)return f();for(;s<a.length;s++)!function(e){"code"!==e.type?--l||f():u(e.text,e.lang,function(t,n){return t?f(t):null==n||n===e.text?--l||f():(e.text=n,e.escaped=!0,void(--l||f()))})}(a[s])}else try{return n&&(n=c({},p.defaults,n)),o.parse(t.lex(e,n),n)}catch(e){if(e.message+="\nPlease report this to https://github.com/chjj/marked.",(n||p.defaults).silent)return"<p>An error occurred:</p><pre>"+i(e.message+"",!0)+"</pre>";throw e}}var f={newline:/^\n+/,code:/^( {4}[^\n]+\n*)+/,fences:s,hr:/^( *[-*_]){3,} *(?:\n+|$)/,heading:/^ *(#{1,6}) *([^\n]+?) *#* *(?:\n+|$)/,nptable:s,lheading:/^([^\n]+)\n *(=|-){2,} *(?:\n+|$)/,blockquote:/^( *>[^\n]+(\n(?!def)[^\n]+)*\n*)+/,list:/^( *)(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,html:/^ *(?:comment *(?:\n|\s*$)|closed *(?:\n{2,}|\s*$)|closing *(?:\n{2,}|\s*$))/,def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +["(]([^\n]+)[")])? *(?:\n+|$)/,table:s,paragraph:/^((?:[^\n]+\n?(?!hr|heading|lheading|blockquote|tag|def))+)\n*/,text:/^[^\n]+/};f.bullet=/(?:[*+-]|\d+\.)/,f.item=/^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/,f.item=l(f.item,"gm")(/bull/g,f.bullet)(),f.list=l(f.list)(/bull/g,f.bullet)("hr","\\n+(?=\\1?(?:[-*_] *){3,}(?:\\n+|$))")("def","\\n+(?="+f.def.source+")")(),f.blockquote=l(f.blockquote)("def",f.def)(),f._tag="(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:/|[^\\w\\s@]*@)\\b",f.html=l(f.html)("comment",/<!--[\s\S]*?-->/)("closed",/<(tag)[\s\S]+?<\/\1>/)("closing",/<tag(?:"[^"]*"|'[^']*'|[^'">])*?>/)(/tag/g,f._tag)(),f.paragraph=l(f.paragraph)("hr",f.hr)("heading",f.heading)("lheading",f.lheading)("blockquote",f.blockquote)("tag","<"+f._tag)("def",f.def)(),f.normal=c({},f),f.gfm=c({},f.normal,{fences:/^ *(`{3,}|~{3,})[ \.]*(\S+)? *\n([\s\S]*?)\s*\1 *(?:\n+|$)/,paragraph:/^/,heading:/^ *(#{1,6}) +([^\n]+?) *#* *(?:\n+|$)/}),f.gfm.paragraph=l(f.paragraph)("(?!","(?!"+f.gfm.fences.source.replace("\\1","\\2")+"|"+f.list.source.replace("\\1","\\3")+"|")(),f.tables=c({},f.gfm,{nptable:/^ *(\S.*\|.*)\n *([-:]+ *\|[-| :]*)\n((?:.*\|.*(?:\n|$))*)\n*/,table:/^ *\|(.+)\n *\|( *[-:]+[-| :]*)\n((?: *\|.*(?:\n|$))*)\n*/}),t.rules=f,t.lex=function(e,n){return new t(n).lex(e)},t.prototype.lex=function(e){return e=e.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    ").replace(/\u00a0/g," ").replace(/\u2424/g,"\n"),this.token(e,!0)},t.prototype.token=function(e,t,n){for(var r,o,i,a,l,u,s,c,p,e=e.replace(/^ +$/gm,"");e;)if((i=this.rules.newline.exec(e))&&(e=e.substring(i[0].length),i[0].length>1&&this.tokens.push({type:"space"})),i=this.rules.code.exec(e))e=e.substring(i[0].length),i=i[0].replace(/^ {4}/gm,""),this.tokens.push({type:"code",text:this.options.pedantic?i:i.replace(/\n+$/,"")});else if(i=this.rules.fences.exec(e))e=e.substring(i[0].length),this.tokens.push({type:"code",lang:i[2],text:i[3]||""});else if(i=this.rules.heading.exec(e))e=e.substring(i[0].length),this.tokens.push({type:"heading",depth:i[1].length,text:i[2]});else if(t&&(i=this.rules.nptable.exec(e))){for(e=e.substring(i[0].length),u={type:"table",header:i[1].replace(/^ *| *\| *$/g,"").split(/ *\| */),align:i[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:i[3].replace(/\n$/,"").split("\n")},c=0;c<u.align.length;c++)/^ *-+: *$/.test(u.align[c])?u.align[c]="right":/^ *:-+: *$/.test(u.align[c])?u.align[c]="center":/^ *:-+ *$/.test(u.align[c])?u.align[c]="left":u.align[c]=null;for(c=0;c<u.cells.length;c++)u.cells[c]=u.cells[c].split(/ *\| */);this.tokens.push(u)}else if(i=this.rules.lheading.exec(e))e=e.substring(i[0].length),this.tokens.push({type:"heading",depth:"="===i[2]?1:2,text:i[1]});else if(i=this.rules.hr.exec(e))e=e.substring(i[0].length),this.tokens.push({type:"hr"});else if(i=this.rules.blockquote.exec(e))e=e.substring(i[0].length),this.tokens.push({type:"blockquote_start"}),i=i[0].replace(/^ *> ?/gm,""),this.token(i,t,!0),this.tokens.push({type:"blockquote_end"});else if(i=this.rules.list.exec(e)){for(e=e.substring(i[0].length),a=i[2],this.tokens.push({type:"list_start",ordered:a.length>1}),i=i[0].match(this.rules.item),r=!1,p=i.length,c=0;c<p;c++)u=i[c],s=u.length,u=u.replace(/^ *([*+-]|\d+\.) +/,""),~u.indexOf("\n ")&&(s-=u.length,u=this.options.pedantic?u.replace(/^ {1,4}/gm,""):u.replace(new RegExp("^ {1,"+s+"}","gm"),"")),this.options.smartLists&&c!==p-1&&(l=f.bullet.exec(i[c+1])[0],a===l||a.length>1&&l.length>1||(e=i.slice(c+1).join("\n")+e,c=p-1)),o=r||/\n\n(?!\s*$)/.test(u),c!==p-1&&(r="\n"===u.charAt(u.length-1),o||(o=r)),this.tokens.push({type:o?"loose_item_start":"list_item_start"}),this.token(u,!1,n),this.tokens.push({type:"list_item_end"});this.tokens.push({type:"list_end"})}else if(i=this.rules.html.exec(e))e=e.substring(i[0].length),this.tokens.push({type:this.options.sanitize?"paragraph":"html",pre:!this.options.sanitizer&&("pre"===i[1]||"script"===i[1]||"style"===i[1]),text:i[0]});else if(!n&&t&&(i=this.rules.def.exec(e)))e=e.substring(i[0].length),this.tokens.links[i[1].toLowerCase()]={href:i[2],title:i[3]};else if(t&&(i=this.rules.table.exec(e))){for(e=e.substring(i[0].length),u={type:"table",header:i[1].replace(/^ *| *\| *$/g,"").split(/ *\| */),align:i[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:i[3].replace(/(?: *\| *)?\n$/,"").split("\n")},c=0;c<u.align.length;c++)/^ *-+: *$/.test(u.align[c])?u.align[c]="right":/^ *:-+: *$/.test(u.align[c])?u.align[c]="center":/^ *:-+ *$/.test(u.align[c])?u.align[c]="left":u.align[c]=null;for(c=0;c<u.cells.length;c++)u.cells[c]=u.cells[c].replace(/^ *\| *| *\| *$/g,"").split(/ *\| */);this.tokens.push(u)}else if(t&&(i=this.rules.paragraph.exec(e)))e=e.substring(i[0].length),this.tokens.push({type:"paragraph",text:"\n"===i[1].charAt(i[1].length-1)?i[1].slice(0,-1):i[1]});else if(i=this.rules.text.exec(e))e=e.substring(i[0].length),this.tokens.push({type:"text",text:i[0]});else if(e)throw new Error("Infinite loop on byte: "+e.charCodeAt(0));return this.tokens};var d={escape:/^\\([\\`*{}\[\]()#+\-.!_>])/,autolink:/^<([^ <>]+(@|:\/)[^ <>]+)>/,url:s,tag:/^<!--[\s\S]*?-->|^<\/?\w+(?:"[^"]*"|'[^']*'|[^<'">])*?>/,link:/^!?\[(inside)\]\(href\)/,reflink:/^!?\[(inside)\]\s*\[([^\]]*)\]/,nolink:/^!?\[((?:\[[^\]]*\]|[^\[\]])*)\]/,strong:/^__([\s\S]+?)__(?!_)|^\*\*([\s\S]+?)\*\*(?!\*)/,em:/^\b_((?:[^_]|__)+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,code:/^(`+)([\s\S]*?[^`])\1(?!`)/,br:/^ {2,}\n(?!\s*$)/,del:s,text:/^[\s\S]+?(?=[\\<!\[_*`]| {2,}\n|$)/};d._inside=/(?:\[[^\]]*\]|\\[\[\]]|[^\[\]]|\](?=[^\[]*\]))*/,d._href=/\s*<?([\s\S]*?)>?(?:\s+['"]([\s\S]*?)['"])?\s*/,d.link=l(d.link)("inside",d._inside)("href",d._href)(),d.reflink=l(d.reflink)("inside",d._inside)(),d.normal=c({},d),d.pedantic=c({},d.normal,{strong:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,em:/^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/}),d.gfm=c({},d.normal,{escape:l(d.escape)("])","~|])")(),url:/^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/,del:/^~~(?=\S)([\s\S]*?\S)~~/,text:l(d.text)("]|","~]|")("|","|https?://|")()}),d.breaks=c({},d.gfm,{br:l(d.br)("{2,}","*")(),text:l(d.gfm.text)("{2,}","*")()}),n.rules=d,n.output=function(e,t,r){return new n(t,r).output(e)},n.prototype.output=function(e){for(var t,n,r,o,a="";e;)if(o=this.rules.escape.exec(e))e=e.substring(o[0].length),a+=o[1];else if(o=this.rules.autolink.exec(e))e=e.substring(o[0].length),"@"===o[2]?(n=i(":"===o[1].charAt(6)?this.mangle(o[1].substring(7)):this.mangle(o[1])),r=this.mangle("mailto:")+n):(n=i(o[1]),r=n),a+=this.renderer.link(r,null,n);else if(this.inLink||!(o=this.rules.url.exec(e))){if(o=this.rules.tag.exec(e))!this.inLink&&/^<a /i.test(o[0])?this.inLink=!0:this.inLink&&/^<\/a>/i.test(o[0])&&(this.inLink=!1),e=e.substring(o[0].length),a+=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(o[0]):i(o[0]):o[0];else if(o=this.rules.link.exec(e))e=e.substring(o[0].length),this.inLink=!0,a+=this.outputLink(o,{href:o[2],title:o[3]}),this.inLink=!1;else if((o=this.rules.reflink.exec(e))||(o=this.rules.nolink.exec(e))){if(e=e.substring(o[0].length),t=(o[2]||o[1]).replace(/\s+/g," "),!(t=this.links[t.toLowerCase()])||!t.href){a+=o[0].charAt(0),e=o[0].substring(1)+e;continue}this.inLink=!0,a+=this.outputLink(o,t),this.inLink=!1}else if(o=this.rules.strong.exec(e))e=e.substring(o[0].length),a+=this.renderer.strong(this.output(o[2]||o[1]));else if(o=this.rules.em.exec(e))e=e.substring(o[0].length),a+=this.renderer.em(this.output(o[2]||o[1]));else if(o=this.rules.code.exec(e))e=e.substring(o[0].length),a+=this.renderer.codespan(i(o[2].trim(),!0));else if(o=this.rules.br.exec(e))e=e.substring(o[0].length),a+=this.renderer.br();else if(o=this.rules.del.exec(e))e=e.substring(o[0].length),a+=this.renderer.del(this.output(o[1]));else if(o=this.rules.text.exec(e))e=e.substring(o[0].length),a+=this.renderer.text(i(this.smartypants(o[0])));else if(e)throw new Error("Infinite loop on byte: "+e.charCodeAt(0))}else e=e.substring(o[0].length),n=i(o[1]),r=n,a+=this.renderer.link(r,null,n);return a},n.prototype.outputLink=function(e,t){var n=i(t.href),r=t.title?i(t.title):null;return"!"!==e[0].charAt(0)?this.renderer.link(n,r,this.output(e[1])):this.renderer.image(n,r,i(e[1]))},n.prototype.smartypants=function(e){return this.options.smartypants?e.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014\/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014\/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…"):e},n.prototype.mangle=function(e){if(!this.options.mangle)return e;for(var t,n="",r=e.length,o=0;o<r;o++)t=e.charCodeAt(o),Math.random()>.5&&(t="x"+t.toString(16)),n+="&#"+t+";";return n},r.prototype.code=function(e,t,n){if(this.options.highlight){var r=this.options.highlight(e,t);null!=r&&r!==e&&(n=!0,e=r)}return t?'<pre><code class="'+this.options.langPrefix+i(t,!0)+'">'+(n?e:i(e,!0))+"\n</code></pre>\n":"<pre><code>"+(n?e:i(e,!0))+"\n</code></pre>"},r.prototype.blockquote=function(e){return"<blockquote>\n"+e+"</blockquote>\n"},r.prototype.html=function(e){return e},r.prototype.heading=function(e,t,n){return"<h"+t+' id="'+this.options.headerPrefix+n.toLowerCase().replace(/[^\w]+/g,"-")+'">'+e+"</h"+t+">\n"},r.prototype.hr=function(){return this.options.xhtml?"<hr/>\n":"<hr>\n"},r.prototype.list=function(e,t){var n=t?"ol":"ul";return"<"+n+">\n"+e+"</"+n+">\n"},r.prototype.listitem=function(e){return"<li>"+e+"</li>\n"},r.prototype.paragraph=function(e){return"<p>"+e+"</p>\n"},r.prototype.table=function(e,t){return"<table>\n<thead>\n"+e+"</thead>\n<tbody>\n"+t+"</tbody>\n</table>\n"},r.prototype.tablerow=function(e){return"<tr>\n"+e+"</tr>\n"},r.prototype.tablecell=function(e,t){var n=t.header?"th":"td";return(t.align?"<"+n+' style="text-align:'+t.align+'">':"<"+n+">")+e+"</"+n+">\n"},r.prototype.strong=function(e){return"<strong>"+e+"</strong>"},r.prototype.em=function(e){return"<em>"+e+"</em>"},r.prototype.codespan=function(e){return"<code>"+e+"</code>"},r.prototype.br=function(){return this.options.xhtml?"<br/>":"<br>"},r.prototype.del=function(e){return"<del>"+e+"</del>"},r.prototype.link=function(e,t,n){if(this.options.sanitize){try{var r=decodeURIComponent(a(e)).replace(/[^\w:]/g,"").toLowerCase()}catch(e){return n}if(0===r.indexOf("javascript:")||0===r.indexOf("vbscript:")||0===r.indexOf("data:"))return n}this.options.baseUrl&&!g.test(e)&&(e=u(this.options.baseUrl,e));var o='<a href="'+e+'"';return t&&(o+=' title="'+t+'"'),o+=">"+n+"</a>"},r.prototype.image=function(e,t,n){this.options.baseUrl&&!g.test(e)&&(e=u(this.options.baseUrl,e));var r='<img src="'+e+'" alt="'+n+'"';return t&&(r+=' title="'+t+'"'),r+=this.options.xhtml?"/>":">"},r.prototype.text=function(e){return e},o.parse=function(e,t,n){return new o(t,n).parse(e)},o.prototype.parse=function(e){this.inline=new n(e.links,this.options,this.renderer),this.tokens=e.reverse();for(var t="";this.next();)t+=this.tok();return t},o.prototype.next=function(){return this.token=this.tokens.pop()},o.prototype.peek=function(){return this.tokens[this.tokens.length-1]||0},o.prototype.parseText=function(){for(var e=this.token.text;"text"===this.peek().type;)e+="\n"+this.next().text;return this.inline.output(e)},o.prototype.tok=function(){switch(this.token.type){case"space":return"";case"hr":return this.renderer.hr();case"heading":return this.renderer.heading(this.inline.output(this.token.text),this.token.depth,this.token.text);case"code":return this.renderer.code(this.token.text,this.token.lang,this.token.escaped);case"table":var e,t,n,r,o="",i="";for(n="",e=0;e<this.token.header.length;e++)({header:!0,align:this.token.align[e]}),n+=this.renderer.tablecell(this.inline.output(this.token.header[e]),{header:!0,align:this.token.align[e]});for(o+=this.renderer.tablerow(n),e=0;e<this.token.cells.length;e++){for(t=this.token.cells[e],n="",r=0;r<t.length;r++)n+=this.renderer.tablecell(this.inline.output(t[r]),{header:!1,align:this.token.align[r]});i+=this.renderer.tablerow(n)}return this.renderer.table(o,i);case"blockquote_start":for(var i="";"blockquote_end"!==this.next().type;)i+=this.tok();return this.renderer.blockquote(i);case"list_start":for(var i="",a=this.token.ordered;"list_end"!==this.next().type;)i+=this.tok();return this.renderer.list(i,a);case"list_item_start":for(var i="";"list_item_end"!==this.next().type;)i+="text"===this.token.type?this.parseText():this.tok();return this.renderer.listitem(i);case"loose_item_start":for(var i="";"list_item_end"!==this.next().type;)i+=this.tok();return this.renderer.listitem(i);case"html":var l=this.token.pre||this.options.pedantic?this.token.text:this.inline.output(this.token.text);return this.renderer.html(l);case"paragraph":return this.renderer.paragraph(this.inline.output(this.token.text));case"text":return this.renderer.paragraph(this.parseText())}};var h={},g=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;s.exec=s,p.options=p.setOptions=function(e){return c(p.defaults,e),p},p.defaults={gfm:!0,tables:!0,breaks:!1,pedantic:!1,sanitize:!1,sanitizer:null,mangle:!0,smartLists:!1,silent:!1,highlight:null,langPrefix:"lang-",smartypants:!1,headerPrefix:"",renderer:new r,xhtml:!1,baseUrl:null},p.Parser=o,p.parser=o.parse,p.Renderer=r,p.Lexer=t,p.lexer=t.lex,p.InlineLexer=n,p.inlineLexer=n.output,p.parse=p,e.exports=p}).call(function(){return this||("undefined"!=typeof window?window:t)}())}).call(t,n(5))}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovLy9kZW1vLmpzIiwid2VicGFjazovLy93ZWJwYWNrL2Jvb3RzdHJhcCA4OGNiNjU5OWQzZmJlMGNkMmYyNyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlGdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2VtcHR5T2JqZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvRXhlY3V0aW9uRW52aXJvbm1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL0V2ZW50TGlzdGVuZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2dldEFjdGl2ZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL3NoYWxsb3dFcXVhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvY29udGFpbnNOb2RlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pc1RleHROb2RlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pc05vZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2ZvY3VzTm9kZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luLXZpZXcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoLmRlYm91bmNlL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy91dGlsLmpzIiwid2VicGFjazovLy8uL2Rldi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2ludmFyaWFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21hcmtlZC9saWIvbWFya2VkLmpzIl0sIm5hbWVzIjpbInJvb3QiLCJmYWN0b3J5IiwiZXhwb3J0cyIsIm1vZHVsZSIsImRlZmluZSIsImFtZCIsInNlbGYiLCJ0aGlzIiwibW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImluc3RhbGxlZE1vZHVsZXMiLCJpIiwibCIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsIm4iLCJfX2VzTW9kdWxlIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwibWFrZUVtcHR5RnVuY3Rpb24iLCJhcmciLCJlbXB0eUZ1bmN0aW9uIiwidGhhdFJldHVybnMiLCJ0aGF0UmV0dXJuc0ZhbHNlIiwidGhhdFJldHVybnNUcnVlIiwidGhhdFJldHVybnNOdWxsIiwidGhhdFJldHVybnNUaGlzIiwidGhhdFJldHVybnNBcmd1bWVudCIsInRvT2JqZWN0IiwidmFsIiwidW5kZWZpbmVkIiwiVHlwZUVycm9yIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiYXNzaWduIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJtYXAiLCJqb2luIiwidGVzdDMiLCJzcGxpdCIsImZvckVhY2giLCJsZXR0ZXIiLCJrZXlzIiwiZXJyIiwidGFyZ2V0Iiwic291cmNlIiwiZnJvbSIsInN5bWJvbHMiLCJ0byIsImFyZ3VtZW50cyIsImxlbmd0aCIsImtleSIsImVtcHR5T2JqZWN0IiwiY2hlY2tEQ0UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJjb25zb2xlIiwiZXJyb3IiLCJnIiwiRnVuY3Rpb24iLCJldmFsIiwiZSIsIndpbmRvdyIsInkiLCJhIiwiYiIsImVuY29kZVVSSUNvbXBvbmVudCIsIkVycm9yIiwiZnJhbWVzVG9Qb3AiLCJBIiwicHJvcHMiLCJjb250ZXh0IiwicmVmcyIsInVwZGF0ZXIiLCJ6IiwiQiIsIkMiLCJFIiwiSiIsImsiLCJyZWYiLCJIIiwiSSIsImYiLCJjaGlsZHJlbiIsImgiLCJBcnJheSIsImRlZmF1bHRQcm9wcyIsIiQkdHlwZW9mIiwiciIsInR5cGUiLCJfb3duZXIiLCJHIiwiY3VycmVudCIsIksiLCJlc2NhcGUiLCI9IiwiOiIsInJlcGxhY2UiLCJOIiwiTSIsInBvcCIsInJlc3VsdCIsImtleVByZWZpeCIsImZ1bmMiLCJjb3VudCIsIk8iLCJwdXNoIiwiUCIsInQiLCJ1IiwidiIsIlEiLCJpc0FycmF5IiwieCIsIm5leHQiLCJkb25lIiwidmFsdWUiLCJ0b1N0cmluZyIsIlIiLCJTIiwiVCIsIkwiLCJxIiwiU3ltYm9sIiwidyIsIml0ZXJhdG9yIiwiaXNNb3VudGVkIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVTZXRTdGF0ZSIsImlzUmVhY3RDb21wb25lbnQiLCJzZXRTdGF0ZSIsImZvcmNlVXBkYXRlIiwiRCIsImNvbnN0cnVjdG9yIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJGIiwidW5zdGFibGVfaXNBc3luY1JlYWN0Q29tcG9uZW50IiwicmVuZGVyIiwiX19zZWxmIiwiX19zb3VyY2UiLCJVIiwiQ2hpbGRyZW4iLCJ0b0FycmF5Iiwib25seSIsIkNvbXBvbmVudCIsIlB1cmVDb21wb25lbnQiLCJ1bnN0YWJsZV9Bc3luY0NvbXBvbmVudCIsIkZyYWdtZW50IiwiY3JlYXRlRWxlbWVudCIsImNsb25lRWxlbWVudCIsImNyZWF0ZUZhY3RvcnkiLCJiaW5kIiwiaXNWYWxpZEVsZW1lbnQiLCJ2ZXJzaW9uIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJSZWFjdEN1cnJlbnRPd25lciIsIlYiLCJmcmVlemUiLCJkZWZhdWx0IiwiVyIsInBhIiwidmEiLCJvYSIsIndhIiwiaGFzQm9vbGVhblZhbHVlIiwiaGFzU3RyaW5nQm9vbGVhblZhbHVlIiwiaGFzT3ZlcmxvYWRlZEJvb2xlYW5WYWx1ZSIsInRvTG93ZXJDYXNlIiwic2xpY2UiLCJ1YSIsIklhIiwidG9VcHBlckNhc2UiLCJKYSIsIl9oYXNDYXVnaHRFcnJvciIsIl9jYXVnaHRFcnJvciIsImFwcGx5IiwiS2EiLCJfaGFzUmV0aHJvd0Vycm9yIiwiX3JldGhyb3dFcnJvciIsIk5hIiwiTGEiLCJNYSIsImluZGV4T2YiLCJPYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwiUGEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsIlFhIiwicmVnaXN0cmF0aW9uTmFtZSIsIlJhIiwiU2EiLCJkZXBlbmRlbmNpZXMiLCJUYSIsIlVhIiwiWmEiLCJjdXJyZW50VGFyZ2V0IiwiWWEiLCJpbnZva2VHdWFyZGVkQ2FsbGJhY2tBbmRDYXRjaEZpcnN0RXJyb3IiLCIkYSIsImNvbmNhdCIsImFiIiwiY2IiLCJfZGlzcGF0Y2hMaXN0ZW5lcnMiLCJfZGlzcGF0Y2hJbnN0YW5jZXMiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImlzUGVyc2lzdGVudCIsInJlbGVhc2UiLCJkYiIsImdiIiwiaWIiLCJzdGF0ZU5vZGUiLCJXYSIsImRpc2FibGVkIiwiamIiLCJrYiIsImJiIiwibGIiLCJyZXRocm93Q2F1Z2h0RXJyb3IiLCJwYiIsInBhcmVudE5vZGUiLCJ0YWciLCJxYiIsInJiIiwib2IiLCJ0YiIsInViIiwidmIiLCJkaXNwYXRjaENvbmZpZyIsIndiIiwiX3RhcmdldEluc3QiLCJ4YiIsInliIiwiemIiLCJBYiIsIkJiIiwiYWx0ZXJuYXRlIiwiRWIiLCJEYiIsImNhblVzZURPTSIsImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50IiwiRmIiLCJfZmFsbGJhY2tUZXh0IiwiX3N0YXJ0VGV4dCIsIkdiIiwiX3Jvb3QiLCJuYXRpdmVFdmVudCIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsIktiIiwiZXZlbnRQb29sIiwiTGIiLCJkZXN0cnVjdG9yIiwiSmIiLCJnZXRQb29sZWQiLCJNYiIsIk5iIiwiZGMiLCJQYiIsImtleUNvZGUiLCJlYyIsImRldGFpbCIsImRhdGEiLCJnYyIsIndoaWNoIiwiY2MiLCJhYyIsImhjIiwiZmMiLCJWYiIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsIiRiIiwibWMiLCJYYSIsImpjIiwicmVzdG9yZUNvbnRyb2xsZWRTdGF0ZSIsIm9jIiwia2MiLCJsYyIsInBjIiwicmMiLCJ0YyIsInNjIiwidmMiLCJub2RlTmFtZSIsInVjIiwid2MiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJub2RlVHlwZSIsInljIiwic2V0QXR0cmlidXRlIiwieGMiLCJpbXBsZW1lbnRhdGlvbiIsImhhc0ZlYXR1cmUiLCJ6YyIsIkFjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwic2V0IiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsIl92YWx1ZVRyYWNrZXIiLCJCYyIsIkNjIiwiY2hlY2tlZCIsIkVjIiwiRGMiLCJjaGFuZ2UiLCJIYyIsIkljIiwiSmMiLCJMYyIsIkZjIiwiZGV0YWNoRXZlbnQiLCJNYyIsIkdjIiwicHJvcGVydHlOYW1lIiwiTmMiLCJhdHRhY2hFdmVudCIsIk9jIiwiUGMiLCIkYyIsImJkIiwiZGQiLCJnZXRNb2RpZmllclN0YXRlIiwiY2QiLCJlZCIsImZkIiwiamQiLCJkaXNwbGF5TmFtZSIsImtkIiwiZWZmZWN0VGFnIiwibGQiLCJfcmVhY3RJbnRlcm5hbEZpYmVyIiwibWQiLCJuZCIsImNoaWxkIiwic2libGluZyIsIm9kIiwicGQiLCJyZCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJjb250YWluZXJJbmZvIiwic2QiLCJ0b3BMZXZlbFR5cGUiLCJ1ZCIsInRkIiwiYmEiLCJsaXN0ZW4iLCJ2ZCIsIndkIiwiY2FwdHVyZSIsInFkIiwieWQiLCJDZCIsIkFkIiwiemQiLCJCZCIsIkhkIiwiR2QiLCJGZCIsIkVkIiwiSWQiLCJmaXJzdENoaWxkIiwiSmQiLCJ0ZXh0Q29udGVudCIsIm5vZGUiLCJvZmZzZXQiLCJuZXh0U2libGluZyIsIktkIiwiY29udGVudEVkaXRhYmxlIiwiUmQiLCJRZCIsIk5kIiwiZGEiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0IiwiZW5kIiwic2VsZWN0aW9uRW5kIiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yTm9kZSIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiUGQiLCJlYSIsIk1kIiwic2VsZWN0IiwiT2QiLCJUZCIsIlVkIiwiVmQiLCJXZCIsImNoYXJDb2RlIiwiWmQiLCIkZCIsImFlIiwiYmUiLCJjZSIsImhlIiwiZ2UiLCJrZSIsImxlIiwiamUiLCJpZSIsIm1lIiwiY29udGV4dFR5cGVzIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiY2hpbGRDb250ZXh0VHlwZXMiLCJuZSIsIlgiLCJvZSIsImN1cnNvciIsInBlIiwiZ2V0Q2hpbGRDb250ZXh0IiwicWUiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsInJlIiwiWSIsImluZGV4IiwibWVtb2l6ZWRTdGF0ZSIsInVwZGF0ZVF1ZXVlIiwibWVtb2l6ZWRQcm9wcyIsInBlbmRpbmdQcm9wcyIsImludGVybmFsQ29udGV4dFRhZyIsImxhc3RFZmZlY3QiLCJmaXJzdEVmZmVjdCIsIm5leHRFZmZlY3QiLCJleHBpcmF0aW9uVGltZSIsInNlIiwidGUiLCJ1ZSIsInZlIiwid2UiLCJoYW5kbGVyIiwieGUiLCJ5ZSIsInBlbmRpbmdDaGlsZHJlbiIsIkJlIiwiQ2UiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsInplIiwib25Db21taXRGaWJlclJvb3QiLCJBZSIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiRGUiLCJFZSIsIkZlIiwiYmFzZVN0YXRlIiwiZmlyc3QiLCJsYXN0IiwiY2FsbGJhY2tMaXN0IiwiaGFzRm9yY2VVcGRhdGUiLCJpc0luaXRpYWxpemVkIiwiR2UiLCJIZSIsIkllIiwicGFydGlhbFN0YXRlIiwiSmUiLCJpc1JlcGxhY2UiLCJpc0ZvcmNlZCIsImNhbGxiYWNrIiwiS2UiLCJMZSIsIm5leHRDYWxsYmFjayIsImFkb3B0Q2xhc3NJbnN0YW5jZSIsImNvbnN0cnVjdENsYXNzSW5zdGFuY2UiLCJtb3VudENsYXNzSW5zdGFuY2UiLCJzdGF0ZSIsImNvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudERpZE1vdW50IiwidXBkYXRlQ2xhc3NJbnN0YW5jZSIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJjb21wb25lbnREaWRVcGRhdGUiLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiWGUiLCJXZSIsIlplIiwiX3N0cmluZ1JlZiIsIiRlIiwiYWYiLCJNYXAiLCJSZSIsIlZlIiwiU2UiLCJUZSIsIlVlIiwiWWUiLCJkZiIsImNmIiwiYmYiLCJpZCIsInBlbmRpbmdDb250ZXh0Iiwic2hvdWxkU2V0VGV4dENvbnRlbnQiLCJ1c2VTeW5jU2NoZWR1bGluZyIsInNob3VsZERlcHJpb3JpdGl6ZVN1YnRyZWUiLCJwdXNoSG9zdENvbnRleHQiLCJwdXNoSG9zdENvbnRhaW5lciIsImVudGVySHlkcmF0aW9uU3RhdGUiLCJyZXNldEh5ZHJhdGlvblN0YXRlIiwidHJ5VG9DbGFpbU5leHRIeWRyYXRhYmxlSW5zdGFuY2UiLCJPYiIsImJlZ2luV29yayIsImVsZW1lbnQiLCJoeWRyYXRlIiwiYmVnaW5GYWlsZWRXb3JrIiwiZWYiLCJjcmVhdGVJbnN0YW5jZSIsImNyZWF0ZVRleHRJbnN0YW5jZSIsImFwcGVuZEluaXRpYWxDaGlsZCIsImZpbmFsaXplSW5pdGlhbENoaWxkcmVuIiwicHJlcGFyZVVwZGF0ZSIsInBlcnNpc3RlbmNlIiwiZ2V0Um9vdEhvc3RDb250YWluZXIiLCJwb3BIb3N0Q29udGV4dCIsImdldEhvc3RDb250ZXh0IiwicG9wSG9zdENvbnRhaW5lciIsInByZXBhcmVUb0h5ZHJhdGVIb3N0SW5zdGFuY2UiLCJwcmVwYXJlVG9IeWRyYXRlSG9zdFRleHRJbnN0YW5jZSIsInBvcEh5ZHJhdGlvblN0YXRlIiwibXV0YXRpb24iLCJjb21wbGV0ZVdvcmsiLCJmZiIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiZ2V0UHVibGljSW5zdGFuY2UiLCJjb21taXRNb3VudCIsImNvbW1pdFVwZGF0ZSIsInJlc2V0VGV4dENvbnRlbnQiLCJjb21taXRUZXh0VXBkYXRlIiwiYXBwZW5kQ2hpbGQiLCJhcHBlbmRDaGlsZFRvQ29udGFpbmVyIiwiaW5zZXJ0QmVmb3JlIiwiaW5zZXJ0SW5Db250YWluZXJCZWZvcmUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZUNoaWxkRnJvbUNvbnRhaW5lciIsImNvbW1pdFJlc2V0VGV4dENvbnRlbnQiLCJjb21taXRQbGFjZW1lbnQiLCJjb21taXREZWxldGlvbiIsImNvbW1pdFdvcmsiLCJjb21taXRMaWZlQ3ljbGVzIiwiY29tbWl0QXR0YWNoUmVmIiwiY29tbWl0RGV0YWNoUmVmIiwiaGYiLCJnZiIsImdldENoaWxkSG9zdENvbnRleHQiLCJnZXRSb290SG9zdENvbnRleHQiLCJyZXNldEhvc3RDb250YWluZXIiLCJqZiIsImh5ZHJhdGlvbiIsImNhbkh5ZHJhdGVJbnN0YW5jZSIsImNhbkh5ZHJhdGVUZXh0SW5zdGFuY2UiLCJnZXROZXh0SHlkcmF0YWJsZVNpYmxpbmciLCJnZXRGaXJzdEh5ZHJhdGFibGVDaGlsZCIsImh5ZHJhdGVJbnN0YW5jZSIsImh5ZHJhdGVUZXh0SW5zdGFuY2UiLCJrZiIsIlFiIiwiamEiLCJpc1JlYWR5Rm9yQ29tbWl0IiwieWciLCJ6ZyIsIkFnIiwiTmUiLCJPZSIsIlNjIiwiQmciLCJUYyIsIkNnIiwiRGciLCJFZyIsImNvbXBvbmVudERpZENhdGNoIiwiY29tcG9uZW50U3RhY2siLCJjYSIsIlFjIiwiaGEiLCJxYSIsIkZnIiwicmciLCJHZyIsIlVjIiwicmEiLCJSYyIsImViIiwicWciLCJoYXMiLCJTZXQiLCJhZGQiLCJfZGVidWdPd25lciIsIl9kZWJ1Z1NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsImNvbXBvbmVudE5hbWUiLCJlcnJvckJvdW5kYXJ5IiwiZXJyb3JCb3VuZGFyeUZvdW5kIiwiZXJyb3JCb3VuZGFyeU5hbWUiLCJ3aWxsUmV0cnkiLCJzdXBwcmVzc1JlYWN0RXJyb3JMb2dnaW5nIiwiVmMiLCJrYSIsIkhnIiwiUmIiLCJJZyIsIm5leHRTY2hlZHVsZWRSb290IiwicmVtYWluaW5nRXhwaXJhdGlvblRpbWUiLCJzYSIsIkZhIiwibGEiLCJTYiIsIm1hIiwibmEiLCJXYyIsIlBlIiwiVGIiLCJKZyIsIlhjIiwiS2ciLCJ0aW1lb3V0IiwiZmIiLCJZYyIsIlViIiwiWmMiLCJmaW5pc2hlZFdvcmsiLCJ0aW1lUmVtYWluaW5nIiwiTGciLCJNZSIsIm5vdyIsInNjaGVkdWxlRGVmZXJyZWRDYWxsYmFjayIsImNhbmNlbERlZmVycmVkQ2FsbGJhY2siLCJwcmVwYXJlRm9yQ29tbWl0IiwicmVzZXRBZnRlckNvbW1pdCIsImNvbXB1dGVBc3luY0V4cGlyYXRpb24iLCJjb21wdXRlRXhwaXJhdGlvbkZvckZpYmVyIiwic2NoZWR1bGVXb3JrIiwiYmF0Y2hlZFVwZGF0ZXMiLCJ1bmJhdGNoZWRVcGRhdGVzIiwiZmx1c2hTeW5jIiwiZGVmZXJyZWRVcGRhdGVzIiwibGYiLCJjcmVhdGVDb250YWluZXIiLCJ1cGRhdGVDb250YWluZXIiLCJnZXRQdWJsaWNSb290SW5zdGFuY2UiLCJmaW5kSG9zdEluc3RhbmNlIiwiZmluZEhvc3RJbnN0YW5jZVdpdGhOb1BvcnRhbHMiLCJpbmplY3RJbnRvRGV2VG9vbHMiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwicGYiLCJIZiIsIkdmIiwiRmYiLCJFZiIsInRlc3QiLCJJZiIsIm11dGF0aW9uTWV0aG9kIiwiaGFzTnVtZXJpY1ZhbHVlIiwiaXNOYU4iLCJoYXNQb3NpdGl2ZU51bWVyaWNWYWx1ZSIsIkpmIiwibXVzdFVzZVByb3BlcnR5IiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsInNldEF0dHJpYnV0ZU5TIiwiS2YiLCJyZW1vdmVBdHRyaWJ1dGUiLCJMZiIsInN0ZXAiLCJtaW4iLCJtYXgiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsVmFsdWUiLCJpbml0aWFsQ2hlY2tlZCIsIk1mIiwiY29udHJvbGxlZCIsIk5mIiwiT2YiLCJwYXJzZUZsb2F0IiwiUGYiLCJRZiIsImFhIiwiUmYiLCJTZiIsIm9wdGlvbnMiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsIlRmIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIlVmIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJWZiIsIldmIiwiWGYiLCJaZiIsIiRmIiwiY2ciLCJsYXN0Q2hpbGQiLCJub2RlVmFsdWUiLCJmZyIsInN0eWxlIiwiZGciLCJ0cmltIiwic2V0UHJvcGVydHkiLCJoZyIsImdnIiwiaWciLCJpcyIsImxnIiwib3duZXJEb2N1bWVudCIsInRvcEJsdXIiLCJ0b3BGb2N1cyIsInRvcENhbmNlbCIsInRvcENsb3NlIiwiRGQiLCJuZyIsImpnIiwiaW5uZXJIVE1MIiwiY3JlYXRlRWxlbWVudE5TIiwib2ciLCJjcmVhdGVUZXh0Tm9kZSIsInBnIiwibWciLCJrZyIsIl9faHRtbCIsImJnIiwib25DbGljayIsIm9uY2xpY2siLCJzZyIsInRnIiwidWciLCJ2ZyIsIk5nIiwiT2ciLCJoYXNBdHRyaWJ1dGUiLCJQZyIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJaIiwiUWciLCJSZyIsImZhIiwiaWEiLCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmciLCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmciLCJ0YSIsIk1VU1RfVVNFX1BST1BFUlRZIiwiSEFTX0JPT0xFQU5fVkFMVUUiLCJIQVNfTlVNRVJJQ19WQUxVRSIsIkhBU19QT1NJVElWRV9OVU1FUklDX1ZBTFVFIiwiSEFTX09WRVJMT0FERURfQk9PTEVBTl9WQUxVRSIsIkhBU19TVFJJTkdfQk9PTEVBTl9WQUxVRSIsImluamVjdERPTVByb3BlcnR5Q29uZmlnIiwiUHJvcGVydGllcyIsIkRPTUF0dHJpYnV0ZU5hbWVzcGFjZXMiLCJET01BdHRyaWJ1dGVOYW1lcyIsIkRPTU11dGF0aW9uTWV0aG9kcyIsInhhIiwieWEiLCJ6YSIsIkFhIiwiQmEiLCJDYSIsIkRhIiwiYWxsb3dGdWxsU2NyZWVuIiwiYXN5bmMiLCJhdXRvRm9jdXMiLCJhdXRvUGxheSIsImNvbHMiLCJjb250cm9scyIsImRlZmVyIiwiZG93bmxvYWQiLCJkcmFnZ2FibGUiLCJmb3JtTm9WYWxpZGF0ZSIsImhpZGRlbiIsImxvb3AiLCJtdXRlZCIsIm5vVmFsaWRhdGUiLCJvcGVuIiwicGxheXNJbmxpbmUiLCJyZWFkT25seSIsInJlcXVpcmVkIiwicmV2ZXJzZWQiLCJyb3dzIiwicm93U3BhbiIsInNjb3BlZCIsInNlYW1sZXNzIiwic2l6ZSIsInNwYW4iLCJzcGVsbENoZWNrIiwidGFiSW5kZXgiLCJpdGVtU2NvcGUiLCJhY2NlcHRDaGFyc2V0IiwiY2xhc3NOYW1lIiwiaHRtbEZvciIsImh0dHBFcXVpdiIsInZhbGlkaXR5IiwiYmFkSW5wdXQiLCJhY3RpdmVFbGVtZW50IiwiRWEiLCJ4bGluayIsInhtbCIsIkdhIiwiYXV0b1JldmVyc2UiLCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkIiwicHJlc2VydmVBbHBoYSIsInhsaW5rQWN0dWF0ZSIsInhsaW5rQXJjcm9sZSIsInhsaW5rSHJlZiIsInhsaW5rUm9sZSIsInhsaW5rU2hvdyIsInhsaW5rVGl0bGUiLCJ4bGlua1R5cGUiLCJ4bWxCYXNlIiwieG1sTGFuZyIsInhtbFNwYWNlIiwiSGEiLCJpbmplY3Rpb24iLCJpbmplY3RFcnJvclV0aWxzIiwiaW52b2tlR3VhcmRlZENhbGxiYWNrIiwiaGFzQ2F1Z2h0RXJyb3IiLCJjbGVhckNhdWdodEVycm9yIiwiVmEiLCJwbHVnaW5zIiwiZXZlbnROYW1lRGlzcGF0Y2hDb25maWdzIiwicmVnaXN0cmF0aW9uTmFtZU1vZHVsZXMiLCJyZWdpc3RyYXRpb25OYW1lRGVwZW5kZW5jaWVzIiwicG9zc2libGVSZWdpc3RyYXRpb25OYW1lcyIsImluamVjdEV2ZW50UGx1Z2luT3JkZXIiLCJpbmplY3RFdmVudFBsdWdpbnNCeU5hbWUiLCJoYiIsIm1iIiwiZ2V0TGlzdGVuZXIiLCJlbnF1ZXVlRXZlbnRzIiwicHJvY2Vzc0V2ZW50UXVldWUiLCJuYiIsIk1hdGgiLCJyYW5kb20iLCJzYiIsInByZWNhY2hlRmliZXJOb2RlIiwiZ2V0Q2xvc2VzdEluc3RhbmNlRnJvbU5vZGUiLCJnZXRJbnN0YW5jZUZyb21Ob2RlIiwiZ2V0Tm9kZUZyb21JbnN0YW5jZSIsImdldEZpYmVyQ3VycmVudFByb3BzRnJvbU5vZGUiLCJ1cGRhdGVGaWJlclByb3BzIiwiQ2IiLCJhY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzIiwiYWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlc1NraXBUYXJnZXQiLCJhY2N1bXVsYXRlRW50ZXJMZWF2ZURpc3BhdGNoZXMiLCJhY2N1bXVsYXRlRGlyZWN0RGlzcGF0Y2hlcyIsIkhiIiwiSWIiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwiaXNUcnVzdGVkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiYXVnbWVudENsYXNzIiwiV2IiLCJkb2N1bWVudE1vZGUiLCJYYiIsIlliIiwib3BlcmEiLCJwYXJzZUludCIsIlpiIiwiYmMiLCJiZWZvcmVJbnB1dCIsImJ1YmJsZWQiLCJjYXB0dXJlZCIsImNvbXBvc2l0aW9uRW5kIiwiY29tcG9zaXRpb25TdGFydCIsImNvbXBvc2l0aW9uVXBkYXRlIiwiaWMiLCJuYyIsImluamVjdEZpYmVyQ29udHJvbGxlZEhvc3RDb21wb25lbnQiLCJxYyIsImVucXVldWVTdGF0ZVJlc3RvcmUiLCJyZXN0b3JlU3RhdGVJZk5lZWRlZCIsImNvbG9yIiwiZGF0ZSIsImRhdGV0aW1lIiwiZGF0ZXRpbWUtbG9jYWwiLCJlbWFpbCIsIm1vbnRoIiwibnVtYmVyIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRleHQiLCJ0aW1lIiwidXJsIiwid2VlayIsIktjIiwiYWQiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwiZ2V0QXR0cmlidXRlIiwidmlldyIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsImdkIiwibW91c2VFbnRlciIsIm1vdXNlTGVhdmUiLCJoZCIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93IiwieGQiLCJfZW5hYmxlZCIsIl9oYW5kbGVUb3BMZXZlbCIsInNldEhhbmRsZVRvcExldmVsIiwic2V0RW5hYmxlZCIsImlzRW5hYmxlZCIsInRyYXBCdWJibGVkRXZlbnQiLCJ0cmFwQ2FwdHVyZWRFdmVudCIsImRpc3BhdGNoRXZlbnQiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwidG9wQWJvcnQiLCJ0b3BBbmltYXRpb25FbmQiLCJ0b3BBbmltYXRpb25JdGVyYXRpb24iLCJ0b3BBbmltYXRpb25TdGFydCIsInRvcENhblBsYXkiLCJ0b3BDYW5QbGF5VGhyb3VnaCIsInRvcENoYW5nZSIsInRvcENsaWNrIiwidG9wQ29tcG9zaXRpb25FbmQiLCJ0b3BDb21wb3NpdGlvblN0YXJ0IiwidG9wQ29tcG9zaXRpb25VcGRhdGUiLCJ0b3BDb250ZXh0TWVudSIsInRvcENvcHkiLCJ0b3BDdXQiLCJ0b3BEb3VibGVDbGljayIsInRvcERyYWciLCJ0b3BEcmFnRW5kIiwidG9wRHJhZ0VudGVyIiwidG9wRHJhZ0V4aXQiLCJ0b3BEcmFnTGVhdmUiLCJ0b3BEcmFnT3ZlciIsInRvcERyYWdTdGFydCIsInRvcERyb3AiLCJ0b3BEdXJhdGlvbkNoYW5nZSIsInRvcEVtcHRpZWQiLCJ0b3BFbmNyeXB0ZWQiLCJ0b3BFbmRlZCIsInRvcEVycm9yIiwidG9wSW5wdXQiLCJ0b3BLZXlEb3duIiwidG9wS2V5UHJlc3MiLCJ0b3BLZXlVcCIsInRvcExvYWRlZERhdGEiLCJ0b3BMb2FkIiwidG9wTG9hZGVkTWV0YWRhdGEiLCJ0b3BMb2FkU3RhcnQiLCJ0b3BNb3VzZURvd24iLCJ0b3BNb3VzZU1vdmUiLCJ0b3BNb3VzZU91dCIsInRvcE1vdXNlT3ZlciIsInRvcE1vdXNlVXAiLCJ0b3BQYXN0ZSIsInRvcFBhdXNlIiwidG9wUGxheSIsInRvcFBsYXlpbmciLCJ0b3BQcm9ncmVzcyIsInRvcFJhdGVDaGFuZ2UiLCJ0b3BTY3JvbGwiLCJ0b3BTZWVrZWQiLCJ0b3BTZWVraW5nIiwidG9wU2VsZWN0aW9uQ2hhbmdlIiwidG9wU3RhbGxlZCIsInRvcFN1c3BlbmQiLCJ0b3BUZXh0SW5wdXQiLCJ0b3BUaW1lVXBkYXRlIiwidG9wVG9nZ2xlIiwidG9wVG91Y2hDYW5jZWwiLCJ0b3BUb3VjaEVuZCIsInRvcFRvdWNoTW92ZSIsInRvcFRvdWNoU3RhcnQiLCJ0b3BUcmFuc2l0aW9uRW5kIiwidG9wVm9sdW1lQ2hhbmdlIiwidG9wV2FpdGluZyIsInRvcFdoZWVsIiwiTGQiLCJTZCIsIm9uU2VsZWN0IiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsImNsaXBib2FyZERhdGEiLCJYZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJZZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJsb2NhdGlvbiIsInJlcGVhdCIsImxvY2FsZSIsImRhdGFUcmFuc2ZlciIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsImRlIiwiZWUiLCJmZSIsIlNpbXBsZUV2ZW50UGx1Z2luIiwiRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIiwiQ2hhbmdlRXZlbnRQbHVnaW4iLCJTZWxlY3RFdmVudFBsdWdpbiIsIkJlZm9yZUlucHV0RXZlbnRQbHVnaW4iLCJRZSIsIm1mIiwibmYiLCJvZiIsInFmIiwicGVyZm9ybWFuY2UiLCJyZiIsInNmIiwidGYiLCJyZXF1ZXN0SWRsZUNhbGxiYWNrIiwiY2FuY2VsSWRsZUNhbGxiYWNrIiwiQmYiLCJ1ZiIsInZmIiwid2YiLCJ4ZiIsInlmIiwiemYiLCJBZiIsImRpZFRpbWVvdXQiLCJDZiIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJEZiIsInBvc3RNZXNzYWdlIiwic2V0VGltZW91dCIsIkluZmluaXR5IiwiY2xlYXJUaW1lb3V0IiwiWWYiLCJodG1sIiwibWF0aG1sIiwic3ZnIiwiYWciLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwibmFtZXNwYWNlVVJJIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwiZWciLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJ3ZyIsInNldEluaXRpYWxQcm9wZXJ0aWVzIiwiZGlmZlByb3BlcnRpZXMiLCJ1cGRhdGVQcm9wZXJ0aWVzIiwiZGlmZkh5ZHJhdGVkUHJvcGVydGllcyIsImRpZmZIeWRyYXRlZFRleHQiLCJ3YXJuRm9yVW5tYXRjaGVkVGV4dCIsIndhcm5Gb3JEZWxldGVkSHlkcmF0YWJsZUVsZW1lbnQiLCJ3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVUZXh0Iiwid2FybkZvckluc2VydGVkSHlkcmF0ZWRFbGVtZW50Iiwid2FybkZvckluc2VydGVkSHlkcmF0ZWRUZXh0IiwicXVlcnlTZWxlY3RvckFsbCIsIkpTT04iLCJzdHJpbmdpZnkiLCJmb3JtIiwieGciLCJNZyIsInRhZ05hbWUiLCJyYW5nZUNvdW50IiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImV4dGVuZCIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwiZm9jdXMiLCJkaWROb3RNYXRjaEh5ZHJhdGVkQ29udGFpbmVyVGV4dEluc3RhbmNlIiwiZGlkTm90TWF0Y2hIeWRyYXRlZFRleHRJbnN0YW5jZSIsImRpZE5vdEh5ZHJhdGVDb250YWluZXJJbnN0YW5jZSIsImRpZE5vdEh5ZHJhdGVJbnN0YW5jZSIsImRpZE5vdEZpbmRIeWRyYXRhYmxlQ29udGFpbmVySW5zdGFuY2UiLCJkaWROb3RGaW5kSHlkcmF0YWJsZUNvbnRhaW5lclRleHRJbnN0YW5jZSIsImRpZE5vdEZpbmRIeWRyYXRhYmxlSW5zdGFuY2UiLCJkaWROb3RGaW5kSHlkcmF0YWJsZVRleHRJbnN0YW5jZSIsInVubW91bnQiLCJTZyIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9kZWZlcnJlZFVwZGF0ZXMiLCJFdmVudFBsdWdpbkh1YiIsIkV2ZW50UGx1Z2luUmVnaXN0cnkiLCJFdmVudFByb3BhZ2F0b3JzIiwiUmVhY3RDb250cm9sbGVkQ29tcG9uZW50IiwiUmVhY3RET01Db21wb25lbnRUcmVlIiwiUmVhY3RET01FdmVudExpc3RlbmVyIiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJUZyIsIlVnIiwiRXhlY3V0aW9uRW52aXJvbm1lbnQiLCJjYW5Vc2VXb3JrZXJzIiwiV29ya2VyIiwiY2FuVXNlRXZlbnRMaXN0ZW5lcnMiLCJjYW5Vc2VWaWV3cG9ydCIsInNjcmVlbiIsImlzSW5Xb3JrZXIiLCJFdmVudExpc3RlbmVyIiwiZXZlbnRUeXBlIiwicmVtb3ZlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInJlZ2lzdGVyRGVmYXVsdCIsImdldEFjdGl2ZUVsZW1lbnQiLCJkb2MiLCJib2R5Iiwic2hhbGxvd0VxdWFsIiwib2JqQSIsIm9iakIiLCJrZXlzQSIsImtleXNCIiwiY29udGFpbnNOb2RlIiwib3V0ZXJOb2RlIiwiaW5uZXJOb2RlIiwiaXNUZXh0Tm9kZSIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJpc05vZGUiLCJOb2RlIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm9iaiIsIl9pblZpZXciLCJwcm9jZXNzIiwiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiUmVmZXJlbmNlRXJyb3IiLCJfaW5oZXJpdHMiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJjcmVhdGUiLCJ3cml0YWJsZSIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiX2NyZWF0ZUNsYXNzIiwiZGVmaW5lUHJvcGVydGllcyIsImRlc2NyaXB0b3IiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJfcmVhY3QiLCJfcmVhY3QyIiwiX3JlYWN0RG9tIiwiX2xvZGFzaCIsIl9sb2Rhc2gyIiwiX3V0aWwiLCJvbldpbmRvd1Njcm9sbCIsIm9uIiwicGFzc2l2ZSIsImlzUHJvZCIsImVudiIsIkluVmlldyIsIl9SZWFjdCRDb21wb25lbnQiLCJfcmVmIiwiX3RlbXAiLCJfdGhpcyIsIl9yZXQiLCJfbGVuIiwiYXJncyIsIl9rZXkiLCJnZXRQcm90b3R5cGVPZiIsIm1vdW50ZWQiLCJpc0luVmlldyIsImhhc1VwZGF0ZWQiLCJjaGVja0lzSW5WaWV3Iiwib25jZSIsInRocmVzaG9sZCIsIndhcm4iLCJ3YXNJblZpZXciLCJpc05vd0luVmlldyIsImlzSW5WaWV3cG9ydCIsImNoZWNrSXNJblZpZXdEZWJvdW5jZWQiLCJkZWJvdW5jZSIsImluVmlld3BvcnQiLCJib3VuZGluZ0xlZnQiLCJib3VuZGluZ1JpZ2h0IiwicmVxdWlyZUVudGlyZUVsZW1lbnRJblZpZXdwb3J0Iiwic2Nyb2xsVW5zdWJzY3JpYmUiLCJuZXh0UHJvcHMiLCJkZWZhdWx0U2V0VGltb3V0IiwiZGVmYXVsdENsZWFyVGltZW91dCIsInJ1blRpbWVvdXQiLCJmdW4iLCJjYWNoZWRTZXRUaW1lb3V0IiwicnVuQ2xlYXJUaW1lb3V0IiwibWFya2VyIiwiY2FjaGVkQ2xlYXJUaW1lb3V0IiwiY2xlYW5VcE5leHRUaWNrIiwiZHJhaW5pbmciLCJjdXJyZW50UXVldWUiLCJxdWV1ZSIsInF1ZXVlSW5kZXgiLCJkcmFpblF1ZXVlIiwibGVuIiwicnVuIiwiSXRlbSIsImFycmF5Iiwibm9vcCIsIm5leHRUaWNrIiwidGl0bGUiLCJicm93c2VyIiwiYXJndiIsInZlcnNpb25zIiwiYWRkTGlzdGVuZXIiLCJvZmYiLCJyZW1vdmVMaXN0ZW5lciIsInJlbW92ZUFsbExpc3RlbmVycyIsImVtaXQiLCJwcmVwZW5kTGlzdGVuZXIiLCJwcmVwZW5kT25jZUxpc3RlbmVyIiwibGlzdGVuZXJzIiwiYmluZGluZyIsImN3ZCIsImNoZGlyIiwiZGlyIiwidW1hc2siLCJnbG9iYWwiLCJ3YWl0IiwiaW52b2tlRnVuYyIsImxhc3RBcmdzIiwidGhpc0FyZyIsImxhc3RUaGlzIiwibGFzdEludm9rZVRpbWUiLCJsZWFkaW5nRWRnZSIsInRpbWVySWQiLCJ0aW1lckV4cGlyZWQiLCJsZWFkaW5nIiwicmVtYWluaW5nV2FpdCIsInRpbWVTaW5jZUxhc3RDYWxsIiwibGFzdENhbGxUaW1lIiwidGltZVNpbmNlTGFzdEludm9rZSIsIm1heGluZyIsIm5hdGl2ZU1pbiIsIm1heFdhaXQiLCJzaG91bGRJbnZva2UiLCJ0cmFpbGluZ0VkZ2UiLCJ0cmFpbGluZyIsImNhbmNlbCIsImZsdXNoIiwiZGVib3VuY2VkIiwiaXNJbnZva2luZyIsIkZVTkNfRVJST1JfVEVYVCIsInRvTnVtYmVyIiwiaXNPYmplY3QiLCJuYXRpdmVNYXgiLCJpc09iamVjdExpa2UiLCJpc1N5bWJvbCIsIm9iamVjdFRvU3RyaW5nIiwic3ltYm9sVGFnIiwiTkFOIiwib3RoZXIiLCJ2YWx1ZU9mIiwicmVUcmltIiwiaXNCaW5hcnkiLCJyZUlzQmluYXJ5IiwicmVJc09jdGFsIiwiZnJlZVBhcnNlSW50IiwicmVJc0JhZEhleCIsImZyZWVHbG9iYWwiLCJmcmVlU2VsZiIsIm9iamVjdFByb3RvIiwiaXNCZXR3ZWVuIiwiZXZ0TmFtZSIsIm9wdHMiLCJlbCIsImZuIiwibWluSW5jbHVzaXZlIiwiaXNCb3VuZGluZ0NsaWVudFJlY3RJblJhbmdlIiwidGFyZ2V0UmVjdCIsImJvdW5kaW5nUmVjdCIsImZ1bGx5Q29udGFpbmVkIiwiaG9yaXpCb3VuZHMiLCJyaWdodCIsInZlcnRCb3VuZHMiLCJib3R0b20iLCJfcmVmMiIsIl9yZWYyJHRocmVzaG9sZCIsIl9yZWYyJG9mZnNldFZlcnQiLCJvZmZzZXRWZXJ0IiwiaW5uZXJIZWlnaHQiLCJfcmVmMiRvZmZzZXRIb3JpeiIsIm9mZnNldEhvcml6IiwiaW5uZXJXaWR0aCIsIl9yZWYyJHJlcXVpcmVFbnRpcmVFbCIsIm9mZnNldFBhcmVudCIsImhvcml6TWluIiwiaG9yaXpNYXgiLCJ2ZXJ0TWluIiwidmVydE1heCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsIl9zcmMiLCJfc3JjMiIsIl9wcm9wVHlwZXMiLCJfbWFya2VkIiwiX21hcmtlZDIiLCJjb2xvcnMiLCJCb3giLCJfQ29tcG9uZW50IiwiYmFja2dyb3VuZENvbG9yIiwicHJvcHR5cGVzIiwiaXNSZXF1aXJlZCIsIkRlbW8iLCJfQ29tcG9uZW50MiIsIl90aGlzMiIsInVwZGF0ZVRpdGxlIiwiaGVpZ2h0IiwiZmlsbCIsIl8iLCJEb2NzIiwiX0NvbXBvbmVudDMiLCJfdGVtcDIiLCJfdGhpczMiLCJfcmV0MiIsIl9sZW4yIiwiX2tleTIiLCJkb2NzIiwiX3RoaXM0IiwiZmV0Y2giLCJ0aGVuIiwiY2F0Y2giLCJnZXRFbGVtZW50QnlJZCIsImludmFyaWFudCIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0Iiwic2hpbSIsInByb3BOYW1lIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiZ2V0U2hpbSIsIlJlYWN0UHJvcFR5cGVzIiwiYm9vbCIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsImNvbmRpdGlvbiIsImZvcm1hdCIsInZhbGlkYXRlRm9ybWF0IiwiYXJnSW5kZXgiLCJMZXhlciIsInRva2VucyIsImxpbmtzIiwibWFya2VkIiwiZGVmYXVsdHMiLCJydWxlcyIsImJsb2NrIiwibm9ybWFsIiwiZ2ZtIiwidGFibGVzIiwiSW5saW5lTGV4ZXIiLCJpbmxpbmUiLCJyZW5kZXJlciIsIlJlbmRlcmVyIiwiYnJlYWtzIiwicGVkYW50aWMiLCJQYXJzZXIiLCJ0b2tlbiIsImVuY29kZSIsInVuZXNjYXBlIiwicmVnZXgiLCJvcHQiLCJSZWdFeHAiLCJyZXNvbHZlVXJsIiwiaHJlZiIsImJhc2VVcmxzIiwibWVyZ2UiLCJzcmMiLCJwZW5kaW5nIiwiaGlnaGxpZ2h0IiwibGV4Iiwib3V0IiwicGFyc2UiLCJsYW5nIiwiY29kZSIsImVzY2FwZWQiLCJtZXNzYWdlIiwic2lsZW50IiwibmV3bGluZSIsImZlbmNlcyIsImhlYWRpbmciLCJucHRhYmxlIiwibGhlYWRpbmciLCJibG9ja3F1b3RlIiwibGlzdCIsImRlZiIsInRhYmxlIiwicGFyYWdyYXBoIiwiYnVsbGV0IiwiaXRlbSIsIl90YWciLCJicSIsImxvb3NlIiwiY2FwIiwiYnVsbCIsInNwYWNlIiwiZXhlYyIsImRlcHRoIiwiaGVhZGVyIiwiYWxpZ24iLCJjZWxscyIsIm9yZGVyZWQiLCJtYXRjaCIsInNtYXJ0TGlzdHMiLCJzYW5pdGl6ZSIsInByZSIsInNhbml0aXplciIsImNoYXJDb2RlQXQiLCJhdXRvbGluayIsInJlZmxpbmsiLCJub2xpbmsiLCJzdHJvbmciLCJlbSIsImRlbCIsIl9pbnNpZGUiLCJfaHJlZiIsIm91dHB1dCIsIm1hbmdsZSIsImluTGluayIsIm91dHB1dExpbmsiLCJjb2Rlc3BhbiIsInNtYXJ0eXBhbnRzIiwiaW1hZ2UiLCJjaCIsImxhbmdQcmVmaXgiLCJxdW90ZSIsImxldmVsIiwicmF3IiwiaGVhZGVyUHJlZml4IiwieGh0bWwiLCJsaXN0aXRlbSIsInRhYmxlcm93IiwiY29udGVudCIsInRhYmxlY2VsbCIsImZsYWdzIiwicHJvdCIsImRlY29kZVVSSUNvbXBvbmVudCIsImJhc2VVcmwiLCJvcmlnaW5JbmRlcGVuZGVudFVybCIsInJldmVyc2UiLCJ0b2siLCJwZWVrIiwicGFyc2VUZXh0Iiwicm93IiwiY2VsbCIsImoiLCJzZXRPcHRpb25zIiwicGFyc2VyIiwibGV4ZXIiLCJpbmxpbmVMZXhlciJdLCJtYXBwaW5ncyI6IkNBQUEsU0FBQUEsRUFBQUMsR0FDQSxnQkFBQUMsVUFBQSxnQkFBQUMsUUFDQUEsT0FBQUQsUUFBQUQsSUFDQSxrQkFBQUcsZ0JBQUFDLElBQ0FELFVBQUFILEdBQ0EsZ0JBQUFDLFNBQ0FBLFFBQUEsd0JBQUFELElBRUFELEVBQUEsd0JBQUFDLEtBQ0MsbUJBQUFLLFdBQUFDLEtBQUEsV0FDRCxNQ0FnQixVQUFVQyxHQ04xQixRQUFBQyxHQUFBQyxHQUdBLEdBQUFDLEVBQUFELEdBQ0EsTUFBQUMsR0FBQUQsR0FBQVIsT0FHQSxJQUFBQyxHQUFBUSxFQUFBRCxJQUNBRSxFQUFBRixFQUNBRyxHQUFBLEVBQ0FYLFdBVUEsT0FOQU0sR0FBQUUsR0FBQUksS0FBQVgsRUFBQUQsUUFBQUMsSUFBQUQsUUFBQU8sR0FHQU4sRUFBQVUsR0FBQSxFQUdBVixFQUFBRCxRQXZCQSxHQUFBUyxLQTREQSxPQWhDQUYsR0FBQU0sRUFBQVAsRUFHQUMsRUFBQU8sRUFBQUwsRUFHQUYsRUFBQVEsRUFBQSxTQUFBZixFQUFBZ0IsRUFBQUMsR0FDQVYsRUFBQVcsRUFBQWxCLEVBQUFnQixJQUNBRyxPQUFBQyxlQUFBcEIsRUFBQWdCLEdBQ0FLLGNBQUEsRUFDQUMsWUFBQSxFQUNBQyxJQUFBTixLQU1BVixFQUFBaUIsRUFBQSxTQUFBdkIsR0FDQSxHQUFBZ0IsR0FBQWhC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QUFDLEdBQ0E0RSxPQUFBLEVBQ0FRLFFBQUEsTUFPQTlGLEVBQUFhLFNBQ0FiLEVBQUF3RyxPQUFBM0YsRUFBQWdCLE1BRUE3QixFQUFBVSxXQUVBVixFQUFBSCxRQUNBRyxFQUFBeUcsTUFBQTVHLEVBQUE4QixJQUVBM0IsRUFBQU8sY0FDQVAsRUFBQTBHLFlBQUFuRyxFQUFBa0UsT0FFQXpFLEVBQUE2QixNQUFBN0IsRUFHQXAvQyxFQUFBRCxRQUFBcS9DLElBT0N6K0MsS0FBQSxXQUNELE1BQUFQLFFBQUEsbUJBQUEwRSxlQUFBaXlDLFM1QnVpRTZCcDJDLEtBQUtaLEVBQVNPLEVBQW9CIiwiZmlsZSI6ImRlbW8uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdGVsc2UgaWYodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKVxuXHRcdGRlZmluZShbXSwgZmFjdG9yeSk7XG5cdGVsc2UgaWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKVxuXHRcdGV4cG9ydHNbXCJyZWFjdC1ub3cteW91LXNlZS1tZVwiXSA9IGZhY3RvcnkoKTtcblx0ZWxzZVxuXHRcdHJvb3RbXCJyZWFjdC1ub3cteW91LXNlZS1tZVwiXSA9IGZhY3RvcnkoKTtcbn0pKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJyA/IHNlbGYgOiB0aGlzLCBmdW5jdGlvbigpIHtcbnJldHVybiBcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoW10sIGZhY3RvcnkpO1xuXHRlbHNlIGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jylcblx0XHRleHBvcnRzW1wicmVhY3Qtbm93LXlvdS1zZWUtbWVcIl0gPSBmYWN0b3J5KCk7XG5cdGVsc2Vcblx0XHRyb290W1wicmVhY3Qtbm93LXlvdS1zZWUtbWVcIl0gPSBmYWN0b3J5KCk7XG59KSh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgPyBzZWxmIDogdGhpcywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gLyoqKioqKi8gKGZ1bmN0aW9uKG1vZHVsZXMpIHsgLy8gd2VicGFja0Jvb3RzdHJhcFxuLyoqKioqKi8gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuLyoqKioqKi8gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuLyoqKioqKi8gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4vKioqKioqLyBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbi8qKioqKiovIFx0XHR9XG4vKioqKioqLyBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbi8qKioqKiovIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4vKioqKioqLyBcdFx0XHRpOiBtb2R1bGVJZCxcbi8qKioqKiovIFx0XHRcdGw6IGZhbHNlLFxuLyoqKioqKi8gXHRcdFx0ZXhwb3J0czoge31cbi8qKioqKiovIFx0XHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbi8qKioqKiovIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuLyoqKioqKi8gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbi8qKioqKiovIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4vKioqKioqLyBcdH1cbi8qKioqKiovXG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbi8qKioqKiovIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4vKioqKioqLyBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwge1xuLyoqKioqKi8gXHRcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuLyoqKioqKi8gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuLyoqKioqKi8gXHRcdFx0XHRnZXQ6IGdldHRlclxuLyoqKioqKi8gXHRcdFx0fSk7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4vKioqKioqLyBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4vKioqKioqLyBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuLyoqKioqKi8gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbi8qKioqKiovIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4vKioqKioqLyBcdFx0cmV0dXJuIGdldHRlcjtcbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vKioqKioqLyBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDIxKTtcbi8qKioqKiovIH0pXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKi8gKFtcbi8qIDAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjtcblxuLyoqKi8gfSksXG4vKiAxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbmlmICh0cnVlKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cblxuXG4vKioqLyB9KSxcbi8qIDIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG5cblxuLyoqKi8gfSksXG4vKiAzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuXG5cbnZhciBlbXB0eU9iamVjdCA9IHt9O1xuXG5pZiAoZmFsc2UpIHtcbiAgT2JqZWN0LmZyZWV6ZShlbXB0eU9iamVjdCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlPYmplY3Q7XG5cbi8qKiovIH0pLFxuLyogNCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoZmFsc2UpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHRydWUpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19yZXF1aXJlX18oNyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuXG5cbi8qKiovIH0pLFxuLyogNSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG52YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XHJcbn0gY2F0Y2goZSkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXHJcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcclxuXHRcdGcgPSB3aW5kb3c7XHJcbn1cclxuXHJcbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cclxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3NcclxuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnO1xyXG5cblxuLyoqKi8gfSksXG4vKiA2ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4yLjBcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxudmFyIG09X193ZWJwYWNrX3JlcXVpcmVfXygyKSxuPV9fd2VicGFja19yZXF1aXJlX18oMykscD1fX3dlYnBhY2tfcmVxdWlyZV9fKDApLHE9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sW1wiZm9yXCJdLHI9cT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLHQ9cT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5jYWxsXCIpOjYwMTA0LHU9cT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5yZXR1cm5cIik6NjAxMDUsdj1xP1N5bWJvbFtcImZvclwiXShcInJlYWN0LnBvcnRhbFwiKTo2MDEwNix3PXE/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcseD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7XG5mdW5jdGlvbiB5KGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsZT1cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBodHRwOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0L2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudFxceDNkXCIrYSxjPTA7YzxiO2MrKyllKz1cIlxceDI2YXJnc1tdXFx4M2RcIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO2I9RXJyb3IoZStcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2IubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIjtiLmZyYW1lc1RvUG9wPTE7dGhyb3cgYjt9XG52YXIgej17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX07ZnVuY3Rpb24gQShhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1uO3RoaXMudXBkYXRlcj1lfHx6fUEucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307QS5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hP3koXCI4NVwiKTp2b2lkIDA7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtBLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtcbmZ1bmN0aW9uIEIoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9bjt0aGlzLnVwZGF0ZXI9ZXx8en1mdW5jdGlvbiBDKCl7fUMucHJvdG90eXBlPUEucHJvdG90eXBlO3ZhciBEPUIucHJvdG90eXBlPW5ldyBDO0QuY29uc3RydWN0b3I9QjttKEQsQS5wcm90b3R5cGUpO0QuaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7ZnVuY3Rpb24gRShhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1uO3RoaXMudXBkYXRlcj1lfHx6fXZhciBGPUUucHJvdG90eXBlPW5ldyBDO0YuY29uc3RydWN0b3I9RTttKEYsQS5wcm90b3R5cGUpO0YudW5zdGFibGVfaXNBc3luY1JlYWN0Q29tcG9uZW50PSEwO0YucmVuZGVyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW59O3ZhciBHPXtjdXJyZW50Om51bGx9LEg9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxJPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBKKGEsYixlKXt2YXIgYyxkPXt9LGc9bnVsbCxrPW51bGw7aWYobnVsbCE9Yilmb3IoYyBpbiB2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUguY2FsbChiLGMpJiYhSS5oYXNPd25Qcm9wZXJ0eShjKSYmKGRbY109YltjXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49ZTtlbHNlIGlmKDE8Zil7Zm9yKHZhciBoPUFycmF5KGYpLGw9MDtsPGY7bCsrKWhbbF09YXJndW1lbnRzW2wrMl07ZC5jaGlsZHJlbj1ofWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihjIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2NdJiYoZFtjXT1mW2NdKTtyZXR1cm57JCR0eXBlb2Y6cix0eXBlOmEsa2V5OmcscmVmOmsscHJvcHM6ZCxfb3duZXI6Ry5jdXJyZW50fX1mdW5jdGlvbiBLKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1yfVxuZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIlxceDNkXCI6XCJcXHgzZDBcIixcIjpcIjpcIlxceDNkMlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgTD0vXFwvKy9nLE09W107ZnVuY3Rpb24gTihhLGIsZSxjKXtpZihNLmxlbmd0aCl7dmFyIGQ9TS5wb3AoKTtkLnJlc3VsdD1hO2Qua2V5UHJlZml4PWI7ZC5mdW5jPWU7ZC5jb250ZXh0PWM7ZC5jb3VudD0wO3JldHVybiBkfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmUsY29udGV4dDpjLGNvdW50OjB9fWZ1bmN0aW9uIE8oYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5NLmxlbmd0aCYmTS5wdXNoKGEpfVxuZnVuY3Rpb24gUChhLGIsZSxjKXt2YXIgZD10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09ZHx8XCJib29sZWFuXCI9PT1kKWE9bnVsbDt2YXIgZz0hMTtpZihudWxsPT09YSlnPSEwO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6Zz0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgcjpjYXNlIHQ6Y2FzZSB1OmNhc2UgdjpnPSEwfX1pZihnKXJldHVybiBlKGMsYSxcIlwiPT09Yj9cIi5cIitRKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBrPTA7azxhLmxlbmd0aDtrKyspe2Q9YVtrXTt2YXIgZj1iK1EoZCxrKTtnKz1QKGQsZixlLGMpfWVsc2UgaWYobnVsbD09PWF8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYT9mPW51bGw6KGY9eCYmYVt4XXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPVxuZi5jYWxsKGEpLGs9MDshKGQ9YS5uZXh0KCkpLmRvbmU7KWQ9ZC52YWx1ZSxmPWIrUShkLGsrKyksZys9UChkLGYsZSxjKTtlbHNlXCJvYmplY3RcIj09PWQmJihlPVwiXCIrYSx5KFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09ZT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjplLFwiXCIpKTtyZXR1cm4gZ31mdW5jdGlvbiBRKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBSKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1cbmZ1bmN0aW9uIFMoYSxiLGUpe3ZhciBjPWEucmVzdWx0LGQ9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/VChhLGMsZSxwLnRoYXRSZXR1cm5zQXJndW1lbnQpOm51bGwhPWEmJihLKGEpJiYoYj1kKyghYS5rZXl8fGImJmIua2V5PT09YS5rZXk/XCJcIjooXCJcIithLmtleSkucmVwbGFjZShMLFwiJFxceDI2L1wiKStcIi9cIikrZSxhPXskJHR5cGVvZjpyLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn0pLGMucHVzaChhKSl9ZnVuY3Rpb24gVChhLGIsZSxjLGQpe3ZhciBnPVwiXCI7bnVsbCE9ZSYmKGc9KFwiXCIrZSkucmVwbGFjZShMLFwiJFxceDI2L1wiKStcIi9cIik7Yj1OKGIsZyxjLGQpO251bGw9PWF8fFAoYSxcIlwiLFMsYik7TyhiKX1cbnZhciBVPXtDaGlsZHJlbjp7bWFwOmZ1bmN0aW9uKGEsYixlKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBjPVtdO1QoYSxjLG51bGwsYixlKTtyZXR1cm4gY30sZm9yRWFjaDpmdW5jdGlvbihhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTtiPU4obnVsbCxudWxsLGIsZSk7bnVsbD09YXx8UChhLFwiXCIsUixiKTtPKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09YT8wOlAoYSxcIlwiLHAudGhhdFJldHVybnNOdWxsLG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1QoYSxiLG51bGwscC50aGF0UmV0dXJuc0FyZ3VtZW50KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtLKGEpP3ZvaWQgMDp5KFwiMTQzXCIpO3JldHVybiBhfX0sQ29tcG9uZW50OkEsUHVyZUNvbXBvbmVudDpCLHVuc3RhYmxlX0FzeW5jQ29tcG9uZW50OkUsRnJhZ21lbnQ6dyxjcmVhdGVFbGVtZW50OkosY2xvbmVFbGVtZW50OmZ1bmN0aW9uKGEsYixlKXt2YXIgYz1tKHt9LGEucHJvcHMpLFxuZD1hLmtleSxnPWEucmVmLGs9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihnPWIucmVmLGs9Ry5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBmPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGggaW4gYilILmNhbGwoYixoKSYmIUkuaGFzT3duUHJvcGVydHkoaCkmJihjW2hdPXZvaWQgMD09PWJbaF0mJnZvaWQgMCE9PWY/ZltoXTpiW2hdKX12YXIgaD1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWgpYy5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxoKXtmPUFycmF5KGgpO2Zvcih2YXIgbD0wO2w8aDtsKyspZltsXT1hcmd1bWVudHNbbCsyXTtjLmNoaWxkcmVuPWZ9cmV0dXJueyQkdHlwZW9mOnIsdHlwZTphLnR5cGUsa2V5OmQscmVmOmcscHJvcHM6Yyxfb3duZXI6a319LGNyZWF0ZUZhY3Rvcnk6ZnVuY3Rpb24oYSl7dmFyIGI9Si5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9LFxuaXNWYWxpZEVsZW1lbnQ6Syx2ZXJzaW9uOlwiMTYuMi4wXCIsX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e1JlYWN0Q3VycmVudE93bmVyOkcsYXNzaWduOm19fSxWPU9iamVjdC5mcmVlemUoe2RlZmF1bHQ6VX0pLFc9ViYmVXx8Vjttb2R1bGUuZXhwb3J0cz1XW1wiZGVmYXVsdFwiXT9XW1wiZGVmYXVsdFwiXTpXO1xuXG5cbi8qKiovIH0pLFxuLyogNyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMi4wXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbnZhciBhYT1fX3dlYnBhY2tfcmVxdWlyZV9fKDEpLGw9X193ZWJwYWNrX3JlcXVpcmVfXyg4KSxCPV9fd2VicGFja19yZXF1aXJlX18oMiksQz1fX3dlYnBhY2tfcmVxdWlyZV9fKDApLGJhPV9fd2VicGFja19yZXF1aXJlX18oOSksZGE9X193ZWJwYWNrX3JlcXVpcmVfXygxMCksZWE9X193ZWJwYWNrX3JlcXVpcmVfXygxMSksZmE9X193ZWJwYWNrX3JlcXVpcmVfXygxMiksaWE9X193ZWJwYWNrX3JlcXVpcmVfXygxNSksRD1fX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xuZnVuY3Rpb24gRShhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGM9XCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgaHR0cDovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnRcXHgzZFwiK2EsZD0wO2Q8YjtkKyspYys9XCJcXHgyNmFyZ3NbXVxceDNkXCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tkKzFdKTtiPUVycm9yKGMrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtiLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCI7Yi5mcmFtZXNUb1BvcD0xO3Rocm93IGI7fWFhP3ZvaWQgMDpFKFwiMjI3XCIpO1xudmFyIG9hPXtjaGlsZHJlbjohMCxkYW5nZXJvdXNseVNldElubmVySFRNTDohMCxkZWZhdWx0VmFsdWU6ITAsZGVmYXVsdENoZWNrZWQ6ITAsaW5uZXJIVE1MOiEwLHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZzohMCxzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmc6ITAsc3R5bGU6ITB9O2Z1bmN0aW9uIHBhKGEsYil7cmV0dXJuKGEmYik9PT1ifVxudmFyIHRhPXtNVVNUX1VTRV9QUk9QRVJUWToxLEhBU19CT09MRUFOX1ZBTFVFOjQsSEFTX05VTUVSSUNfVkFMVUU6OCxIQVNfUE9TSVRJVkVfTlVNRVJJQ19WQUxVRToyNCxIQVNfT1ZFUkxPQURFRF9CT09MRUFOX1ZBTFVFOjMyLEhBU19TVFJJTkdfQk9PTEVBTl9WQUxVRTo2NCxpbmplY3RET01Qcm9wZXJ0eUNvbmZpZzpmdW5jdGlvbihhKXt2YXIgYj10YSxjPWEuUHJvcGVydGllc3x8e30sZD1hLkRPTUF0dHJpYnV0ZU5hbWVzcGFjZXN8fHt9LGU9YS5ET01BdHRyaWJ1dGVOYW1lc3x8e307YT1hLkRPTU11dGF0aW9uTWV0aG9kc3x8e307Zm9yKHZhciBmIGluIGMpe3VhLmhhc093blByb3BlcnR5KGYpP0UoXCI0OFwiLGYpOnZvaWQgMDt2YXIgZz1mLnRvTG93ZXJDYXNlKCksaD1jW2ZdO2c9e2F0dHJpYnV0ZU5hbWU6ZyxhdHRyaWJ1dGVOYW1lc3BhY2U6bnVsbCxwcm9wZXJ0eU5hbWU6ZixtdXRhdGlvbk1ldGhvZDpudWxsLG11c3RVc2VQcm9wZXJ0eTpwYShoLGIuTVVTVF9VU0VfUFJPUEVSVFkpLFxuaGFzQm9vbGVhblZhbHVlOnBhKGgsYi5IQVNfQk9PTEVBTl9WQUxVRSksaGFzTnVtZXJpY1ZhbHVlOnBhKGgsYi5IQVNfTlVNRVJJQ19WQUxVRSksaGFzUG9zaXRpdmVOdW1lcmljVmFsdWU6cGEoaCxiLkhBU19QT1NJVElWRV9OVU1FUklDX1ZBTFVFKSxoYXNPdmVybG9hZGVkQm9vbGVhblZhbHVlOnBhKGgsYi5IQVNfT1ZFUkxPQURFRF9CT09MRUFOX1ZBTFVFKSxoYXNTdHJpbmdCb29sZWFuVmFsdWU6cGEoaCxiLkhBU19TVFJJTkdfQk9PTEVBTl9WQUxVRSl9OzE+PWcuaGFzQm9vbGVhblZhbHVlK2cuaGFzTnVtZXJpY1ZhbHVlK2cuaGFzT3ZlcmxvYWRlZEJvb2xlYW5WYWx1ZT92b2lkIDA6RShcIjUwXCIsZik7ZS5oYXNPd25Qcm9wZXJ0eShmKSYmKGcuYXR0cmlidXRlTmFtZT1lW2ZdKTtkLmhhc093blByb3BlcnR5KGYpJiYoZy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZFtmXSk7YS5oYXNPd25Qcm9wZXJ0eShmKSYmKGcubXV0YXRpb25NZXRob2Q9YVtmXSk7dWFbZl09Z319fSx1YT17fTtcbmZ1bmN0aW9uIHZhKGEsYil7aWYob2EuaGFzT3duUHJvcGVydHkoYSl8fDI8YS5sZW5ndGgmJihcIm9cIj09PWFbMF18fFwiT1wiPT09YVswXSkmJihcIm5cIj09PWFbMV18fFwiTlwiPT09YVsxXSkpcmV0dXJuITE7aWYobnVsbD09PWIpcmV0dXJuITA7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiYm9vbGVhblwiOnJldHVybiBvYS5oYXNPd25Qcm9wZXJ0eShhKT9hPSEwOihiPXdhKGEpKT9hPWIuaGFzQm9vbGVhblZhbHVlfHxiLmhhc1N0cmluZ0Jvb2xlYW5WYWx1ZXx8Yi5oYXNPdmVybG9hZGVkQm9vbGVhblZhbHVlOihhPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpLGE9XCJkYXRhLVwiPT09YXx8XCJhcmlhLVwiPT09YSksYTtjYXNlIFwidW5kZWZpbmVkXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwib2JqZWN0XCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gd2EoYSl7cmV0dXJuIHVhLmhhc093blByb3BlcnR5KGEpP3VhW2FdOm51bGx9XG52YXIgeGE9dGEseWE9eGEuTVVTVF9VU0VfUFJPUEVSVFksSz14YS5IQVNfQk9PTEVBTl9WQUxVRSx6YT14YS5IQVNfTlVNRVJJQ19WQUxVRSxBYT14YS5IQVNfUE9TSVRJVkVfTlVNRVJJQ19WQUxVRSxCYT14YS5IQVNfT1ZFUkxPQURFRF9CT09MRUFOX1ZBTFVFLENhPXhhLkhBU19TVFJJTkdfQk9PTEVBTl9WQUxVRSxEYT17UHJvcGVydGllczp7YWxsb3dGdWxsU2NyZWVuOkssYXN5bmM6SyxhdXRvRm9jdXM6SyxhdXRvUGxheTpLLGNhcHR1cmU6QmEsY2hlY2tlZDp5YXxLLGNvbHM6QWEsY29udGVudEVkaXRhYmxlOkNhLGNvbnRyb2xzOkssXCJkZWZhdWx0XCI6SyxkZWZlcjpLLGRpc2FibGVkOkssZG93bmxvYWQ6QmEsZHJhZ2dhYmxlOkNhLGZvcm1Ob1ZhbGlkYXRlOkssaGlkZGVuOkssbG9vcDpLLG11bHRpcGxlOnlhfEssbXV0ZWQ6eWF8Syxub1ZhbGlkYXRlOkssb3BlbjpLLHBsYXlzSW5saW5lOksscmVhZE9ubHk6SyxyZXF1aXJlZDpLLHJldmVyc2VkOksscm93czpBYSxyb3dTcGFuOnphLFxuc2NvcGVkOkssc2VhbWxlc3M6SyxzZWxlY3RlZDp5YXxLLHNpemU6QWEsc3RhcnQ6emEsc3BhbjpBYSxzcGVsbENoZWNrOkNhLHN0eWxlOjAsdGFiSW5kZXg6MCxpdGVtU2NvcGU6SyxhY2NlcHRDaGFyc2V0OjAsY2xhc3NOYW1lOjAsaHRtbEZvcjowLGh0dHBFcXVpdjowLHZhbHVlOkNhfSxET01BdHRyaWJ1dGVOYW1lczp7YWNjZXB0Q2hhcnNldDpcImFjY2VwdC1jaGFyc2V0XCIsY2xhc3NOYW1lOlwiY2xhc3NcIixodG1sRm9yOlwiZm9yXCIsaHR0cEVxdWl2OlwiaHR0cC1lcXVpdlwifSxET01NdXRhdGlvbk1ldGhvZHM6e3ZhbHVlOmZ1bmN0aW9uKGEsYil7aWYobnVsbD09YilyZXR1cm4gYS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtcIm51bWJlclwiIT09YS50eXBlfHwhMT09PWEuaGFzQXR0cmlidXRlKFwidmFsdWVcIik/YS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrYik6YS52YWxpZGl0eSYmIWEudmFsaWRpdHkuYmFkSW5wdXQmJmEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSYmXG5hLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIitiKX19fSxFYT14YS5IQVNfU1RSSU5HX0JPT0xFQU5fVkFMVUUsTT17eGxpbms6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIseG1sOlwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCJ9LEdhPXtQcm9wZXJ0aWVzOnthdXRvUmV2ZXJzZTpFYSxleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkOkVhLHByZXNlcnZlQWxwaGE6RWF9LERPTUF0dHJpYnV0ZU5hbWVzOnthdXRvUmV2ZXJzZTpcImF1dG9SZXZlcnNlXCIsZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZDpcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixwcmVzZXJ2ZUFscGhhOlwicHJlc2VydmVBbHBoYVwifSxET01BdHRyaWJ1dGVOYW1lc3BhY2VzOnt4bGlua0FjdHVhdGU6TS54bGluayx4bGlua0FyY3JvbGU6TS54bGluayx4bGlua0hyZWY6TS54bGluayx4bGlua1JvbGU6TS54bGluayx4bGlua1Nob3c6TS54bGluayx4bGlua1RpdGxlOk0ueGxpbmsseGxpbmtUeXBlOk0ueGxpbmssXG54bWxCYXNlOk0ueG1sLHhtbExhbmc6TS54bWwseG1sU3BhY2U6TS54bWx9fSxIYT0vW1xcLVxcOl0oW2Etel0pL2c7ZnVuY3Rpb24gSWEoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeC1oZWlnaHQgeGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOmhyZWYgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGUgeG1sOmJhc2UgeG1sbnM6eGxpbmsgeG1sOmxhbmcgeG1sOnNwYWNlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKEhhLFxuSWEpO0dhLlByb3BlcnRpZXNbYl09MDtHYS5ET01BdHRyaWJ1dGVOYW1lc1tiXT1hfSk7eGEuaW5qZWN0RE9NUHJvcGVydHlDb25maWcoRGEpO3hhLmluamVjdERPTVByb3BlcnR5Q29uZmlnKEdhKTtcbnZhciBQPXtfY2F1Z2h0RXJyb3I6bnVsbCxfaGFzQ2F1Z2h0RXJyb3I6ITEsX3JldGhyb3dFcnJvcjpudWxsLF9oYXNSZXRocm93RXJyb3I6ITEsaW5qZWN0aW9uOntpbmplY3RFcnJvclV0aWxzOmZ1bmN0aW9uKGEpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBhLmludm9rZUd1YXJkZWRDYWxsYmFjaz9FKFwiMTk3XCIpOnZvaWQgMDtKYT1hLmludm9rZUd1YXJkZWRDYWxsYmFja319LGludm9rZUd1YXJkZWRDYWxsYmFjazpmdW5jdGlvbihhLGIsYyxkLGUsZixnLGgsayl7SmEuYXBwbHkoUCxhcmd1bWVudHMpfSxpbnZva2VHdWFyZGVkQ2FsbGJhY2tBbmRDYXRjaEZpcnN0RXJyb3I6ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyxoLGspe1AuaW52b2tlR3VhcmRlZENhbGxiYWNrLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihQLmhhc0NhdWdodEVycm9yKCkpe3ZhciBxPVAuY2xlYXJDYXVnaHRFcnJvcigpO1AuX2hhc1JldGhyb3dFcnJvcnx8KFAuX2hhc1JldGhyb3dFcnJvcj0hMCxQLl9yZXRocm93RXJyb3I9XG5xKX19LHJldGhyb3dDYXVnaHRFcnJvcjpmdW5jdGlvbigpe3JldHVybiBLYS5hcHBseShQLGFyZ3VtZW50cyl9LGhhc0NhdWdodEVycm9yOmZ1bmN0aW9uKCl7cmV0dXJuIFAuX2hhc0NhdWdodEVycm9yfSxjbGVhckNhdWdodEVycm9yOmZ1bmN0aW9uKCl7aWYoUC5faGFzQ2F1Z2h0RXJyb3Ipe3ZhciBhPVAuX2NhdWdodEVycm9yO1AuX2NhdWdodEVycm9yPW51bGw7UC5faGFzQ2F1Z2h0RXJyb3I9ITE7cmV0dXJuIGF9RShcIjE5OFwiKX19O2Z1bmN0aW9uIEphKGEsYixjLGQsZSxmLGcsaCxrKXtQLl9oYXNDYXVnaHRFcnJvcj0hMTtQLl9jYXVnaHRFcnJvcj1udWxsO3ZhciBxPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLHEpfWNhdGNoKHYpe1AuX2NhdWdodEVycm9yPXYsUC5faGFzQ2F1Z2h0RXJyb3I9ITB9fVxuZnVuY3Rpb24gS2EoKXtpZihQLl9oYXNSZXRocm93RXJyb3Ipe3ZhciBhPVAuX3JldGhyb3dFcnJvcjtQLl9yZXRocm93RXJyb3I9bnVsbDtQLl9oYXNSZXRocm93RXJyb3I9ITE7dGhyb3cgYTt9fXZhciBMYT1udWxsLE1hPXt9O1xuZnVuY3Rpb24gTmEoKXtpZihMYSlmb3IodmFyIGEgaW4gTWEpe3ZhciBiPU1hW2FdLGM9TGEuaW5kZXhPZihhKTstMTxjP3ZvaWQgMDpFKFwiOTZcIixhKTtpZighT2FbY10pe2IuZXh0cmFjdEV2ZW50cz92b2lkIDA6RShcIjk3XCIsYSk7T2FbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtQYS5oYXNPd25Qcm9wZXJ0eShoKT9FKFwiOTlcIixoKTp2b2lkIDA7UGFbaF09Zjt2YXIgaz1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGspe2ZvcihlIGluIGspay5oYXNPd25Qcm9wZXJ0eShlKSYmUWEoa1tlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KFFhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7ZT92b2lkIDA6RShcIjk4XCIsZCxhKX19fX1cbmZ1bmN0aW9uIFFhKGEsYixjKXtSYVthXT9FKFwiMTAwXCIsYSk6dm9pZCAwO1JhW2FdPWI7U2FbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgT2E9W10sUGE9e30sUmE9e30sU2E9e307ZnVuY3Rpb24gVGEoYSl7TGE/RShcIjEwMVwiKTp2b2lkIDA7TGE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYSk7TmEoKX1mdW5jdGlvbiBVYShhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTtNYS5oYXNPd25Qcm9wZXJ0eShjKSYmTWFbY109PT1kfHwoTWFbY10/RShcIjEwMlwiLGMpOnZvaWQgMCxNYVtjXT1kLGI9ITApfWImJk5hKCl9XG52YXIgVmE9T2JqZWN0LmZyZWV6ZSh7cGx1Z2luczpPYSxldmVudE5hbWVEaXNwYXRjaENvbmZpZ3M6UGEscmVnaXN0cmF0aW9uTmFtZU1vZHVsZXM6UmEscmVnaXN0cmF0aW9uTmFtZURlcGVuZGVuY2llczpTYSxwb3NzaWJsZVJlZ2lzdHJhdGlvbk5hbWVzOm51bGwsaW5qZWN0RXZlbnRQbHVnaW5PcmRlcjpUYSxpbmplY3RFdmVudFBsdWdpbnNCeU5hbWU6VWF9KSxXYT1udWxsLFhhPW51bGwsWWE9bnVsbDtmdW5jdGlvbiBaYShhLGIsYyxkKXtiPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PVlhKGQpO1AuaW52b2tlR3VhcmRlZENhbGxiYWNrQW5kQ2F0Y2hGaXJzdEVycm9yKGIsYyx2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9XG5mdW5jdGlvbiAkYShhLGIpe251bGw9PWI/RShcIjMwXCIpOnZvaWQgMDtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19ZnVuY3Rpb24gYWIoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIGJiPW51bGw7XG5mdW5jdGlvbiBjYihhLGIpe2lmKGEpe3ZhciBjPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGQ9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShjKSlmb3IodmFyIGU9MDtlPGMubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2UrKylaYShhLGIsY1tlXSxkW2VdKTtlbHNlIGMmJlphKGEsYixjLGQpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fWZ1bmN0aW9uIGRiKGEpe3JldHVybiBjYihhLCEwKX1mdW5jdGlvbiBnYihhKXtyZXR1cm4gY2IoYSwhMSl9dmFyIGhiPXtpbmplY3RFdmVudFBsdWdpbk9yZGVyOlRhLGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTpVYX07XG5mdW5jdGlvbiBpYihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPVdhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2MmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP0UoXCIyMzFcIixiLHR5cGVvZiBjKTp2b2lkIDA7XG5yZXR1cm4gY31mdW5jdGlvbiBqYihhLGIsYyxkKXtmb3IodmFyIGUsZj0wO2Y8T2EubGVuZ3RoO2YrKyl7dmFyIGc9T2FbZl07ZyYmKGc9Zy5leHRyYWN0RXZlbnRzKGEsYixjLGQpKSYmKGU9JGEoZSxnKSl9cmV0dXJuIGV9ZnVuY3Rpb24ga2IoYSl7YSYmKGJiPSRhKGJiLGEpKX1mdW5jdGlvbiBsYihhKXt2YXIgYj1iYjtiYj1udWxsO2ImJihhP2FiKGIsZGIpOmFiKGIsZ2IpLGJiP0UoXCI5NVwiKTp2b2lkIDAsUC5yZXRocm93Q2F1Z2h0RXJyb3IoKSl9dmFyIG1iPU9iamVjdC5mcmVlemUoe2luamVjdGlvbjpoYixnZXRMaXN0ZW5lcjppYixleHRyYWN0RXZlbnRzOmpiLGVucXVldWVFdmVudHM6a2IscHJvY2Vzc0V2ZW50UXVldWU6bGJ9KSxuYj1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxRPVwiX19yZWFjdEludGVybmFsSW5zdGFuY2UkXCIrbmIsb2I9XCJfX3JlYWN0RXZlbnRIYW5kbGVycyRcIituYjtcbmZ1bmN0aW9uIHBiKGEpe2lmKGFbUV0pcmV0dXJuIGFbUV07Zm9yKHZhciBiPVtdOyFhW1FdOylpZihiLnB1c2goYSksYS5wYXJlbnROb2RlKWE9YS5wYXJlbnROb2RlO2Vsc2UgcmV0dXJuIG51bGw7dmFyIGM9dm9pZCAwLGQ9YVtRXTtpZig1PT09ZC50YWd8fDY9PT1kLnRhZylyZXR1cm4gZDtmb3IoO2EmJihkPWFbUV0pO2E9Yi5wb3AoKSljPWQ7cmV0dXJuIGN9ZnVuY3Rpb24gcWIoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO0UoXCIzM1wiKX1mdW5jdGlvbiByYihhKXtyZXR1cm4gYVtvYl18fG51bGx9XG52YXIgc2I9T2JqZWN0LmZyZWV6ZSh7cHJlY2FjaGVGaWJlck5vZGU6ZnVuY3Rpb24oYSxiKXtiW1FdPWF9LGdldENsb3Nlc3RJbnN0YW5jZUZyb21Ob2RlOnBiLGdldEluc3RhbmNlRnJvbU5vZGU6ZnVuY3Rpb24oYSl7YT1hW1FdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZz9udWxsOmF9LGdldE5vZGVGcm9tSW5zdGFuY2U6cWIsZ2V0RmliZXJDdXJyZW50UHJvcHNGcm9tTm9kZTpyYix1cGRhdGVGaWJlclByb3BzOmZ1bmN0aW9uKGEsYil7YVtvYl09Yn19KTtmdW5jdGlvbiB0YihhKXtkbyBhPWFbXCJyZXR1cm5cIl07d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9ZnVuY3Rpb24gdWIoYSxiLGMpe2Zvcih2YXIgZD1bXTthOylkLnB1c2goYSksYT10YihhKTtmb3IoYT1kLmxlbmd0aDswPGEtLTspYihkW2FdLFwiY2FwdHVyZWRcIixjKTtmb3IoYT0wO2E8ZC5sZW5ndGg7YSsrKWIoZFthXSxcImJ1YmJsZWRcIixjKX1cbmZ1bmN0aW9uIHZiKGEsYixjKXtpZihiPWliKGEsYy5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lc1tiXSkpYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9JGEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9JGEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSl9ZnVuY3Rpb24gd2IoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyYmdWIoYS5fdGFyZ2V0SW5zdCx2YixhKX1mdW5jdGlvbiB4YihhKXtpZihhJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzKXt2YXIgYj1hLl90YXJnZXRJbnN0O2I9Yj90YihiKTpudWxsO3ViKGIsdmIsYSl9fVxuZnVuY3Rpb24geWIoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9aWIoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPSRhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPSRhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiB6YihhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJnliKGEuX3RhcmdldEluc3QsbnVsbCxhKX1mdW5jdGlvbiBBYihhKXthYihhLHdiKX1cbmZ1bmN0aW9uIEJiKGEsYixjLGQpe2lmKGMmJmQpYTp7dmFyIGU9Yztmb3IodmFyIGY9ZCxnPTAsaD1lO2g7aD10YihoKSlnKys7aD0wO2Zvcih2YXIgaz1mO2s7az10YihrKSloKys7Zm9yKDswPGctaDspZT10YihlKSxnLS07Zm9yKDswPGgtZzspZj10YihmKSxoLS07Zm9yKDtnLS07KXtpZihlPT09Znx8ZT09PWYuYWx0ZXJuYXRlKWJyZWFrIGE7ZT10YihlKTtmPXRiKGYpfWU9bnVsbH1lbHNlIGU9bnVsbDtmPWU7Zm9yKGU9W107YyYmYyE9PWY7KXtnPWMuYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09ZilicmVhaztlLnB1c2goYyk7Yz10YihjKX1mb3IoYz1bXTtkJiZkIT09Zjspe2c9ZC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1mKWJyZWFrO2MucHVzaChkKTtkPXRiKGQpfWZvcihkPTA7ZDxlLmxlbmd0aDtkKyspeWIoZVtkXSxcImJ1YmJsZWRcIixhKTtmb3IoYT1jLmxlbmd0aDswPGEtLTspeWIoY1thXSxcImNhcHR1cmVkXCIsYil9XG52YXIgQ2I9T2JqZWN0LmZyZWV6ZSh7YWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlczpBYixhY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzU2tpcFRhcmdldDpmdW5jdGlvbihhKXthYihhLHhiKX0sYWNjdW11bGF0ZUVudGVyTGVhdmVEaXNwYXRjaGVzOkJiLGFjY3VtdWxhdGVEaXJlY3REaXNwYXRjaGVzOmZ1bmN0aW9uKGEpe2FiKGEsemIpfX0pLERiPW51bGw7ZnVuY3Rpb24gRWIoKXshRGImJmwuY2FuVXNlRE9NJiYoRGI9XCJ0ZXh0Q29udGVudFwiaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50P1widGV4dENvbnRlbnRcIjpcImlubmVyVGV4dFwiKTtyZXR1cm4gRGJ9dmFyIFM9e19yb290Om51bGwsX3N0YXJ0VGV4dDpudWxsLF9mYWxsYmFja1RleHQ6bnVsbH07XG5mdW5jdGlvbiBGYigpe2lmKFMuX2ZhbGxiYWNrVGV4dClyZXR1cm4gUy5fZmFsbGJhY2tUZXh0O3ZhciBhLGI9Uy5fc3RhcnRUZXh0LGM9Yi5sZW5ndGgsZCxlPUdiKCksZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtTLl9mYWxsYmFja1RleHQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKTtyZXR1cm4gUy5fZmFsbGJhY2tUZXh0fWZ1bmN0aW9uIEdiKCl7cmV0dXJuXCJ2YWx1ZVwiaW4gUy5fcm9vdD9TLl9yb290LnZhbHVlOlMuX3Jvb3RbRWIoKV19XG52YXIgSGI9XCJkaXNwYXRjaENvbmZpZyBfdGFyZ2V0SW5zdCBuYXRpdmVFdmVudCBpc0RlZmF1bHRQcmV2ZW50ZWQgaXNQcm9wYWdhdGlvblN0b3BwZWQgX2Rpc3BhdGNoTGlzdGVuZXJzIF9kaXNwYXRjaEluc3RhbmNlc1wiLnNwbGl0KFwiIFwiKSxJYj17dHlwZTpudWxsLHRhcmdldDpudWxsLGN1cnJlbnRUYXJnZXQ6Qy50aGF0UmV0dXJuc051bGwsZXZlbnRQaGFzZTpudWxsLGJ1YmJsZXM6bnVsbCxjYW5jZWxhYmxlOm51bGwsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDpudWxsLGlzVHJ1c3RlZDpudWxsfTtcbmZ1bmN0aW9uIFQoYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP0MudGhhdFJldHVybnNUcnVlOkMudGhhdFJldHVybnNGYWxzZTt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPUMudGhhdFJldHVybnNGYWxzZTtyZXR1cm4gdGhpc31cbkIoVC5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1DLnRoYXRSZXR1cm5zVHJ1ZSl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1DLnRoYXRSZXR1cm5zVHJ1ZSl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1DLnRoYXRSZXR1cm5zVHJ1ZX0saXNQZXJzaXN0ZW50OkMudGhhdFJldHVybnNGYWxzZSxcbmRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxiO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO2ZvcihhPTA7YTxIYi5sZW5ndGg7YSsrKXRoaXNbSGJbYV1dPW51bGx9fSk7VC5JbnRlcmZhY2U9SWI7VC5hdWdtZW50Q2xhc3M9ZnVuY3Rpb24oYSxiKXtmdW5jdGlvbiBjKCl7fWMucHJvdG90eXBlPXRoaXMucHJvdG90eXBlO3ZhciBkPW5ldyBjO0IoZCxhLnByb3RvdHlwZSk7YS5wcm90b3R5cGU9ZDthLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1hO2EuSW50ZXJmYWNlPUIoe30sdGhpcy5JbnRlcmZhY2UsYik7YS5hdWdtZW50Q2xhc3M9dGhpcy5hdWdtZW50Q2xhc3M7SmIoYSl9O0piKFQpO2Z1bmN0aW9uIEtiKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfVxuZnVuY3Rpb24gTGIoYSl7YSBpbnN0YW5jZW9mIHRoaXM/dm9pZCAwOkUoXCIyMjNcIik7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfWZ1bmN0aW9uIEpiKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPUtiO2EucmVsZWFzZT1MYn1mdW5jdGlvbiBNYihhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9VC5hdWdtZW50Q2xhc3MoTWIse2RhdGE6bnVsbH0pO2Z1bmN0aW9uIE5iKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1ULmF1Z21lbnRDbGFzcyhOYix7ZGF0YTpudWxsfSk7dmFyIFBiPVs5LDEzLDI3LDMyXSxWYj1sLmNhblVzZURPTSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csV2I9bnVsbDtsLmNhblVzZURPTSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoV2I9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTt2YXIgWGI7XG5pZihYYj1sLmNhblVzZURPTSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIVdiKXt2YXIgWWI9d2luZG93Lm9wZXJhO1hiPSEoXCJvYmplY3RcIj09PXR5cGVvZiBZYiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIFliLnZlcnNpb24mJjEyPj1wYXJzZUludChZYi52ZXJzaW9uKCksMTApKX1cbnZhciBaYj1YYiwkYj1sLmNhblVzZURPTSYmKCFWYnx8V2ImJjg8V2ImJjExPj1XYiksYWM9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksYmM9e2JlZm9yZUlucHV0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQmVmb3JlSW5wdXRcIixjYXB0dXJlZDpcIm9uQmVmb3JlSW5wdXRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbXCJ0b3BDb21wb3NpdGlvbkVuZFwiLFwidG9wS2V5UHJlc3NcIixcInRvcFRleHRJbnB1dFwiLFwidG9wUGFzdGVcIl19LGNvbXBvc2l0aW9uRW5kOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25FbmRcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25FbmRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcInRvcEJsdXIgdG9wQ29tcG9zaXRpb25FbmQgdG9wS2V5RG93biB0b3BLZXlQcmVzcyB0b3BLZXlVcCB0b3BNb3VzZURvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uU3RhcnQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblN0YXJ0XCIsXG5jYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25TdGFydENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwidG9wQmx1ciB0b3BDb21wb3NpdGlvblN0YXJ0IHRvcEtleURvd24gdG9wS2V5UHJlc3MgdG9wS2V5VXAgdG9wTW91c2VEb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblVwZGF0ZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJ0b3BCbHVyIHRvcENvbXBvc2l0aW9uVXBkYXRlIHRvcEtleURvd24gdG9wS2V5UHJlc3MgdG9wS2V5VXAgdG9wTW91c2VEb3duXCIuc3BsaXQoXCIgXCIpfX0sY2M9ITE7XG5mdW5jdGlvbiBkYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwidG9wS2V5VXBcIjpyZXR1cm4tMSE9PVBiLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwidG9wS2V5RG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcInRvcEtleVByZXNzXCI6Y2FzZSBcInRvcE1vdXNlRG93blwiOmNhc2UgXCJ0b3BCbHVyXCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gZWMoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgZmM9ITE7ZnVuY3Rpb24gZ2MoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcInRvcENvbXBvc2l0aW9uRW5kXCI6cmV0dXJuIGVjKGIpO2Nhc2UgXCJ0b3BLZXlQcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtjYz0hMDtyZXR1cm4gYWM7Y2FzZSBcInRvcFRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09YWMmJmNjP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIGhjKGEsYil7aWYoZmMpcmV0dXJuXCJ0b3BDb21wb3NpdGlvbkVuZFwiPT09YXx8IVZiJiZkYyhhLGIpPyhhPUZiKCksUy5fcm9vdD1udWxsLFMuX3N0YXJ0VGV4dD1udWxsLFMuX2ZhbGxiYWNrVGV4dD1udWxsLGZjPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJ0b3BQYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJ0b3BLZXlQcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJ0b3BDb21wb3NpdGlvbkVuZFwiOnJldHVybiAkYj9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBpYz17ZXZlbnRUeXBlczpiYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlO2lmKFZiKWI6e3N3aXRjaChhKXtjYXNlIFwidG9wQ29tcG9zaXRpb25TdGFydFwiOnZhciBmPWJjLmNvbXBvc2l0aW9uU3RhcnQ7YnJlYWsgYjtjYXNlIFwidG9wQ29tcG9zaXRpb25FbmRcIjpmPWJjLmNvbXBvc2l0aW9uRW5kO2JyZWFrIGI7Y2FzZSBcInRvcENvbXBvc2l0aW9uVXBkYXRlXCI6Zj1iYy5jb21wb3NpdGlvblVwZGF0ZTticmVhayBifWY9dm9pZCAwfWVsc2UgZmM/ZGMoYSxjKSYmKGY9YmMuY29tcG9zaXRpb25FbmQpOlwidG9wS2V5RG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoZj1iYy5jb21wb3NpdGlvblN0YXJ0KTtmPygkYiYmKGZjfHxmIT09YmMuY29tcG9zaXRpb25TdGFydD9mPT09YmMuY29tcG9zaXRpb25FbmQmJmZjJiYoZT1GYigpKTooUy5fcm9vdD1kLFMuX3N0YXJ0VGV4dD1HYigpLGZjPSEwKSksZj1NYi5nZXRQb29sZWQoZixiLGMsZCksZT9mLmRhdGE9XG5lOihlPWVjKGMpLG51bGwhPT1lJiYoZi5kYXRhPWUpKSxBYihmKSxlPWYpOmU9bnVsbDsoYT1aYj9nYyhhLGMpOmhjKGEsYykpPyhiPU5iLmdldFBvb2xlZChiYy5iZWZvcmVJbnB1dCxiLGMsZCksYi5kYXRhPWEsQWIoYikpOmI9bnVsbDtyZXR1cm5bZSxiXX19LGpjPW51bGwsa2M9bnVsbCxsYz1udWxsO2Z1bmN0aW9uIG1jKGEpe2lmKGE9WGEoYSkpe2pjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgamMucmVzdG9yZUNvbnRyb2xsZWRTdGF0ZT92b2lkIDA6RShcIjE5NFwiKTt2YXIgYj1XYShhLnN0YXRlTm9kZSk7amMucmVzdG9yZUNvbnRyb2xsZWRTdGF0ZShhLnN0YXRlTm9kZSxhLnR5cGUsYil9fXZhciBuYz17aW5qZWN0RmliZXJDb250cm9sbGVkSG9zdENvbXBvbmVudDpmdW5jdGlvbihhKXtqYz1hfX07ZnVuY3Rpb24gb2MoYSl7a2M/bGM/bGMucHVzaChhKTpsYz1bYV06a2M9YX1cbmZ1bmN0aW9uIHBjKCl7aWYoa2Mpe3ZhciBhPWtjLGI9bGM7bGM9a2M9bnVsbDttYyhhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspbWMoYlthXSl9fXZhciBxYz1PYmplY3QuZnJlZXplKHtpbmplY3Rpb246bmMsZW5xdWV1ZVN0YXRlUmVzdG9yZTpvYyxyZXN0b3JlU3RhdGVJZk5lZWRlZDpwY30pO2Z1bmN0aW9uIHJjKGEsYil7cmV0dXJuIGEoYil9dmFyIHNjPSExO2Z1bmN0aW9uIHRjKGEsYil7aWYoc2MpcmV0dXJuIHJjKGEsYik7c2M9ITA7dHJ5e3JldHVybiByYyhhLGIpfWZpbmFsbHl7c2M9ITEscGMoKX19dmFyIHVjPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O1xuZnVuY3Rpb24gdmMoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISF1Y1thLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9ZnVuY3Rpb24gd2MoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfXZhciB4YztsLmNhblVzZURPTSYmKHhjPWRvY3VtZW50LmltcGxlbWVudGF0aW9uJiZkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5oYXNGZWF0dXJlJiYhMCE9PWRvY3VtZW50LmltcGxlbWVudGF0aW9uLmhhc0ZlYXR1cmUoXCJcIixcIlwiKSk7XG5mdW5jdGlvbiB5YyhhLGIpe2lmKCFsLmNhblVzZURPTXx8YiYmIShcImFkZEV2ZW50TGlzdGVuZXJcImluIGRvY3VtZW50KSlyZXR1cm4hMTtiPVwib25cIithO3ZhciBjPWIgaW4gZG9jdW1lbnQ7Y3x8KGM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxjLnNldEF0dHJpYnV0ZShiLFwicmV0dXJuO1wiKSxjPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjW2JdKTshYyYmeGMmJlwid2hlZWxcIj09PWEmJihjPWRvY3VtZW50LmltcGxlbWVudGF0aW9uLmhhc0ZlYXR1cmUoXCJFdmVudHMud2hlZWxcIixcIjMuMFwiKSk7cmV0dXJuIGN9ZnVuY3Rpb24gemMoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIEFjKGEpe3ZhciBiPXpjKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZSxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGMuZ2V0LmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtjLnNldC5jYWxsKHRoaXMsYSl9fSkse2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9bnVsbDtkZWxldGUgYVtiXX19fVxuZnVuY3Rpb24gQmMoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPUFjKGEpKX1mdW5jdGlvbiBDYyhhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9emMoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX12YXIgRGM9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcInRvcEJsdXIgdG9wQ2hhbmdlIHRvcENsaWNrIHRvcEZvY3VzIHRvcElucHV0IHRvcEtleURvd24gdG9wS2V5VXAgdG9wU2VsZWN0aW9uQ2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07XG5mdW5jdGlvbiBFYyhhLGIsYyl7YT1ULmdldFBvb2xlZChEYy5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO29jKGMpO0FiKGEpO3JldHVybiBhfXZhciBGYz1udWxsLEdjPW51bGw7ZnVuY3Rpb24gSGMoYSl7a2IoYSk7bGIoITEpfWZ1bmN0aW9uIEljKGEpe3ZhciBiPXFiKGEpO2lmKENjKGIpKXJldHVybiBhfWZ1bmN0aW9uIEpjKGEsYil7aWYoXCJ0b3BDaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIEtjPSExO2wuY2FuVXNlRE9NJiYoS2M9eWMoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7ZnVuY3Rpb24gTGMoKXtGYyYmKEZjLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLE1jKSxHYz1GYz1udWxsKX1mdW5jdGlvbiBNYyhhKXtcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmSWMoR2MpJiYoYT1FYyhHYyxhLHdjKGEpKSx0YyhIYyxhKSl9XG5mdW5jdGlvbiBOYyhhLGIsYyl7XCJ0b3BGb2N1c1wiPT09YT8oTGMoKSxGYz1iLEdjPWMsRmMuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsTWMpKTpcInRvcEJsdXJcIj09PWEmJkxjKCl9ZnVuY3Rpb24gT2MoYSl7aWYoXCJ0b3BTZWxlY3Rpb25DaGFuZ2VcIj09PWF8fFwidG9wS2V5VXBcIj09PWF8fFwidG9wS2V5RG93blwiPT09YSlyZXR1cm4gSWMoR2MpfWZ1bmN0aW9uIFBjKGEsYil7aWYoXCJ0b3BDbGlja1wiPT09YSlyZXR1cm4gSWMoYil9ZnVuY3Rpb24gJGMoYSxiKXtpZihcInRvcElucHV0XCI9PT1hfHxcInRvcENoYW5nZVwiPT09YSlyZXR1cm4gSWMoYil9XG52YXIgYWQ9e2V2ZW50VHlwZXM6RGMsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpLYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/cWIoYik6d2luZG93LGY9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwic2VsZWN0XCI9PT1mfHxcImlucHV0XCI9PT1mJiZcImZpbGVcIj09PWUudHlwZSl2YXIgZz1KYztlbHNlIGlmKHZjKGUpKWlmKEtjKWc9JGM7ZWxzZXtnPU9jO3ZhciBoPU5jfWVsc2UgZj1lLm5vZGVOYW1lLCFmfHxcImlucHV0XCIhPT1mLnRvTG93ZXJDYXNlKCl8fFwiY2hlY2tib3hcIiE9PWUudHlwZSYmXCJyYWRpb1wiIT09ZS50eXBlfHwoZz1QYyk7aWYoZyYmKGc9ZyhhLGIpKSlyZXR1cm4gRWMoZyxjLGQpO2gmJmgoYSxlLGIpO1widG9wQmx1clwiPT09YSYmbnVsbCE9YiYmKGE9Yi5fd3JhcHBlclN0YXRlfHxlLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJihhPVwiXCIrZS52YWx1ZSxlLmdldEF0dHJpYnV0ZShcInZhbHVlXCIpIT09XG5hJiZlLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsYSkpfX07ZnVuY3Rpb24gYmQoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfVQuYXVnbWVudENsYXNzKGJkLHt2aWV3Om51bGwsZGV0YWlsOm51bGx9KTt2YXIgY2Q9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIGRkKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9Y2RbYV0pPyEhYlthXTohMX1mdW5jdGlvbiBlZCgpe3JldHVybiBkZH1mdW5jdGlvbiBmZChhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9XG5iZC5hdWdtZW50Q2xhc3MoZmQse3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6ZWQsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9fSk7XG52YXIgZ2Q9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1widG9wTW91c2VPdXRcIixcInRvcE1vdXNlT3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJ0b3BNb3VzZU91dFwiLFwidG9wTW91c2VPdmVyXCJdfX0saGQ9e2V2ZW50VHlwZXM6Z2QsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXtpZihcInRvcE1vdXNlT3ZlclwiPT09YSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fFwidG9wTW91c2VPdXRcIiE9PWEmJlwidG9wTW91c2VPdmVyXCIhPT1hKXJldHVybiBudWxsO3ZhciBlPWQud2luZG93PT09ZD9kOihlPWQub3duZXJEb2N1bWVudCk/ZS5kZWZhdWx0Vmlld3x8ZS5wYXJlbnRXaW5kb3c6d2luZG93O1widG9wTW91c2VPdXRcIj09PWE/KGE9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP3BiKGIpOm51bGwpOmE9bnVsbDtpZihhPT09XG5iKXJldHVybiBudWxsO3ZhciBmPW51bGw9PWE/ZTpxYihhKTtlPW51bGw9PWI/ZTpxYihiKTt2YXIgZz1mZC5nZXRQb29sZWQoZ2QubW91c2VMZWF2ZSxhLGMsZCk7Zy50eXBlPVwibW91c2VsZWF2ZVwiO2cudGFyZ2V0PWY7Zy5yZWxhdGVkVGFyZ2V0PWU7Yz1mZC5nZXRQb29sZWQoZ2QubW91c2VFbnRlcixiLGMsZCk7Yy50eXBlPVwibW91c2VlbnRlclwiO2MudGFyZ2V0PWU7Yy5yZWxhdGVkVGFyZ2V0PWY7QmIoZyxjLGEsYik7cmV0dXJuW2csY119fSxpZD1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRC5SZWFjdEN1cnJlbnRPd25lcjtmdW5jdGlvbiBqZChhKXthPWEudHlwZTtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGE/YTpcImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmRpc3BsYXlOYW1lfHxhLm5hbWU6bnVsbH1cbmZ1bmN0aW9uIGtkKGEpe3ZhciBiPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiW1wicmV0dXJuXCJdOyliPWJbXCJyZXR1cm5cIl07ZWxzZXtpZigwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxO2Zvcig7YltcInJldHVyblwiXTspaWYoYj1iW1wicmV0dXJuXCJdLDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDF9cmV0dXJuIDM9PT1iLnRhZz8yOjN9ZnVuY3Rpb24gbGQoYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT8yPT09a2QoYSk6ITF9ZnVuY3Rpb24gbWQoYSl7MiE9PWtkKGEpP0UoXCIxODhcIik6dm9pZCAwfVxuZnVuY3Rpb24gbmQoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpcmV0dXJuIGI9a2QoYSksMz09PWI/RShcIjE4OFwiKTp2b2lkIDAsMT09PWI/bnVsbDphO2Zvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jW1wicmV0dXJuXCJdLGY9ZT9lLmFsdGVybmF0ZTpudWxsO2lmKCFlfHwhZilicmVhaztpZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKHZhciBnPWUuY2hpbGQ7Zzspe2lmKGc9PT1jKXJldHVybiBtZChlKSxhO2lmKGc9PT1kKXJldHVybiBtZChlKSxiO2c9Zy5zaWJsaW5nfUUoXCIxODhcIil9aWYoY1tcInJldHVyblwiXSE9PWRbXCJyZXR1cm5cIl0pYz1lLGQ9ZjtlbHNle2c9ITE7Zm9yKHZhciBoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWc/XG52b2lkIDA6RShcIjE4OVwiKX19Yy5hbHRlcm5hdGUhPT1kP0UoXCIxOTBcIik6dm9pZCAwfTMhPT1jLnRhZz9FKFwiMTg4XCIpOnZvaWQgMDtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIG9kKGEpe2E9bmQoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkW1wicmV0dXJuXCJdPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWJbXCJyZXR1cm5cIl18fGJbXCJyZXR1cm5cIl09PT1hKXJldHVybiBudWxsO2I9YltcInJldHVyblwiXX1iLnNpYmxpbmdbXCJyZXR1cm5cIl09YltcInJldHVyblwiXTtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBwZChhKXthPW5kKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQmJjQhPT1iLnRhZyliLmNoaWxkW1wicmV0dXJuXCJdPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWJbXCJyZXR1cm5cIl18fGJbXCJyZXR1cm5cIl09PT1hKXJldHVybiBudWxsO2I9YltcInJldHVyblwiXX1iLnNpYmxpbmdbXCJyZXR1cm5cIl09YltcInJldHVyblwiXTtiPWIuc2libGluZ319cmV0dXJuIG51bGx9dmFyIHFkPVtdO1xuZnVuY3Rpb24gcmQoYSl7dmFyIGI9YS50YXJnZXRJbnN0O2Rve2lmKCFiKXthLmFuY2VzdG9ycy5wdXNoKGIpO2JyZWFrfXZhciBjO2ZvcihjPWI7Y1tcInJldHVyblwiXTspYz1jW1wicmV0dXJuXCJdO2M9MyE9PWMudGFnP251bGw6Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZighYylicmVhazthLmFuY2VzdG9ycy5wdXNoKGIpO2I9cGIoYyl9d2hpbGUoYik7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspYj1hLmFuY2VzdG9yc1tjXSxzZChhLnRvcExldmVsVHlwZSxiLGEubmF0aXZlRXZlbnQsd2MoYS5uYXRpdmVFdmVudCkpfXZhciB0ZD0hMCxzZD12b2lkIDA7ZnVuY3Rpb24gdWQoYSl7dGQ9ISFhfWZ1bmN0aW9uIFUoYSxiLGMpe3JldHVybiBjP2JhLmxpc3RlbihjLGIsdmQuYmluZChudWxsLGEpKTpudWxsfWZ1bmN0aW9uIHdkKGEsYixjKXtyZXR1cm4gYz9iYS5jYXB0dXJlKGMsYix2ZC5iaW5kKG51bGwsYSkpOm51bGx9XG5mdW5jdGlvbiB2ZChhLGIpe2lmKHRkKXt2YXIgYz13YyhiKTtjPXBiKGMpO251bGw9PT1jfHxcIm51bWJlclwiIT09dHlwZW9mIGMudGFnfHwyPT09a2QoYyl8fChjPW51bGwpO2lmKHFkLmxlbmd0aCl7dmFyIGQ9cWQucG9wKCk7ZC50b3BMZXZlbFR5cGU9YTtkLm5hdGl2ZUV2ZW50PWI7ZC50YXJnZXRJbnN0PWM7YT1kfWVsc2UgYT17dG9wTGV2ZWxUeXBlOmEsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfTt0cnl7dGMocmQsYSl9ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCwxMD5xZC5sZW5ndGgmJnFkLnB1c2goYSl9fX1cbnZhciB4ZD1PYmplY3QuZnJlZXplKHtnZXQgX2VuYWJsZWQoKXtyZXR1cm4gdGR9LGdldCBfaGFuZGxlVG9wTGV2ZWwoKXtyZXR1cm4gc2R9LHNldEhhbmRsZVRvcExldmVsOmZ1bmN0aW9uKGEpe3NkPWF9LHNldEVuYWJsZWQ6dWQsaXNFbmFibGVkOmZ1bmN0aW9uKCl7cmV0dXJuIHRkfSx0cmFwQnViYmxlZEV2ZW50OlUsdHJhcENhcHR1cmVkRXZlbnQ6d2QsZGlzcGF0Y2hFdmVudDp2ZH0pO2Z1bmN0aW9uIHlkKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7Y1tcIm1zXCIrYV09XCJNU1wiK2I7Y1tcIk9cIithXT1cIm9cIitiLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGN9XG52YXIgemQ9e2FuaW1hdGlvbmVuZDp5ZChcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjp5ZChcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OnlkKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOnlkKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sQWQ9e30sQmQ9e307bC5jYW5Vc2VET00mJihCZD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSB6ZC5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSB6ZC5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSB6ZC5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSB6ZC50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO1xuZnVuY3Rpb24gQ2QoYSl7aWYoQWRbYV0pcmV0dXJuIEFkW2FdO2lmKCF6ZFthXSlyZXR1cm4gYTt2YXIgYj16ZFthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBCZClyZXR1cm4gQWRbYV09YltjXTtyZXR1cm5cIlwifVxudmFyIERkPXt0b3BBYm9ydDpcImFib3J0XCIsdG9wQW5pbWF0aW9uRW5kOkNkKFwiYW5pbWF0aW9uZW5kXCIpfHxcImFuaW1hdGlvbmVuZFwiLHRvcEFuaW1hdGlvbkl0ZXJhdGlvbjpDZChcImFuaW1hdGlvbml0ZXJhdGlvblwiKXx8XCJhbmltYXRpb25pdGVyYXRpb25cIix0b3BBbmltYXRpb25TdGFydDpDZChcImFuaW1hdGlvbnN0YXJ0XCIpfHxcImFuaW1hdGlvbnN0YXJ0XCIsdG9wQmx1cjpcImJsdXJcIix0b3BDYW5jZWw6XCJjYW5jZWxcIix0b3BDYW5QbGF5OlwiY2FucGxheVwiLHRvcENhblBsYXlUaHJvdWdoOlwiY2FucGxheXRocm91Z2hcIix0b3BDaGFuZ2U6XCJjaGFuZ2VcIix0b3BDbGljazpcImNsaWNrXCIsdG9wQ2xvc2U6XCJjbG9zZVwiLHRvcENvbXBvc2l0aW9uRW5kOlwiY29tcG9zaXRpb25lbmRcIix0b3BDb21wb3NpdGlvblN0YXJ0OlwiY29tcG9zaXRpb25zdGFydFwiLHRvcENvbXBvc2l0aW9uVXBkYXRlOlwiY29tcG9zaXRpb251cGRhdGVcIix0b3BDb250ZXh0TWVudTpcImNvbnRleHRtZW51XCIsdG9wQ29weTpcImNvcHlcIixcbnRvcEN1dDpcImN1dFwiLHRvcERvdWJsZUNsaWNrOlwiZGJsY2xpY2tcIix0b3BEcmFnOlwiZHJhZ1wiLHRvcERyYWdFbmQ6XCJkcmFnZW5kXCIsdG9wRHJhZ0VudGVyOlwiZHJhZ2VudGVyXCIsdG9wRHJhZ0V4aXQ6XCJkcmFnZXhpdFwiLHRvcERyYWdMZWF2ZTpcImRyYWdsZWF2ZVwiLHRvcERyYWdPdmVyOlwiZHJhZ292ZXJcIix0b3BEcmFnU3RhcnQ6XCJkcmFnc3RhcnRcIix0b3BEcm9wOlwiZHJvcFwiLHRvcER1cmF0aW9uQ2hhbmdlOlwiZHVyYXRpb25jaGFuZ2VcIix0b3BFbXB0aWVkOlwiZW1wdGllZFwiLHRvcEVuY3J5cHRlZDpcImVuY3J5cHRlZFwiLHRvcEVuZGVkOlwiZW5kZWRcIix0b3BFcnJvcjpcImVycm9yXCIsdG9wRm9jdXM6XCJmb2N1c1wiLHRvcElucHV0OlwiaW5wdXRcIix0b3BLZXlEb3duOlwia2V5ZG93blwiLHRvcEtleVByZXNzOlwia2V5cHJlc3NcIix0b3BLZXlVcDpcImtleXVwXCIsdG9wTG9hZGVkRGF0YTpcImxvYWRlZGRhdGFcIix0b3BMb2FkOlwibG9hZFwiLHRvcExvYWRlZE1ldGFkYXRhOlwibG9hZGVkbWV0YWRhdGFcIix0b3BMb2FkU3RhcnQ6XCJsb2Fkc3RhcnRcIixcbnRvcE1vdXNlRG93bjpcIm1vdXNlZG93blwiLHRvcE1vdXNlTW92ZTpcIm1vdXNlbW92ZVwiLHRvcE1vdXNlT3V0OlwibW91c2VvdXRcIix0b3BNb3VzZU92ZXI6XCJtb3VzZW92ZXJcIix0b3BNb3VzZVVwOlwibW91c2V1cFwiLHRvcFBhc3RlOlwicGFzdGVcIix0b3BQYXVzZTpcInBhdXNlXCIsdG9wUGxheTpcInBsYXlcIix0b3BQbGF5aW5nOlwicGxheWluZ1wiLHRvcFByb2dyZXNzOlwicHJvZ3Jlc3NcIix0b3BSYXRlQ2hhbmdlOlwicmF0ZWNoYW5nZVwiLHRvcFNjcm9sbDpcInNjcm9sbFwiLHRvcFNlZWtlZDpcInNlZWtlZFwiLHRvcFNlZWtpbmc6XCJzZWVraW5nXCIsdG9wU2VsZWN0aW9uQ2hhbmdlOlwic2VsZWN0aW9uY2hhbmdlXCIsdG9wU3RhbGxlZDpcInN0YWxsZWRcIix0b3BTdXNwZW5kOlwic3VzcGVuZFwiLHRvcFRleHRJbnB1dDpcInRleHRJbnB1dFwiLHRvcFRpbWVVcGRhdGU6XCJ0aW1ldXBkYXRlXCIsdG9wVG9nZ2xlOlwidG9nZ2xlXCIsdG9wVG91Y2hDYW5jZWw6XCJ0b3VjaGNhbmNlbFwiLHRvcFRvdWNoRW5kOlwidG91Y2hlbmRcIix0b3BUb3VjaE1vdmU6XCJ0b3VjaG1vdmVcIixcbnRvcFRvdWNoU3RhcnQ6XCJ0b3VjaHN0YXJ0XCIsdG9wVHJhbnNpdGlvbkVuZDpDZChcInRyYW5zaXRpb25lbmRcIil8fFwidHJhbnNpdGlvbmVuZFwiLHRvcFZvbHVtZUNoYW5nZTpcInZvbHVtZWNoYW5nZVwiLHRvcFdhaXRpbmc6XCJ3YWl0aW5nXCIsdG9wV2hlZWw6XCJ3aGVlbFwifSxFZD17fSxGZD0wLEdkPVwiX3JlYWN0TGlzdGVuZXJzSURcIisoXCJcIitNYXRoLnJhbmRvbSgpKS5zbGljZSgyKTtmdW5jdGlvbiBIZChhKXtPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxHZCl8fChhW0dkXT1GZCsrLEVkW2FbR2RdXT17fSk7cmV0dXJuIEVkW2FbR2RdXX1mdW5jdGlvbiBJZChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBKZChhLGIpe3ZhciBjPUlkKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPUlkKGMpfX1mdW5jdGlvbiBLZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiZcInRleHRcIj09PWEudHlwZXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG52YXIgTGQ9bC5jYW5Vc2VET00mJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxNZD17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwidG9wQmx1ciB0b3BDb250ZXh0TWVudSB0b3BGb2N1cyB0b3BLZXlEb3duIHRvcEtleVVwIHRvcE1vdXNlRG93biB0b3BNb3VzZVVwIHRvcFNlbGVjdGlvbkNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LE5kPW51bGwsT2Q9bnVsbCxQZD1udWxsLFFkPSExO1xuZnVuY3Rpb24gUmQoYSxiKXtpZihRZHx8bnVsbD09TmR8fE5kIT09ZGEoKSlyZXR1cm4gbnVsbDt2YXIgYz1OZDtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZLZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06d2luZG93LmdldFNlbGVjdGlvbj8oYz13aW5kb3cuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk6Yz12b2lkIDA7cmV0dXJuIFBkJiZlYShQZCxjKT9udWxsOihQZD1jLGE9VC5nZXRQb29sZWQoTWQuc2VsZWN0LE9kLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9TmQsQWIoYSksYSl9XG52YXIgU2Q9e2V2ZW50VHlwZXM6TWQsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1kLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCxmO2lmKCEoZj0hZSkpe2E6e2U9SGQoZSk7Zj1TYS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKyl7dmFyIGg9ZltnXTtpZighZS5oYXNPd25Qcm9wZXJ0eShoKXx8IWVbaF0pe2U9ITE7YnJlYWsgYX19ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP3FiKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcInRvcEZvY3VzXCI6aWYodmMoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpTmQ9ZSxPZD1iLFBkPW51bGw7YnJlYWs7Y2FzZSBcInRvcEJsdXJcIjpQZD1PZD1OZD1udWxsO2JyZWFrO2Nhc2UgXCJ0b3BNb3VzZURvd25cIjpRZD0hMDticmVhaztjYXNlIFwidG9wQ29udGV4dE1lbnVcIjpjYXNlIFwidG9wTW91c2VVcFwiOnJldHVybiBRZD0hMSxSZChjLGQpO2Nhc2UgXCJ0b3BTZWxlY3Rpb25DaGFuZ2VcIjppZihMZClicmVhaztcbmNhc2UgXCJ0b3BLZXlEb3duXCI6Y2FzZSBcInRvcEtleVVwXCI6cmV0dXJuIFJkKGMsZCl9cmV0dXJuIG51bGx9fTtmdW5jdGlvbiBUZChhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9VC5hdWdtZW50Q2xhc3MoVGQse2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pO2Z1bmN0aW9uIFVkKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1ULmF1Z21lbnRDbGFzcyhVZCx7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pO2Z1bmN0aW9uIFZkKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1iZC5hdWdtZW50Q2xhc3MoVmQse3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO1xuZnVuY3Rpb24gV2QoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9XG52YXIgWGQ9e0VzYzpcIkVzY2FwZVwiLFNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LFlkPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLFxuMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifTtmdW5jdGlvbiBaZChhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9XG5iZC5hdWdtZW50Q2xhc3MoWmQse2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9WGRbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9V2QoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP1lkW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sbG9jYXRpb246bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwscmVwZWF0Om51bGwsbG9jYWxlOm51bGwsZ2V0TW9kaWZpZXJTdGF0ZTplZCxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/V2QoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9XZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pO2Z1bmN0aW9uICRkKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1mZC5hdWdtZW50Q2xhc3MoJGQse2RhdGFUcmFuc2ZlcjpudWxsfSk7ZnVuY3Rpb24gYWUoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfWJkLmF1Z21lbnRDbGFzcyhhZSx7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOmVkfSk7ZnVuY3Rpb24gYmUoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfVQuYXVnbWVudENsYXNzKGJlLHtwcm9wZXJ0eU5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pO1xuZnVuY3Rpb24gY2UoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfWZkLmF1Z21lbnRDbGFzcyhjZSx7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluIGE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KTt2YXIgZGU9e30sZWU9e307XG5cImFib3J0IGFuaW1hdGlvbkVuZCBhbmltYXRpb25JdGVyYXRpb24gYW5pbWF0aW9uU3RhcnQgYmx1ciBjYW5jZWwgY2FuUGxheSBjYW5QbGF5VGhyb3VnaCBjbGljayBjbG9zZSBjb250ZXh0TWVudSBjb3B5IGN1dCBkb3VibGVDbGljayBkcmFnIGRyYWdFbmQgZHJhZ0VudGVyIGRyYWdFeGl0IGRyYWdMZWF2ZSBkcmFnT3ZlciBkcmFnU3RhcnQgZHJvcCBkdXJhdGlvbkNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBmb2N1cyBpbnB1dCBpbnZhbGlkIGtleURvd24ga2V5UHJlc3Mga2V5VXAgbG9hZCBsb2FkZWREYXRhIGxvYWRlZE1ldGFkYXRhIGxvYWRTdGFydCBtb3VzZURvd24gbW91c2VNb3ZlIG1vdXNlT3V0IG1vdXNlT3ZlciBtb3VzZVVwIHBhc3RlIHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlQ2hhbmdlIHJlc2V0IHNjcm9sbCBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1Ym1pdCBzdXNwZW5kIHRpbWVVcGRhdGUgdG9nZ2xlIHRvdWNoQ2FuY2VsIHRvdWNoRW5kIHRvdWNoTW92ZSB0b3VjaFN0YXJ0IHRyYW5zaXRpb25FbmQgdm9sdW1lQ2hhbmdlIHdhaXRpbmcgd2hlZWxcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdLnRvVXBwZXJDYXNlKCkrXG5hLnNsaWNlKDEpLGM9XCJvblwiK2I7Yj1cInRvcFwiK2I7Yz17cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6YyxjYXB0dXJlZDpjK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W2JdfTtkZVthXT1jO2VlW2JdPWN9KTtcbnZhciBmZT17ZXZlbnRUeXBlczpkZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWVlW2FdO2lmKCFlKXJldHVybiBudWxsO3N3aXRjaChhKXtjYXNlIFwidG9wS2V5UHJlc3NcIjppZigwPT09V2QoYykpcmV0dXJuIG51bGw7Y2FzZSBcInRvcEtleURvd25cIjpjYXNlIFwidG9wS2V5VXBcIjphPVpkO2JyZWFrO2Nhc2UgXCJ0b3BCbHVyXCI6Y2FzZSBcInRvcEZvY3VzXCI6YT1WZDticmVhaztjYXNlIFwidG9wQ2xpY2tcIjppZigyPT09Yy5idXR0b24pcmV0dXJuIG51bGw7Y2FzZSBcInRvcERvdWJsZUNsaWNrXCI6Y2FzZSBcInRvcE1vdXNlRG93blwiOmNhc2UgXCJ0b3BNb3VzZU1vdmVcIjpjYXNlIFwidG9wTW91c2VVcFwiOmNhc2UgXCJ0b3BNb3VzZU91dFwiOmNhc2UgXCJ0b3BNb3VzZU92ZXJcIjpjYXNlIFwidG9wQ29udGV4dE1lbnVcIjphPWZkO2JyZWFrO2Nhc2UgXCJ0b3BEcmFnXCI6Y2FzZSBcInRvcERyYWdFbmRcIjpjYXNlIFwidG9wRHJhZ0VudGVyXCI6Y2FzZSBcInRvcERyYWdFeGl0XCI6Y2FzZSBcInRvcERyYWdMZWF2ZVwiOmNhc2UgXCJ0b3BEcmFnT3ZlclwiOmNhc2UgXCJ0b3BEcmFnU3RhcnRcIjpjYXNlIFwidG9wRHJvcFwiOmE9XG4kZDticmVhaztjYXNlIFwidG9wVG91Y2hDYW5jZWxcIjpjYXNlIFwidG9wVG91Y2hFbmRcIjpjYXNlIFwidG9wVG91Y2hNb3ZlXCI6Y2FzZSBcInRvcFRvdWNoU3RhcnRcIjphPWFlO2JyZWFrO2Nhc2UgXCJ0b3BBbmltYXRpb25FbmRcIjpjYXNlIFwidG9wQW5pbWF0aW9uSXRlcmF0aW9uXCI6Y2FzZSBcInRvcEFuaW1hdGlvblN0YXJ0XCI6YT1UZDticmVhaztjYXNlIFwidG9wVHJhbnNpdGlvbkVuZFwiOmE9YmU7YnJlYWs7Y2FzZSBcInRvcFNjcm9sbFwiOmE9YmQ7YnJlYWs7Y2FzZSBcInRvcFdoZWVsXCI6YT1jZTticmVhaztjYXNlIFwidG9wQ29weVwiOmNhc2UgXCJ0b3BDdXRcIjpjYXNlIFwidG9wUGFzdGVcIjphPVVkO2JyZWFrO2RlZmF1bHQ6YT1UfWI9YS5nZXRQb29sZWQoZSxiLGMsZCk7QWIoYik7cmV0dXJuIGJ9fTtzZD1mdW5jdGlvbihhLGIsYyxkKXthPWpiKGEsYixjLGQpO2tiKGEpO2xiKCExKX07aGIuaW5qZWN0RXZlbnRQbHVnaW5PcmRlcihcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIFRhcEV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTtcbldhPXNiLmdldEZpYmVyQ3VycmVudFByb3BzRnJvbU5vZGU7WGE9c2IuZ2V0SW5zdGFuY2VGcm9tTm9kZTtZYT1zYi5nZXROb2RlRnJvbUluc3RhbmNlO2hiLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSh7U2ltcGxlRXZlbnRQbHVnaW46ZmUsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOmhkLENoYW5nZUV2ZW50UGx1Z2luOmFkLFNlbGVjdEV2ZW50UGx1Z2luOlNkLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46aWN9KTt2YXIgZ2U9W10saGU9LTE7ZnVuY3Rpb24gVihhKXswPmhlfHwoYS5jdXJyZW50PWdlW2hlXSxnZVtoZV09bnVsbCxoZS0tKX1mdW5jdGlvbiBXKGEsYil7aGUrKztnZVtoZV09YS5jdXJyZW50O2EuY3VycmVudD1ifW5ldyBTZXQ7dmFyIGllPXtjdXJyZW50OkR9LFg9e2N1cnJlbnQ6ITF9LGplPUQ7ZnVuY3Rpb24ga2UoYSl7cmV0dXJuIGxlKGEpP2plOmllLmN1cnJlbnR9XG5mdW5jdGlvbiBtZShhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIEQ7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gbGUoYSl7cmV0dXJuIDI9PT1hLnRhZyYmbnVsbCE9YS50eXBlLmNoaWxkQ29udGV4dFR5cGVzfWZ1bmN0aW9uIG5lKGEpe2xlKGEpJiYoVihYLGEpLFYoaWUsYSkpfVxuZnVuY3Rpb24gb2UoYSxiLGMpe251bGwhPWllLmN1cnNvcj9FKFwiMTY4XCIpOnZvaWQgMDtXKGllLGIsYSk7VyhYLGMsYSl9ZnVuY3Rpb24gcGUoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZSxkPWEudHlwZS5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGI7Yz1jLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBjKWUgaW4gZD92b2lkIDA6RShcIjEwOFwiLGpkKGEpfHxcIlVua25vd25cIixlKTtyZXR1cm4gQih7fSxiLGMpfWZ1bmN0aW9uIHFlKGEpe2lmKCFsZShhKSlyZXR1cm4hMTt2YXIgYj1hLnN0YXRlTm9kZTtiPWImJmIuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fEQ7amU9aWUuY3VycmVudDtXKGllLGIsYSk7VyhYLFguY3VycmVudCxhKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIHJlKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7Yz92b2lkIDA6RShcIjE2OVwiKTtpZihiKXt2YXIgZD1wZShhLGplKTtjLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWQ7VihYLGEpO1YoaWUsYSk7VyhpZSxkLGEpfWVsc2UgVihYLGEpO1coWCxiLGEpfVxuZnVuY3Rpb24gWShhLGIsYyl7dGhpcy50YWc9YTt0aGlzLmtleT1iO3RoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT1udWxsO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXNbXCJyZXR1cm5cIl09bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPXRoaXMucGVuZGluZ1Byb3BzPXRoaXMucmVmPW51bGw7dGhpcy5pbnRlcm5hbENvbnRleHRUYWc9Yzt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuZXhwaXJhdGlvblRpbWU9MDt0aGlzLmFsdGVybmF0ZT1udWxsfVxuZnVuY3Rpb24gc2UoYSxiLGMpe3ZhciBkPWEuYWx0ZXJuYXRlO251bGw9PT1kPyhkPW5ldyBZKGEudGFnLGEua2V5LGEuaW50ZXJuYWxDb250ZXh0VGFnKSxkLnR5cGU9YS50eXBlLGQuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGQuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9ZCk6KGQuZWZmZWN0VGFnPTAsZC5uZXh0RWZmZWN0PW51bGwsZC5maXJzdEVmZmVjdD1udWxsLGQubGFzdEVmZmVjdD1udWxsKTtkLmV4cGlyYXRpb25UaW1lPWM7ZC5wZW5kaW5nUHJvcHM9YjtkLmNoaWxkPWEuY2hpbGQ7ZC5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztkLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2QudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtkLnNpYmxpbmc9YS5zaWJsaW5nO2QuaW5kZXg9YS5pbmRleDtkLnJlZj1hLnJlZjtyZXR1cm4gZH1cbmZ1bmN0aW9uIHRlKGEsYixjKXt2YXIgZD12b2lkIDAsZT1hLnR5cGUsZj1hLmtleTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT8oZD1lLnByb3RvdHlwZSYmZS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD9uZXcgWSgyLGYsYik6bmV3IFkoMCxmLGIpLGQudHlwZT1lLGQucGVuZGluZ1Byb3BzPWEucHJvcHMpOlwic3RyaW5nXCI9PT10eXBlb2YgZT8oZD1uZXcgWSg1LGYsYiksZC50eXBlPWUsZC5wZW5kaW5nUHJvcHM9YS5wcm9wcyk6XCJvYmplY3RcIj09PXR5cGVvZiBlJiZudWxsIT09ZSYmXCJudW1iZXJcIj09PXR5cGVvZiBlLnRhZz8oZD1lLGQucGVuZGluZ1Byb3BzPWEucHJvcHMpOkUoXCIxMzBcIixudWxsPT1lP2U6dHlwZW9mIGUsXCJcIik7ZC5leHBpcmF0aW9uVGltZT1jO3JldHVybiBkfWZ1bmN0aW9uIHVlKGEsYixjLGQpe2I9bmV3IFkoMTAsZCxiKTtiLnBlbmRpbmdQcm9wcz1hO2IuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYn1cbmZ1bmN0aW9uIHZlKGEsYixjKXtiPW5ldyBZKDYsbnVsbCxiKTtiLnBlbmRpbmdQcm9wcz1hO2IuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYn1mdW5jdGlvbiB3ZShhLGIsYyl7Yj1uZXcgWSg3LGEua2V5LGIpO2IudHlwZT1hLmhhbmRsZXI7Yi5wZW5kaW5nUHJvcHM9YTtiLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGJ9ZnVuY3Rpb24geGUoYSxiLGMpe2E9bmV3IFkoOSxudWxsLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiB5ZShhLGIsYyl7Yj1uZXcgWSg0LGEua2V5LGIpO2IucGVuZGluZ1Byb3BzPWEuY2hpbGRyZW58fFtdO2IuZXhwaXJhdGlvblRpbWU9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9dmFyIHplPW51bGwsQWU9bnVsbDtcbmZ1bmN0aW9uIEJlKGEpe3JldHVybiBmdW5jdGlvbihiKXt0cnl7cmV0dXJuIGEoYil9Y2F0Y2goYyl7fX19ZnVuY3Rpb24gQ2UoYSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pcmV0dXJuITE7dmFyIGI9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKGIuaXNEaXNhYmxlZHx8IWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7emU9QmUoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclJvb3QoYyxhKX0pO0FlPUJlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9KX1jYXRjaChkKXt9cmV0dXJuITB9ZnVuY3Rpb24gRGUoYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIHplJiZ6ZShhKX1mdW5jdGlvbiBFZShhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgQWUmJkFlKGEpfVxuZnVuY3Rpb24gRmUoYSl7cmV0dXJue2Jhc2VTdGF0ZTphLGV4cGlyYXRpb25UaW1lOjAsZmlyc3Q6bnVsbCxsYXN0Om51bGwsY2FsbGJhY2tMaXN0Om51bGwsaGFzRm9yY2VVcGRhdGU6ITEsaXNJbml0aWFsaXplZDohMX19ZnVuY3Rpb24gR2UoYSxiKXtudWxsPT09YS5sYXN0P2EuZmlyc3Q9YS5sYXN0PWI6KGEubGFzdC5uZXh0PWIsYS5sYXN0PWIpO2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lfHxhLmV4cGlyYXRpb25UaW1lPmIuZXhwaXJhdGlvblRpbWUpYS5leHBpcmF0aW9uVGltZT1iLmV4cGlyYXRpb25UaW1lfVxuZnVuY3Rpb24gSGUoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZSxkPWEudXBkYXRlUXVldWU7bnVsbD09PWQmJihkPWEudXBkYXRlUXVldWU9RmUobnVsbCkpO251bGwhPT1jPyhhPWMudXBkYXRlUXVldWUsbnVsbD09PWEmJihhPWMudXBkYXRlUXVldWU9RmUobnVsbCkpKTphPW51bGw7YT1hIT09ZD9hOm51bGw7bnVsbD09PWE/R2UoZCxiKTpudWxsPT09ZC5sYXN0fHxudWxsPT09YS5sYXN0PyhHZShkLGIpLEdlKGEsYikpOihHZShkLGIpLGEubGFzdD1iKX1mdW5jdGlvbiBJZShhLGIsYyxkKXthPWEucGFydGlhbFN0YXRlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChiLGMsZCk6YX1cbmZ1bmN0aW9uIEplKGEsYixjLGQsZSxmKXtudWxsIT09YSYmYS51cGRhdGVRdWV1ZT09PWMmJihjPWIudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTpjLmJhc2VTdGF0ZSxleHBpcmF0aW9uVGltZTpjLmV4cGlyYXRpb25UaW1lLGZpcnN0OmMuZmlyc3QsbGFzdDpjLmxhc3QsaXNJbml0aWFsaXplZDpjLmlzSW5pdGlhbGl6ZWQsY2FsbGJhY2tMaXN0Om51bGwsaGFzRm9yY2VVcGRhdGU6ITF9KTtjLmV4cGlyYXRpb25UaW1lPTA7Yy5pc0luaXRpYWxpemVkP2E9Yy5iYXNlU3RhdGU6KGE9Yy5iYXNlU3RhdGU9Yi5tZW1vaXplZFN0YXRlLGMuaXNJbml0aWFsaXplZD0hMCk7Zm9yKHZhciBnPSEwLGg9Yy5maXJzdCxrPSExO251bGwhPT1oOyl7dmFyIHE9aC5leHBpcmF0aW9uVGltZTtpZihxPmYpe3ZhciB2PWMuZXhwaXJhdGlvblRpbWU7aWYoMD09PXZ8fHY+cSljLmV4cGlyYXRpb25UaW1lPXE7a3x8KGs9ITAsYy5iYXNlU3RhdGU9YSl9ZWxzZXtrfHwoYy5maXJzdD1oLm5leHQsbnVsbD09PVxuYy5maXJzdCYmKGMubGFzdD1udWxsKSk7aWYoaC5pc1JlcGxhY2UpYT1JZShoLGQsYSxlKSxnPSEwO2Vsc2UgaWYocT1JZShoLGQsYSxlKSlhPWc/Qih7fSxhLHEpOkIoYSxxKSxnPSExO2guaXNGb3JjZWQmJihjLmhhc0ZvcmNlVXBkYXRlPSEwKTtudWxsIT09aC5jYWxsYmFjayYmKHE9Yy5jYWxsYmFja0xpc3QsbnVsbD09PXEmJihxPWMuY2FsbGJhY2tMaXN0PVtdKSxxLnB1c2goaCkpfWg9aC5uZXh0fW51bGwhPT1jLmNhbGxiYWNrTGlzdD9iLmVmZmVjdFRhZ3w9MzI6bnVsbCE9PWMuZmlyc3R8fGMuaGFzRm9yY2VVcGRhdGV8fChiLnVwZGF0ZVF1ZXVlPW51bGwpO2t8fChjLmJhc2VTdGF0ZT1hKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIEtlKGEsYil7dmFyIGM9YS5jYWxsYmFja0xpc3Q7aWYobnVsbCE9PWMpZm9yKGEuY2FsbGJhY2tMaXN0PW51bGwsYT0wO2E8Yy5sZW5ndGg7YSsrKXt2YXIgZD1jW2FdLGU9ZC5jYWxsYmFjaztkLmNhbGxiYWNrPW51bGw7XCJmdW5jdGlvblwiIT09dHlwZW9mIGU/RShcIjE5MVwiLGUpOnZvaWQgMDtlLmNhbGwoYil9fVxuZnVuY3Rpb24gTGUoYSxiLGMsZCl7ZnVuY3Rpb24gZShhLGIpe2IudXBkYXRlcj1mO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbEZpYmVyPWF9dmFyIGY9e2lzTW91bnRlZDpsZCxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYyxkLGUpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2U9dm9pZCAwPT09ZT9udWxsOmU7dmFyIGc9YihjKTtIZShjLHtleHBpcmF0aW9uVGltZTpnLHBhcnRpYWxTdGF0ZTpkLGNhbGxiYWNrOmUsaXNSZXBsYWNlOiExLGlzRm9yY2VkOiExLG5leHRDYWxsYmFjazpudWxsLG5leHQ6bnVsbH0pO2EoYyxnKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihjLGQsZSl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7ZT12b2lkIDA9PT1lP251bGw6ZTt2YXIgZz1iKGMpO0hlKGMse2V4cGlyYXRpb25UaW1lOmcscGFydGlhbFN0YXRlOmQsY2FsbGJhY2s6ZSxpc1JlcGxhY2U6ITAsaXNGb3JjZWQ6ITEsbmV4dENhbGxiYWNrOm51bGwsbmV4dDpudWxsfSk7XG5hKGMsZyl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihjLGQpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGU9YihjKTtIZShjLHtleHBpcmF0aW9uVGltZTplLHBhcnRpYWxTdGF0ZTpudWxsLGNhbGxiYWNrOmQsaXNSZXBsYWNlOiExLGlzRm9yY2VkOiEwLG5leHRDYWxsYmFjazpudWxsLG5leHQ6bnVsbH0pO2EoYyxlKX19O3JldHVybnthZG9wdENsYXNzSW5zdGFuY2U6ZSxjb25zdHJ1Y3RDbGFzc0luc3RhbmNlOmZ1bmN0aW9uKGEsYil7dmFyIGM9YS50eXBlLGQ9a2UoYSksZj0yPT09YS50YWcmJm51bGwhPWEudHlwZS5jb250ZXh0VHlwZXMsZz1mP21lKGEsZCk6RDtiPW5ldyBjKGIsZyk7ZShhLGIpO2YmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1kLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zyk7cmV0dXJuIGJ9LG1vdW50Q2xhc3NJbnN0YW5jZTpmdW5jdGlvbihhLFxuYil7dmFyIGM9YS5hbHRlcm5hdGUsZD1hLnN0YXRlTm9kZSxlPWQuc3RhdGV8fG51bGwsZz1hLnBlbmRpbmdQcm9wcztnP3ZvaWQgMDpFKFwiMTU4XCIpO3ZhciBoPWtlKGEpO2QucHJvcHM9ZztkLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZT1lO2QucmVmcz1EO2QuY29udGV4dD1tZShhLGgpO251bGwhPWEudHlwZSYmbnVsbCE9YS50eXBlLnByb3RvdHlwZSYmITA9PT1hLnR5cGUucHJvdG90eXBlLnVuc3RhYmxlX2lzQXN5bmNSZWFjdENvbXBvbmVudCYmKGEuaW50ZXJuYWxDb250ZXh0VGFnfD0xKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnRXaWxsTW91bnQmJihlPWQuc3RhdGUsZC5jb21wb25lbnRXaWxsTW91bnQoKSxlIT09ZC5zdGF0ZSYmZi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGQsZC5zdGF0ZSxudWxsKSxlPWEudXBkYXRlUXVldWUsbnVsbCE9PWUmJihkLnN0YXRlPUplKGMsYSxlLGQsZyxiKSkpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZE1vdW50JiYoYS5lZmZlY3RUYWd8PVxuNCl9LHVwZGF0ZUNsYXNzSW5zdGFuY2U6ZnVuY3Rpb24oYSxiLGUpe3ZhciBnPWIuc3RhdGVOb2RlO2cucHJvcHM9Yi5tZW1vaXplZFByb3BzO2cuc3RhdGU9Yi5tZW1vaXplZFN0YXRlO3ZhciBoPWIubWVtb2l6ZWRQcm9wcyxrPWIucGVuZGluZ1Byb3BzO2t8fChrPWgsbnVsbD09az9FKFwiMTU5XCIpOnZvaWQgMCk7dmFyIHU9Zy5jb250ZXh0LHo9a2UoYik7ej1tZShiLHopO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fGg9PT1rJiZ1PT09enx8KHU9Zy5zdGF0ZSxnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoayx6KSxnLnN0YXRlIT09dSYmZi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGcsZy5zdGF0ZSxudWxsKSk7dT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09Yi51cGRhdGVRdWV1ZT9KZShhLGIsYi51cGRhdGVRdWV1ZSxnLGssZSk6dTtpZighKGghPT1rfHx1IT09ZXx8WC5jdXJyZW50fHxudWxsIT09Yi51cGRhdGVRdWV1ZSYmYi51cGRhdGVRdWV1ZS5oYXNGb3JjZVVwZGF0ZSkpcmV0dXJuXCJmdW5jdGlvblwiIT09XG50eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnU9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksITE7dmFyIEc9aztpZihudWxsPT09aHx8bnVsbCE9PWIudXBkYXRlUXVldWUmJmIudXBkYXRlUXVldWUuaGFzRm9yY2VVcGRhdGUpRz0hMDtlbHNle3ZhciBJPWIuc3RhdGVOb2RlLEw9Yi50eXBlO0c9XCJmdW5jdGlvblwiPT09dHlwZW9mIEkuc2hvdWxkQ29tcG9uZW50VXBkYXRlP0kuc2hvdWxkQ29tcG9uZW50VXBkYXRlKEcsZSx6KTpMLnByb3RvdHlwZSYmTC5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IWVhKGgsRyl8fCFlYSh1LGUpOiEwfUc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShrLGUseiksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxcbmg9PT1hLm1lbW9pemVkUHJvcHMmJnU9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksYyhiLGspLGQoYixlKSk7Zy5wcm9wcz1rO2cuc3RhdGU9ZTtnLmNvbnRleHQ9ejtyZXR1cm4gR319fXZhciBRZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2xbXCJmb3JcIl0sUmU9UWU/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxTZT1RZT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5jYWxsXCIpOjYwMTA0LFRlPVFlP1N5bWJvbFtcImZvclwiXShcInJlYWN0LnJldHVyblwiKTo2MDEwNSxVZT1RZT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsVmU9UWU/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsV2U9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO1xuZnVuY3Rpb24gWGUoYSl7aWYobnVsbD09PWF8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPVdlJiZhW1dlXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfXZhciBZZT1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gWmUoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsIT09YyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMpe2lmKGIuX293bmVyKXtiPWIuX293bmVyO3ZhciBkPXZvaWQgMDtiJiYoMiE9PWIudGFnP0UoXCIxMTBcIik6dm9pZCAwLGQ9Yi5zdGF0ZU5vZGUpO2Q/dm9pZCAwOkUoXCIxNDdcIixjKTt2YXIgZT1cIlwiK2M7aWYobnVsbCE9PWEmJm51bGwhPT1hLnJlZiYmYS5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGEucmVmO2E9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzPT09RD9kLnJlZnM9e306ZC5yZWZzO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07YS5fc3RyaW5nUmVmPWU7cmV0dXJuIGF9XCJzdHJpbmdcIiE9PXR5cGVvZiBjP0UoXCIxNDhcIik6dm9pZCAwO2IuX293bmVyP3ZvaWQgMDpFKFwiMTQ5XCIsYyl9cmV0dXJuIGN9XG5mdW5jdGlvbiAkZShhLGIpe1widGV4dGFyZWFcIiE9PWEudHlwZSYmRShcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiLFwiXCIpfVxuZnVuY3Rpb24gYWYoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5lZmZlY3RUYWc9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIsYyl7YT1zZShhLGIsYyk7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmVmZmVjdFRhZz1cbjIsYyk6ZDtiLmVmZmVjdFRhZz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5lZmZlY3RUYWc9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPXZlKGMsYS5pbnRlcm5hbENvbnRleHRUYWcsZCksYltcInJldHVyblwiXT1hLGI7Yj1lKGIsYyxkKTtiW1wicmV0dXJuXCJdPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi50eXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzLGQpLGQucmVmPVplKGIsYyksZFtcInJldHVyblwiXT1hLGQ7ZD10ZShjLGEuaW50ZXJuYWxDb250ZXh0VGFnLGQpO2QucmVmPVplKGIsYyk7ZFtcInJldHVyblwiXT1hO3JldHVybiBkfWZ1bmN0aW9uIHEoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj13ZShjLGEuaW50ZXJuYWxDb250ZXh0VGFnLGQpLGJbXCJyZXR1cm5cIl09YSxiO2I9ZShiLGMsZCk7XG5iW1wicmV0dXJuXCJdPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gdihhLGIsYyxkKXtpZihudWxsPT09Ynx8OSE9PWIudGFnKXJldHVybiBiPXhlKGMsYS5pbnRlcm5hbENvbnRleHRUYWcsZCksYi50eXBlPWMudmFsdWUsYltcInJldHVyblwiXT1hLGI7Yj1lKGIsbnVsbCxkKTtiLnR5cGU9Yy52YWx1ZTtiW1wicmV0dXJuXCJdPWE7cmV0dXJuIGJ9ZnVuY3Rpb24geShhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PWMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9eWUoYyxhLmludGVybmFsQ29udGV4dFRhZyxkKSxiW1wicmV0dXJuXCJdPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSxkKTtiW1wicmV0dXJuXCJdPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gdShhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHwxMCE9PWIudGFnKXJldHVybiBiPXVlKGMsYS5pbnRlcm5hbENvbnRleHRUYWcsXG5kLGYpLGJbXCJyZXR1cm5cIl09YSxiO2I9ZShiLGMsZCk7YltcInJldHVyblwiXT1hO3JldHVybiBifWZ1bmN0aW9uIHooYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPXZlKFwiXCIrYixhLmludGVybmFsQ29udGV4dFRhZyxjKSxiW1wicmV0dXJuXCJdPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBSZTppZihiLnR5cGU9PT1WZSlyZXR1cm4gYj11ZShiLnByb3BzLmNoaWxkcmVuLGEuaW50ZXJuYWxDb250ZXh0VGFnLGMsYi5rZXkpLGJbXCJyZXR1cm5cIl09YSxiO2M9dGUoYixhLmludGVybmFsQ29udGV4dFRhZyxjKTtjLnJlZj1aZShudWxsLGIpO2NbXCJyZXR1cm5cIl09YTtyZXR1cm4gYztjYXNlIFNlOnJldHVybiBiPXdlKGIsYS5pbnRlcm5hbENvbnRleHRUYWcsYyksYltcInJldHVyblwiXT1hLGI7Y2FzZSBUZTpyZXR1cm4gYz14ZShiLGEuaW50ZXJuYWxDb250ZXh0VGFnLFxuYyksYy50eXBlPWIudmFsdWUsY1tcInJldHVyblwiXT1hLGM7Y2FzZSBVZTpyZXR1cm4gYj15ZShiLGEuaW50ZXJuYWxDb250ZXh0VGFnLGMpLGJbXCJyZXR1cm5cIl09YSxifWlmKFllKGIpfHxYZShiKSlyZXR1cm4gYj11ZShiLGEuaW50ZXJuYWxDb250ZXh0VGFnLGMsbnVsbCksYltcInJldHVyblwiXT1hLGI7JGUoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBHKGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIFJlOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09VmU/dShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlIFNlOnJldHVybiBjLmtleT09PWU/cShhLGIsYyxkKTpudWxsO2Nhc2UgVGU6cmV0dXJuIG51bGw9PT1cbmU/dihhLGIsYyxkKTpudWxsO2Nhc2UgVWU6cmV0dXJuIGMua2V5PT09ZT95KGEsYixjLGQpOm51bGx9aWYoWWUoYyl8fFhlKGMpKXJldHVybiBudWxsIT09ZT9udWxsOnUoYSxiLGMsZCxudWxsKTskZShhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIEkoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgUmU6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PVZlP3UoYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlIFNlOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxxKGIsYSxkLGUpO2Nhc2UgVGU6cmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsdihiLGEsZCxlKTtjYXNlIFVlOnJldHVybiBhPVxuYS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLHkoYixhLGQsZSl9aWYoWWUoZCl8fFhlKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLHUoYixhLGQsZSxudWxsKTskZShiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIEwoZSxnLG0sQSl7Zm9yKHZhciBoPW51bGwscj1udWxsLG49Zyx3PWc9MCxrPW51bGw7bnVsbCE9PW4mJnc8bS5sZW5ndGg7dysrKXtuLmluZGV4Pnc/KGs9bixuPW51bGwpOms9bi5zaWJsaW5nO3ZhciB4PUcoZSxuLG1bd10sQSk7aWYobnVsbD09PXgpe251bGw9PT1uJiYobj1rKTticmVha31hJiZuJiZudWxsPT09eC5hbHRlcm5hdGUmJmIoZSxuKTtnPWYoeCxnLHcpO251bGw9PT1yP2g9eDpyLnNpYmxpbmc9eDtyPXg7bj1rfWlmKHc9PT1tLmxlbmd0aClyZXR1cm4gYyhlLG4pLGg7aWYobnVsbD09PW4pe2Zvcig7dzxtLmxlbmd0aDt3KyspaWYobj16KGUsbVt3XSxBKSlnPWYobixnLHcpLG51bGw9PT1yP2g9bjpyLnNpYmxpbmc9bixyPW47cmV0dXJuIGh9Zm9yKG49XG5kKGUsbik7dzxtLmxlbmd0aDt3KyspaWYoaz1JKG4sZSx3LG1bd10sQSkpe2lmKGEmJm51bGwhPT1rLmFsdGVybmF0ZSluW1wiZGVsZXRlXCJdKG51bGw9PT1rLmtleT93Omsua2V5KTtnPWYoayxnLHcpO251bGw9PT1yP2g9azpyLnNpYmxpbmc9aztyPWt9YSYmbi5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gaH1mdW5jdGlvbiBOKGUsZyxtLEEpe3ZhciBoPVhlKG0pO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBoP0UoXCIxNTBcIik6dm9pZCAwO209aC5jYWxsKG0pO251bGw9PW0/RShcIjE1MVwiKTp2b2lkIDA7Zm9yKHZhciByPWg9bnVsbCxuPWcsdz1nPTAsaz1udWxsLHg9bS5uZXh0KCk7bnVsbCE9PW4mJiF4LmRvbmU7dysrLHg9bS5uZXh0KCkpe24uaW5kZXg+dz8oaz1uLG49bnVsbCk6az1uLnNpYmxpbmc7dmFyIEo9RyhlLG4seC52YWx1ZSxBKTtpZihudWxsPT09Sil7bnx8KG49ayk7YnJlYWt9YSYmbiYmbnVsbD09PUouYWx0ZXJuYXRlJiZiKGUsbik7Zz1mKEosXG5nLHcpO251bGw9PT1yP2g9SjpyLnNpYmxpbmc9SjtyPUo7bj1rfWlmKHguZG9uZSlyZXR1cm4gYyhlLG4pLGg7aWYobnVsbD09PW4pe2Zvcig7IXguZG9uZTt3KysseD1tLm5leHQoKSl4PXooZSx4LnZhbHVlLEEpLG51bGwhPT14JiYoZz1mKHgsZyx3KSxudWxsPT09cj9oPXg6ci5zaWJsaW5nPXgscj14KTtyZXR1cm4gaH1mb3Iobj1kKGUsbik7IXguZG9uZTt3KysseD1tLm5leHQoKSlpZih4PUkobixlLHcseC52YWx1ZSxBKSxudWxsIT09eCl7aWYoYSYmbnVsbCE9PXguYWx0ZXJuYXRlKW5bXCJkZWxldGVcIl0obnVsbD09PXgua2V5P3c6eC5rZXkpO2c9Zih4LGcsdyk7bnVsbD09PXI/aD14OnIuc2libGluZz14O3I9eH1hJiZuLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBofXJldHVybiBmdW5jdGlvbihhLGQsZixoKXtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1WZSYmbnVsbD09PWYua2V5JiYoZj1mLnByb3BzLmNoaWxkcmVuKTtcbnZhciBtPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobSlzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBSZTphOnt2YXIgcj1mLmtleTtmb3IobT1kO251bGwhPT1tOyl7aWYobS5rZXk9PT1yKWlmKDEwPT09bS50YWc/Zi50eXBlPT09VmU6bS50eXBlPT09Zi50eXBlKXtjKGEsbS5zaWJsaW5nKTtkPWUobSxmLnR5cGU9PT1WZT9mLnByb3BzLmNoaWxkcmVuOmYucHJvcHMsaCk7ZC5yZWY9WmUobSxmKTtkW1wicmV0dXJuXCJdPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsbSk7YnJlYWt9ZWxzZSBiKGEsbSk7bT1tLnNpYmxpbmd9Zi50eXBlPT09VmU/KGQ9dWUoZi5wcm9wcy5jaGlsZHJlbixhLmludGVybmFsQ29udGV4dFRhZyxoLGYua2V5KSxkW1wicmV0dXJuXCJdPWEsYT1kKTooaD10ZShmLGEuaW50ZXJuYWxDb250ZXh0VGFnLGgpLGgucmVmPVplKGQsZiksaFtcInJldHVyblwiXT1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSBTZTphOntmb3IobT1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09XG5tKWlmKDc9PT1kLnRhZyl7YyhhLGQuc2libGluZyk7ZD1lKGQsZixoKTtkW1wicmV0dXJuXCJdPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD13ZShmLGEuaW50ZXJuYWxDb250ZXh0VGFnLGgpO2RbXCJyZXR1cm5cIl09YTthPWR9cmV0dXJuIGcoYSk7Y2FzZSBUZTphOntpZihudWxsIT09ZClpZig5PT09ZC50YWcpe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLG51bGwsaCk7ZC50eXBlPWYudmFsdWU7ZFtcInJldHVyblwiXT1hO2E9ZDticmVhayBhfWVsc2UgYyhhLGQpO2Q9eGUoZixhLmludGVybmFsQ29udGV4dFRhZyxoKTtkLnR5cGU9Zi52YWx1ZTtkW1wicmV0dXJuXCJdPWE7YT1kfXJldHVybiBnKGEpO2Nhc2UgVWU6YTp7Zm9yKG09Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PW0paWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PVxuZi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10saCk7ZFtcInJldHVyblwiXT1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9eWUoZixhLmludGVybmFsQ29udGV4dFRhZyxoKTtkW1wicmV0dXJuXCJdPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmLGgpKTooYyhhLGQpLGQ9dmUoZixhLmludGVybmFsQ29udGV4dFRhZyxoKSksZFtcInJldHVyblwiXT1hLGE9ZCxnKGEpO2lmKFllKGYpKXJldHVybiBMKGEsZCxmLGgpO2lmKFhlKGYpKXJldHVybiBOKGEsZCxmLGgpO20mJiRlKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmKXN3aXRjaChhLnRhZyl7Y2FzZSAyOmNhc2UgMTpoPWEudHlwZSxFKFwiMTUyXCIsaC5kaXNwbGF5TmFtZXx8XG5oLm5hbWV8fFwiQ29tcG9uZW50XCIpfXJldHVybiBjKGEsZCl9fXZhciBiZj1hZighMCksY2Y9YWYoITEpO1xuZnVuY3Rpb24gZGYoYSxiLGMsZCxlKXtmdW5jdGlvbiBmKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2IuY2hpbGQ9bnVsbD09PWE/Y2YoYixudWxsLGMsZCk6YmYoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gZyhhLGIpe3ZhciBjPWIucmVmO251bGw9PT1jfHxhJiZhLnJlZj09PWN8fChiLmVmZmVjdFRhZ3w9MTI4KX1mdW5jdGlvbiBoKGEsYixjLGQpe2coYSxiKTtpZighYylyZXR1cm4gZCYmcmUoYiwhMSkscShhLGIpO2M9Yi5zdGF0ZU5vZGU7aWQuY3VycmVudD1iO3ZhciBlPWMucmVuZGVyKCk7Yi5lZmZlY3RUYWd8PTE7ZihhLGIsZSk7Yi5tZW1vaXplZFN0YXRlPWMuc3RhdGU7Yi5tZW1vaXplZFByb3BzPWMucHJvcHM7ZCYmcmUoYiwhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gayhhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P29lKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJm9lKGEsXG5iLmNvbnRleHQsITEpO0koYSxiLmNvbnRhaW5lckluZm8pfWZ1bmN0aW9uIHEoYSxiKXtudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQ/RShcIjE1M1wiKTp2b2lkIDA7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDt2YXIgYz1zZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpO2IuY2hpbGQ9Yztmb3IoY1tcInJldHVyblwiXT1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPXNlKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSksY1tcInJldHVyblwiXT1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfWZ1bmN0aW9uIHYoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMzprKGIpO2JyZWFrO2Nhc2UgMjpxZShiKTticmVhaztjYXNlIDQ6SShiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pfXJldHVybiBudWxsfXZhciB5PWEuc2hvdWxkU2V0VGV4dENvbnRlbnQsdT1hLnVzZVN5bmNTY2hlZHVsaW5nLHo9YS5zaG91bGREZXByaW9yaXRpemVTdWJ0cmVlLFxuRz1iLnB1c2hIb3N0Q29udGV4dCxJPWIucHVzaEhvc3RDb250YWluZXIsTD1jLmVudGVySHlkcmF0aW9uU3RhdGUsTj1jLnJlc2V0SHlkcmF0aW9uU3RhdGUsSj1jLnRyeVRvQ2xhaW1OZXh0SHlkcmF0YWJsZUluc3RhbmNlO2E9TGUoZCxlLGZ1bmN0aW9uKGEsYil7YS5tZW1vaXplZFByb3BzPWJ9LGZ1bmN0aW9uKGEsYil7YS5tZW1vaXplZFN0YXRlPWJ9KTt2YXIgdz1hLmFkb3B0Q2xhc3NJbnN0YW5jZSxtPWEuY29uc3RydWN0Q2xhc3NJbnN0YW5jZSxBPWEubW91bnRDbGFzc0luc3RhbmNlLE9iPWEudXBkYXRlQ2xhc3NJbnN0YW5jZTtyZXR1cm57YmVnaW5Xb3JrOmZ1bmN0aW9uKGEsYixjKXtpZigwPT09Yi5leHBpcmF0aW9uVGltZXx8Yi5leHBpcmF0aW9uVGltZT5jKXJldHVybiB2KGEsYik7c3dpdGNoKGIudGFnKXtjYXNlIDA6bnVsbCE9PWE/RShcIjE1NVwiKTp2b2lkIDA7dmFyIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMscj1rZShiKTtyPW1lKGIscik7ZD1kKGUscik7Yi5lZmZlY3RUYWd8PVxuMTtcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5yZW5kZXI/KGIudGFnPTIsZT1xZShiKSx3KGIsZCksQShiLGMpLGI9aChhLGIsITAsZSkpOihiLnRhZz0xLGYoYSxiLGQpLGIubWVtb2l6ZWRQcm9wcz1lLGI9Yi5jaGlsZCk7cmV0dXJuIGI7Y2FzZSAxOmE6e2U9Yi50eXBlO2M9Yi5wZW5kaW5nUHJvcHM7ZD1iLm1lbW9pemVkUHJvcHM7aWYoWC5jdXJyZW50KW51bGw9PT1jJiYoYz1kKTtlbHNlIGlmKG51bGw9PT1jfHxkPT09Yyl7Yj1xKGEsYik7YnJlYWsgYX1kPWtlKGIpO2Q9bWUoYixkKTtlPWUoYyxkKTtiLmVmZmVjdFRhZ3w9MTtmKGEsYixlKTtiLm1lbW9pemVkUHJvcHM9YztiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSAyOnJldHVybiBlPXFlKGIpLGQ9dm9pZCAwLG51bGw9PT1hP2Iuc3RhdGVOb2RlP0UoXCIxNTNcIik6KG0oYixiLnBlbmRpbmdQcm9wcyksQShiLGMpLGQ9ITApOmQ9T2IoYSxiLGMpLGgoYSxiLGQsZSk7Y2FzZSAzOnJldHVybiBrKGIpLFxuZT1iLnVwZGF0ZVF1ZXVlLG51bGwhPT1lPyhkPWIubWVtb2l6ZWRTdGF0ZSxlPUplKGEsYixlLG51bGwsbnVsbCxjKSxkPT09ZT8oTigpLGI9cShhLGIpKTooZD1lLmVsZW1lbnQscj1iLnN0YXRlTm9kZSwobnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKSYmci5oeWRyYXRlJiZMKGIpPyhiLmVmZmVjdFRhZ3w9MixiLmNoaWxkPWNmKGIsbnVsbCxkLGMpKTooTigpLGYoYSxiLGQpKSxiLm1lbW9pemVkU3RhdGU9ZSxiPWIuY2hpbGQpKTooTigpLGI9cShhLGIpKSxiO2Nhc2UgNTpHKGIpO251bGw9PT1hJiZKKGIpO2U9Yi50eXBlO3ZhciBuPWIubWVtb2l6ZWRQcm9wcztkPWIucGVuZGluZ1Byb3BzO251bGw9PT1kJiYoZD1uLG51bGw9PT1kP0UoXCIxNTRcIik6dm9pZCAwKTtyPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsO1guY3VycmVudHx8bnVsbCE9PWQmJm4hPT1kPyhuPWQuY2hpbGRyZW4seShlLGQpP249bnVsbDpyJiZ5KGUscikmJihiLmVmZmVjdFRhZ3w9MTYpLGcoYSxiKSxcbjIxNDc0ODM2NDchPT1jJiYhdSYmeihlLGQpPyhiLmV4cGlyYXRpb25UaW1lPTIxNDc0ODM2NDcsYj1udWxsKTooZihhLGIsbiksYi5tZW1vaXplZFByb3BzPWQsYj1iLmNoaWxkKSk6Yj1xKGEsYik7cmV0dXJuIGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmSihiKSxhPWIucGVuZGluZ1Byb3BzLG51bGw9PT1hJiYoYT1iLm1lbW9pemVkUHJvcHMpLGIubWVtb2l6ZWRQcm9wcz1hLG51bGw7Y2FzZSA4OmIudGFnPTc7Y2FzZSA3OmU9Yi5wZW5kaW5nUHJvcHM7aWYoWC5jdXJyZW50KW51bGw9PT1lJiYoZT1hJiZhLm1lbW9pemVkUHJvcHMsbnVsbD09PWU/RShcIjE1NFwiKTp2b2lkIDApO2Vsc2UgaWYobnVsbD09PWV8fGIubWVtb2l6ZWRQcm9wcz09PWUpZT1iLm1lbW9pemVkUHJvcHM7ZD1lLmNoaWxkcmVuO2Iuc3RhdGVOb2RlPW51bGw9PT1hP2NmKGIsYi5zdGF0ZU5vZGUsZCxjKTpiZihiLGIuc3RhdGVOb2RlLGQsYyk7Yi5tZW1vaXplZFByb3BzPWU7cmV0dXJuIGIuc3RhdGVOb2RlO1xuY2FzZSA5OnJldHVybiBudWxsO2Nhc2UgNDphOntJKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7ZT1iLnBlbmRpbmdQcm9wcztpZihYLmN1cnJlbnQpbnVsbD09PWUmJihlPWEmJmEubWVtb2l6ZWRQcm9wcyxudWxsPT1lP0UoXCIxNTRcIik6dm9pZCAwKTtlbHNlIGlmKG51bGw9PT1lfHxiLm1lbW9pemVkUHJvcHM9PT1lKXtiPXEoYSxiKTticmVhayBhfW51bGw9PT1hP2IuY2hpbGQ9YmYoYixudWxsLGUsYyk6ZihhLGIsZSk7Yi5tZW1vaXplZFByb3BzPWU7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgMTA6YTp7Yz1iLnBlbmRpbmdQcm9wcztpZihYLmN1cnJlbnQpbnVsbD09PWMmJihjPWIubWVtb2l6ZWRQcm9wcyk7ZWxzZSBpZihudWxsPT09Y3x8Yi5tZW1vaXplZFByb3BzPT09Yyl7Yj1xKGEsYik7YnJlYWsgYX1mKGEsYixjKTtiLm1lbW9pemVkUHJvcHM9YztiPWIuY2hpbGR9cmV0dXJuIGI7ZGVmYXVsdDpFKFwiMTU2XCIpfX0sYmVnaW5GYWlsZWRXb3JrOmZ1bmN0aW9uKGEsYixcbmMpe3N3aXRjaChiLnRhZyl7Y2FzZSAyOnFlKGIpO2JyZWFrO2Nhc2UgMzprKGIpO2JyZWFrO2RlZmF1bHQ6RShcIjE1N1wiKX1iLmVmZmVjdFRhZ3w9NjQ7bnVsbD09PWE/Yi5jaGlsZD1udWxsOmIuY2hpbGQhPT1hLmNoaWxkJiYoYi5jaGlsZD1hLmNoaWxkKTtpZigwPT09Yi5leHBpcmF0aW9uVGltZXx8Yi5leHBpcmF0aW9uVGltZT5jKXJldHVybiB2KGEsYik7Yi5maXJzdEVmZmVjdD1udWxsO2IubGFzdEVmZmVjdD1udWxsO2IuY2hpbGQ9bnVsbD09PWE/Y2YoYixudWxsLG51bGwsYyk6YmYoYixhLmNoaWxkLG51bGwsYyk7Mj09PWIudGFnJiYoYT1iLnN0YXRlTm9kZSxiLm1lbW9pemVkUHJvcHM9YS5wcm9wcyxiLm1lbW9pemVkU3RhdGU9YS5zdGF0ZSk7cmV0dXJuIGIuY2hpbGR9fX1cbmZ1bmN0aW9uIGVmKGEsYixjKXtmdW5jdGlvbiBkKGEpe2EuZWZmZWN0VGFnfD00fXZhciBlPWEuY3JlYXRlSW5zdGFuY2UsZj1hLmNyZWF0ZVRleHRJbnN0YW5jZSxnPWEuYXBwZW5kSW5pdGlhbENoaWxkLGg9YS5maW5hbGl6ZUluaXRpYWxDaGlsZHJlbixrPWEucHJlcGFyZVVwZGF0ZSxxPWEucGVyc2lzdGVuY2Usdj1iLmdldFJvb3RIb3N0Q29udGFpbmVyLHk9Yi5wb3BIb3N0Q29udGV4dCx1PWIuZ2V0SG9zdENvbnRleHQsej1iLnBvcEhvc3RDb250YWluZXIsRz1jLnByZXBhcmVUb0h5ZHJhdGVIb3N0SW5zdGFuY2UsST1jLnByZXBhcmVUb0h5ZHJhdGVIb3N0VGV4dEluc3RhbmNlLEw9Yy5wb3BIeWRyYXRpb25TdGF0ZSxOPXZvaWQgMCxKPXZvaWQgMCx3PXZvaWQgMDthLm11dGF0aW9uPyhOPWZ1bmN0aW9uKCl7fSxKPWZ1bmN0aW9uKGEsYixjKXsoYi51cGRhdGVRdWV1ZT1jKSYmZChiKX0sdz1mdW5jdGlvbihhLGIsYyxlKXtjIT09ZSYmZChiKX0pOnE/RShcIjIzNVwiKTpFKFwiMjM2XCIpO1xucmV0dXJue2NvbXBsZXRlV29yazpmdW5jdGlvbihhLGIsYyl7dmFyIG09Yi5wZW5kaW5nUHJvcHM7aWYobnVsbD09PW0pbT1iLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigyMTQ3NDgzNjQ3IT09Yi5leHBpcmF0aW9uVGltZXx8MjE0NzQ4MzY0Nz09PWMpYi5wZW5kaW5nUHJvcHM9bnVsbDtzd2l0Y2goYi50YWcpe2Nhc2UgMTpyZXR1cm4gbnVsbDtjYXNlIDI6cmV0dXJuIG5lKGIpLG51bGw7Y2FzZSAzOnooYik7VihYLGIpO1YoaWUsYik7bT1iLnN0YXRlTm9kZTttLnBlbmRpbmdDb250ZXh0JiYobS5jb250ZXh0PW0ucGVuZGluZ0NvbnRleHQsbS5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09YXx8bnVsbD09PWEuY2hpbGQpTChiKSxiLmVmZmVjdFRhZyY9LTM7TihiKTtyZXR1cm4gbnVsbDtjYXNlIDU6eShiKTtjPXYoKTt2YXIgQT1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKXt2YXIgcD1hLm1lbW9pemVkUHJvcHMscT1iLnN0YXRlTm9kZSx4PXUoKTtxPVxuayhxLEEscCxtLGMseCk7SihhLGIscSxBLHAsbSxjKTthLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9ZWxzZXtpZighbSlyZXR1cm4gbnVsbD09PWIuc3RhdGVOb2RlP0UoXCIxNjZcIik6dm9pZCAwLG51bGw7YT11KCk7aWYoTChiKSlHKGIsYyxhKSYmZChiKTtlbHNle2E9ZShBLG0sYyxhLGIpO2E6Zm9yKHA9Yi5jaGlsZDtudWxsIT09cDspe2lmKDU9PT1wLnRhZ3x8Nj09PXAudGFnKWcoYSxwLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09cC50YWcmJm51bGwhPT1wLmNoaWxkKXtwLmNoaWxkW1wicmV0dXJuXCJdPXA7cD1wLmNoaWxkO2NvbnRpbnVlfWlmKHA9PT1iKWJyZWFrO2Zvcig7bnVsbD09PXAuc2libGluZzspe2lmKG51bGw9PT1wW1wicmV0dXJuXCJdfHxwW1wicmV0dXJuXCJdPT09YilicmVhayBhO3A9cFtcInJldHVyblwiXX1wLnNpYmxpbmdbXCJyZXR1cm5cIl09cFtcInJldHVyblwiXTtwPXAuc2libGluZ31oKGEsQSxtLGMpJiZkKGIpO2Iuc3RhdGVOb2RlPWF9bnVsbCE9PWIucmVmJiZcbihiLmVmZmVjdFRhZ3w9MTI4KX1yZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpdyhhLGIsYS5tZW1vaXplZFByb3BzLG0pO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBtKXJldHVybiBudWxsPT09Yi5zdGF0ZU5vZGU/RShcIjE2NlwiKTp2b2lkIDAsbnVsbDthPXYoKTtjPXUoKTtMKGIpP0koYikmJmQoYik6Yi5zdGF0ZU5vZGU9ZihtLGEsYyxiKX1yZXR1cm4gbnVsbDtjYXNlIDc6KG09Yi5tZW1vaXplZFByb3BzKT92b2lkIDA6RShcIjE2NVwiKTtiLnRhZz04O0E9W107YTpmb3IoKHA9Yi5zdGF0ZU5vZGUpJiYocFtcInJldHVyblwiXT1iKTtudWxsIT09cDspe2lmKDU9PT1wLnRhZ3x8Nj09PXAudGFnfHw0PT09cC50YWcpRShcIjI0N1wiKTtlbHNlIGlmKDk9PT1wLnRhZylBLnB1c2gocC50eXBlKTtlbHNlIGlmKG51bGwhPT1wLmNoaWxkKXtwLmNoaWxkW1wicmV0dXJuXCJdPXA7cD1wLmNoaWxkO2NvbnRpbnVlfWZvcig7bnVsbD09PXAuc2libGluZzspe2lmKG51bGw9PT1cbnBbXCJyZXR1cm5cIl18fHBbXCJyZXR1cm5cIl09PT1iKWJyZWFrIGE7cD1wW1wicmV0dXJuXCJdfXAuc2libGluZ1tcInJldHVyblwiXT1wW1wicmV0dXJuXCJdO3A9cC5zaWJsaW5nfXA9bS5oYW5kbGVyO209cChtLnByb3BzLEEpO2IuY2hpbGQ9YmYoYixudWxsIT09YT9hLmNoaWxkOm51bGwsbSxjKTtyZXR1cm4gYi5jaGlsZDtjYXNlIDg6cmV0dXJuIGIudGFnPTcsbnVsbDtjYXNlIDk6cmV0dXJuIG51bGw7Y2FzZSAxMDpyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIHooYiksTihiKSxudWxsO2Nhc2UgMDpFKFwiMTY3XCIpO2RlZmF1bHQ6RShcIjE1NlwiKX19fX1cbmZ1bmN0aW9uIGZmKGEsYil7ZnVuY3Rpb24gYyhhKXt2YXIgYz1hLnJlZjtpZihudWxsIT09Yyl0cnl7YyhudWxsKX1jYXRjaChBKXtiKGEsQSl9fWZ1bmN0aW9uIGQoYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIEVlJiZFZShhKTtzd2l0Y2goYS50YWcpe2Nhc2UgMjpjKGEpO3ZhciBkPWEuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudFdpbGxVbm1vdW50KXRyeXtkLnByb3BzPWEubWVtb2l6ZWRQcm9wcyxkLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxkLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goQSl7YihhLEEpfWJyZWFrO2Nhc2UgNTpjKGEpO2JyZWFrO2Nhc2UgNzplKGEuc3RhdGVOb2RlKTticmVhaztjYXNlIDQ6ayYmZyhhKX19ZnVuY3Rpb24gZShhKXtmb3IodmFyIGI9YTs7KWlmKGQoYiksbnVsbD09PWIuY2hpbGR8fGsmJjQ9PT1iLnRhZyl7aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWJbXCJyZXR1cm5cIl18fFxuYltcInJldHVyblwiXT09PWEpcmV0dXJuO2I9YltcInJldHVyblwiXX1iLnNpYmxpbmdbXCJyZXR1cm5cIl09YltcInJldHVyblwiXTtiPWIuc2libGluZ31lbHNlIGIuY2hpbGRbXCJyZXR1cm5cIl09YixiPWIuY2hpbGR9ZnVuY3Rpb24gZihhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31mdW5jdGlvbiBnKGEpe2Zvcih2YXIgYj1hLGM9ITEsZj12b2lkIDAsZz12b2lkIDA7Oyl7aWYoIWMpe2M9YltcInJldHVyblwiXTthOmZvcig7Oyl7bnVsbD09PWM/RShcIjE2MFwiKTp2b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6Zj1jLnN0YXRlTm9kZTtnPSExO2JyZWFrIGE7Y2FzZSAzOmY9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGE7Y2FzZSA0OmY9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGF9Yz1jW1wicmV0dXJuXCJdfWM9ITB9aWYoNT09PWIudGFnfHw2PT09Yi50YWcpZShiKSxnP0ooZixiLnN0YXRlTm9kZSk6TihmLGIuc3RhdGVOb2RlKTtcbmVsc2UgaWYoND09PWIudGFnP2Y9Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpkKGIpLG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkW1wicmV0dXJuXCJdPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iW1wicmV0dXJuXCJdfHxiW1wicmV0dXJuXCJdPT09YSlyZXR1cm47Yj1iW1wicmV0dXJuXCJdOzQ9PT1iLnRhZyYmKGM9ITEpfWIuc2libGluZ1tcInJldHVyblwiXT1iW1wicmV0dXJuXCJdO2I9Yi5zaWJsaW5nfX12YXIgaD1hLmdldFB1YmxpY0luc3RhbmNlLGs9YS5tdXRhdGlvbjthPWEucGVyc2lzdGVuY2U7a3x8KGE/RShcIjIzNVwiKTpFKFwiMjM2XCIpKTt2YXIgcT1rLmNvbW1pdE1vdW50LHY9ay5jb21taXRVcGRhdGUseT1rLnJlc2V0VGV4dENvbnRlbnQsdT1rLmNvbW1pdFRleHRVcGRhdGUsej1rLmFwcGVuZENoaWxkLEc9ay5hcHBlbmRDaGlsZFRvQ29udGFpbmVyLEk9ay5pbnNlcnRCZWZvcmUsTD1rLmluc2VydEluQ29udGFpbmVyQmVmb3JlLFxuTj1rLnJlbW92ZUNoaWxkLEo9ay5yZW1vdmVDaGlsZEZyb21Db250YWluZXI7cmV0dXJue2NvbW1pdFJlc2V0VGV4dENvbnRlbnQ6ZnVuY3Rpb24oYSl7eShhLnN0YXRlTm9kZSl9LGNvbW1pdFBsYWNlbWVudDpmdW5jdGlvbihhKXthOntmb3IodmFyIGI9YVtcInJldHVyblwiXTtudWxsIT09Yjspe2lmKGYoYikpe3ZhciBjPWI7YnJlYWsgYX1iPWJbXCJyZXR1cm5cIl19RShcIjE2MFwiKTtjPXZvaWQgMH12YXIgZD1iPXZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpiPWMuc3RhdGVOb2RlO2Q9ITE7YnJlYWs7Y2FzZSAzOmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OkUoXCIxNjFcIil9Yy5lZmZlY3RUYWcmMTYmJih5KGIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jW1wicmV0dXJuXCJdfHxmKGNbXCJyZXR1cm5cIl0pKXtjPVxubnVsbDticmVhayBhfWM9Y1tcInJldHVyblwiXX1jLnNpYmxpbmdbXCJyZXR1cm5cIl09Y1tcInJldHVyblwiXTtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyYyKWNvbnRpbnVlIGI7aWYobnVsbD09PWMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZFtcInJldHVyblwiXT1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWZvcih2YXIgZT1hOzspe2lmKDU9PT1lLnRhZ3x8Nj09PWUudGFnKWM/ZD9MKGIsZS5zdGF0ZU5vZGUsYyk6SShiLGUuc3RhdGVOb2RlLGMpOmQ/RyhiLGUuc3RhdGVOb2RlKTp6KGIsZS5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWUudGFnJiZudWxsIT09ZS5jaGlsZCl7ZS5jaGlsZFtcInJldHVyblwiXT1lO2U9ZS5jaGlsZDtjb250aW51ZX1pZihlPT09YSlicmVhaztmb3IoO251bGw9PT1lLnNpYmxpbmc7KXtpZihudWxsPT09ZVtcInJldHVyblwiXXx8ZVtcInJldHVyblwiXT09PVxuYSlyZXR1cm47ZT1lW1wicmV0dXJuXCJdfWUuc2libGluZ1tcInJldHVyblwiXT1lW1wicmV0dXJuXCJdO2U9ZS5zaWJsaW5nfX0sY29tbWl0RGVsZXRpb246ZnVuY3Rpb24oYSl7ZyhhKTthW1wicmV0dXJuXCJdPW51bGw7YS5jaGlsZD1udWxsO2EuYWx0ZXJuYXRlJiYoYS5hbHRlcm5hdGUuY2hpbGQ9bnVsbCxhLmFsdGVybmF0ZVtcInJldHVyblwiXT1udWxsKX0sY29tbWl0V29yazpmdW5jdGlvbihhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAyOmJyZWFrO2Nhc2UgNTp2YXIgYz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXt2YXIgZD1iLm1lbW9pemVkUHJvcHM7YT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDt2YXIgZT1iLnR5cGUsZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtudWxsIT09ZiYmdihjLGYsZSxhLGQsYil9YnJlYWs7Y2FzZSA2Om51bGw9PT1iLnN0YXRlTm9kZT9FKFwiMTYyXCIpOnZvaWQgMDtjPWIubWVtb2l6ZWRQcm9wczt1KGIuc3RhdGVOb2RlLG51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpcbmMsYyk7YnJlYWs7Y2FzZSAzOmJyZWFrO2RlZmF1bHQ6RShcIjE2M1wiKX19LGNvbW1pdExpZmVDeWNsZXM6ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMjp2YXIgYz1iLnN0YXRlTm9kZTtpZihiLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1hKWMucHJvcHM9Yi5tZW1vaXplZFByb3BzLGMuc3RhdGU9Yi5tZW1vaXplZFN0YXRlLGMuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBkPWEubWVtb2l6ZWRQcm9wczthPWEubWVtb2l6ZWRTdGF0ZTtjLnByb3BzPWIubWVtb2l6ZWRQcm9wcztjLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZTtjLmNvbXBvbmVudERpZFVwZGF0ZShkLGEpfWI9Yi51cGRhdGVRdWV1ZTtudWxsIT09YiYmS2UoYixjKTticmVhaztjYXNlIDM6Yz1iLnVwZGF0ZVF1ZXVlO251bGwhPT1jJiZLZShjLG51bGwhPT1iLmNoaWxkP2IuY2hpbGQuc3RhdGVOb2RlOm51bGwpO2JyZWFrO2Nhc2UgNTpjPWIuc3RhdGVOb2RlO251bGw9PT1hJiZiLmVmZmVjdFRhZyY0JiZxKGMsXG5iLnR5cGUsYi5tZW1vaXplZFByb3BzLGIpO2JyZWFrO2Nhc2UgNjpicmVhaztjYXNlIDQ6YnJlYWs7ZGVmYXVsdDpFKFwiMTYzXCIpfX0sY29tbWl0QXR0YWNoUmVmOmZ1bmN0aW9uKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKXt2YXIgYz1hLnN0YXRlTm9kZTtzd2l0Y2goYS50YWcpe2Nhc2UgNTpiKGgoYykpO2JyZWFrO2RlZmF1bHQ6YihjKX19fSxjb21taXREZXRhY2hSZWY6ZnVuY3Rpb24oYSl7YT1hLnJlZjtudWxsIT09YSYmYShudWxsKX19fXZhciBnZj17fTtcbmZ1bmN0aW9uIGhmKGEpe2Z1bmN0aW9uIGIoYSl7YT09PWdmP0UoXCIxNzRcIik6dm9pZCAwO3JldHVybiBhfXZhciBjPWEuZ2V0Q2hpbGRIb3N0Q29udGV4dCxkPWEuZ2V0Um9vdEhvc3RDb250ZXh0LGU9e2N1cnJlbnQ6Z2Z9LGY9e2N1cnJlbnQ6Z2Z9LGc9e2N1cnJlbnQ6Z2Z9O3JldHVybntnZXRIb3N0Q29udGV4dDpmdW5jdGlvbigpe3JldHVybiBiKGUuY3VycmVudCl9LGdldFJvb3RIb3N0Q29udGFpbmVyOmZ1bmN0aW9uKCl7cmV0dXJuIGIoZy5jdXJyZW50KX0scG9wSG9zdENvbnRhaW5lcjpmdW5jdGlvbihhKXtWKGUsYSk7VihmLGEpO1YoZyxhKX0scG9wSG9zdENvbnRleHQ6ZnVuY3Rpb24oYSl7Zi5jdXJyZW50PT09YSYmKFYoZSxhKSxWKGYsYSkpfSxwdXNoSG9zdENvbnRhaW5lcjpmdW5jdGlvbihhLGIpe1coZyxiLGEpO2I9ZChiKTtXKGYsYSxhKTtXKGUsYixhKX0scHVzaEhvc3RDb250ZXh0OmZ1bmN0aW9uKGEpe3ZhciBkPWIoZy5jdXJyZW50KSxoPWIoZS5jdXJyZW50KTtcbmQ9YyhoLGEudHlwZSxkKTtoIT09ZCYmKFcoZixhLGEpLFcoZSxkLGEpKX0scmVzZXRIb3N0Q29udGFpbmVyOmZ1bmN0aW9uKCl7ZS5jdXJyZW50PWdmO2cuY3VycmVudD1nZn19fVxuZnVuY3Rpb24gamYoYSl7ZnVuY3Rpb24gYihhLGIpe3ZhciBjPW5ldyBZKDUsbnVsbCwwKTtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjW1wicmV0dXJuXCJdPWE7Yy5lZmZlY3RUYWc9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIGMoYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTpyZXR1cm4gYj1mKGIsYS50eXBlLGEucGVuZGluZ1Byb3BzKSxudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPWcoYixhLnBlbmRpbmdQcm9wcyksbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIGQoYSl7Zm9yKGE9YVtcInJldHVyblwiXTtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWc7KWE9YVtcInJldHVyblwiXTt5PWF9dmFyIGU9YS5zaG91bGRTZXRUZXh0Q29udGVudDtcbmE9YS5oeWRyYXRpb247aWYoIWEpcmV0dXJue2VudGVySHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4hMX0scmVzZXRIeWRyYXRpb25TdGF0ZTpmdW5jdGlvbigpe30sdHJ5VG9DbGFpbU5leHRIeWRyYXRhYmxlSW5zdGFuY2U6ZnVuY3Rpb24oKXt9LHByZXBhcmVUb0h5ZHJhdGVIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oKXtFKFwiMTc1XCIpfSxwcmVwYXJlVG9IeWRyYXRlSG9zdFRleHRJbnN0YW5jZTpmdW5jdGlvbigpe0UoXCIxNzZcIil9LHBvcEh5ZHJhdGlvblN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuITF9fTt2YXIgZj1hLmNhbkh5ZHJhdGVJbnN0YW5jZSxnPWEuY2FuSHlkcmF0ZVRleHRJbnN0YW5jZSxoPWEuZ2V0TmV4dEh5ZHJhdGFibGVTaWJsaW5nLGs9YS5nZXRGaXJzdEh5ZHJhdGFibGVDaGlsZCxxPWEuaHlkcmF0ZUluc3RhbmNlLHY9YS5oeWRyYXRlVGV4dEluc3RhbmNlLHk9bnVsbCx1PW51bGwsej0hMTtyZXR1cm57ZW50ZXJIeWRyYXRpb25TdGF0ZTpmdW5jdGlvbihhKXt1PVxuayhhLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTt5PWE7cmV0dXJuIHo9ITB9LHJlc2V0SHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oKXt1PXk9bnVsbDt6PSExfSx0cnlUb0NsYWltTmV4dEh5ZHJhdGFibGVJbnN0YW5jZTpmdW5jdGlvbihhKXtpZih6KXt2YXIgZD11O2lmKGQpe2lmKCFjKGEsZCkpe2Q9aChkKTtpZighZHx8IWMoYSxkKSl7YS5lZmZlY3RUYWd8PTI7ej0hMTt5PWE7cmV0dXJufWIoeSx1KX15PWE7dT1rKGQpfWVsc2UgYS5lZmZlY3RUYWd8PTIsej0hMSx5PWF9fSxwcmVwYXJlVG9IeWRyYXRlSG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEsYixjKXtiPXEoYS5zdGF0ZU5vZGUsYS50eXBlLGEubWVtb2l6ZWRQcm9wcyxiLGMsYSk7YS51cGRhdGVRdWV1ZT1iO3JldHVybiBudWxsIT09Yj8hMDohMX0scHJlcGFyZVRvSHlkcmF0ZUhvc3RUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYS5zdGF0ZU5vZGUsYS5tZW1vaXplZFByb3BzLGEpfSxwb3BIeWRyYXRpb25TdGF0ZTpmdW5jdGlvbihhKXtpZihhIT09XG55KXJldHVybiExO2lmKCF6KXJldHVybiBkKGEpLHo9ITAsITE7dmFyIGM9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1jJiZcImJvZHlcIiE9PWMmJiFlKGMsYS5tZW1vaXplZFByb3BzKSlmb3IoYz11O2M7KWIoYSxjKSxjPWgoYyk7ZChhKTt1PXk/aChhLnN0YXRlTm9kZSk6bnVsbDtyZXR1cm4hMH19fVxuZnVuY3Rpb24ga2YoYSl7ZnVuY3Rpb24gYihhKXtRYj1qYT0hMDt2YXIgYj1hLnN0YXRlTm9kZTtiLmN1cnJlbnQ9PT1hP0UoXCIxNzdcIik6dm9pZCAwO2IuaXNSZWFkeUZvckNvbW1pdD0hMTtpZC5jdXJyZW50PW51bGw7aWYoMTxhLmVmZmVjdFRhZylpZihudWxsIT09YS5sYXN0RWZmZWN0KXthLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hO3ZhciBjPWEuZmlyc3RFZmZlY3R9ZWxzZSBjPWE7ZWxzZSBjPWEuZmlyc3RFZmZlY3Q7eWcoKTtmb3IodD1jO251bGwhPT10Oyl7dmFyIGQ9ITEsZT12b2lkIDA7dHJ5e2Zvcig7bnVsbCE9PXQ7KXt2YXIgZj10LmVmZmVjdFRhZztmJjE2JiZ6Zyh0KTtpZihmJjEyOCl7dmFyIGc9dC5hbHRlcm5hdGU7bnVsbCE9PWcmJkFnKGcpfXN3aXRjaChmJi0yNDIpe2Nhc2UgMjpOZSh0KTt0LmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2Ok5lKHQpO3QuZWZmZWN0VGFnJj0tMztPZSh0LmFsdGVybmF0ZSx0KTticmVhaztjYXNlIDQ6T2UodC5hbHRlcm5hdGUsXG50KTticmVhaztjYXNlIDg6U2M9ITAsQmcodCksU2M9ITF9dD10Lm5leHRFZmZlY3R9fWNhdGNoKFRjKXtkPSEwLGU9VGN9ZCYmKG51bGw9PT10P0UoXCIxNzhcIik6dm9pZCAwLGgodCxlKSxudWxsIT09dCYmKHQ9dC5uZXh0RWZmZWN0KSl9Q2coKTtiLmN1cnJlbnQ9YTtmb3IodD1jO251bGwhPT10Oyl7Yz0hMTtkPXZvaWQgMDt0cnl7Zm9yKDtudWxsIT09dDspe3ZhciBrPXQuZWZmZWN0VGFnO2smMzYmJkRnKHQuYWx0ZXJuYXRlLHQpO2smMTI4JiZFZyh0KTtpZihrJjY0KXN3aXRjaChlPXQsZj12b2lkIDAsbnVsbCE9PVImJihmPVIuZ2V0KGUpLFJbXCJkZWxldGVcIl0oZSksbnVsbD09ZiYmbnVsbCE9PWUuYWx0ZXJuYXRlJiYoZT1lLmFsdGVybmF0ZSxmPVIuZ2V0KGUpLFJbXCJkZWxldGVcIl0oZSkpKSxudWxsPT1mP0UoXCIxODRcIik6dm9pZCAwLGUudGFnKXtjYXNlIDI6ZS5zdGF0ZU5vZGUuY29tcG9uZW50RGlkQ2F0Y2goZi5lcnJvcix7Y29tcG9uZW50U3RhY2s6Zi5jb21wb25lbnRTdGFja30pO1xuYnJlYWs7Y2FzZSAzOm51bGw9PT1jYSYmKGNhPWYuZXJyb3IpO2JyZWFrO2RlZmF1bHQ6RShcIjE1N1wiKX12YXIgUWM9dC5uZXh0RWZmZWN0O3QubmV4dEVmZmVjdD1udWxsO3Q9UWN9fWNhdGNoKFRjKXtjPSEwLGQ9VGN9YyYmKG51bGw9PT10P0UoXCIxNzhcIik6dm9pZCAwLGgodCxkKSxudWxsIT09dCYmKHQ9dC5uZXh0RWZmZWN0KSl9amE9UWI9ITE7XCJmdW5jdGlvblwiPT09dHlwZW9mIERlJiZEZShhLnN0YXRlTm9kZSk7aGEmJihoYS5mb3JFYWNoKEcpLGhhPW51bGwpO251bGwhPT1jYSYmKGE9Y2EsY2E9bnVsbCxPYihhKSk7Yj1iLmN1cnJlbnQuZXhwaXJhdGlvblRpbWU7MD09PWImJihxYT1SPW51bGwpO3JldHVybiBifWZ1bmN0aW9uIGMoYSl7Zm9yKDs7KXt2YXIgYj1GZyhhLmFsdGVybmF0ZSxhLEgpLGM9YVtcInJldHVyblwiXSxkPWEuc2libGluZzt2YXIgZT1hO2lmKDIxNDc0ODM2NDc9PT1IfHwyMTQ3NDgzNjQ3IT09ZS5leHBpcmF0aW9uVGltZSl7aWYoMiE9PWUudGFnJiYzIT09XG5lLnRhZyl2YXIgZj0wO2Vsc2UgZj1lLnVwZGF0ZVF1ZXVlLGY9bnVsbD09PWY/MDpmLmV4cGlyYXRpb25UaW1lO2Zvcih2YXIgZz1lLmNoaWxkO251bGwhPT1nOykwIT09Zy5leHBpcmF0aW9uVGltZSYmKDA9PT1mfHxmPmcuZXhwaXJhdGlvblRpbWUpJiYoZj1nLmV4cGlyYXRpb25UaW1lKSxnPWcuc2libGluZztlLmV4cGlyYXRpb25UaW1lPWZ9aWYobnVsbCE9PWIpcmV0dXJuIGI7bnVsbCE9PWMmJihudWxsPT09Yy5maXJzdEVmZmVjdCYmKGMuZmlyc3RFZmZlY3Q9YS5maXJzdEVmZmVjdCksbnVsbCE9PWEubGFzdEVmZmVjdCYmKG51bGwhPT1jLmxhc3RFZmZlY3QmJihjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxjLmxhc3RFZmZlY3Q9YS5sYXN0RWZmZWN0KSwxPGEuZWZmZWN0VGFnJiYobnVsbCE9PWMubGFzdEVmZmVjdD9jLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hOmMuZmlyc3RFZmZlY3Q9YSxjLmxhc3RFZmZlY3Q9YSkpO2lmKG51bGwhPT1kKXJldHVybiBkO1xuaWYobnVsbCE9PWMpYT1jO2Vsc2V7YS5zdGF0ZU5vZGUuaXNSZWFkeUZvckNvbW1pdD0hMDticmVha319cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhKXt2YXIgYj1yZyhhLmFsdGVybmF0ZSxhLEgpO251bGw9PT1iJiYoYj1jKGEpKTtpZC5jdXJyZW50PW51bGw7cmV0dXJuIGJ9ZnVuY3Rpb24gZShhKXt2YXIgYj1HZyhhLmFsdGVybmF0ZSxhLEgpO251bGw9PT1iJiYoYj1jKGEpKTtpZC5jdXJyZW50PW51bGw7cmV0dXJuIGJ9ZnVuY3Rpb24gZihhKXtpZihudWxsIT09Uil7aWYoISgwPT09SHx8SD5hKSlpZihIPD1VYylmb3IoO251bGwhPT1GOylGPWsoRik/ZShGKTpkKEYpO2Vsc2UgZm9yKDtudWxsIT09RiYmIUEoKTspRj1rKEYpP2UoRik6ZChGKX1lbHNlIGlmKCEoMD09PUh8fEg+YSkpaWYoSDw9VWMpZm9yKDtudWxsIT09RjspRj1kKEYpO2Vsc2UgZm9yKDtudWxsIT09RiYmIUEoKTspRj1kKEYpfWZ1bmN0aW9uIGcoYSxiKXtqYT9FKFwiMjQzXCIpOnZvaWQgMDtqYT0hMDthLmlzUmVhZHlGb3JDb21taXQ9XG4hMTtpZihhIT09cmF8fGIhPT1IfHxudWxsPT09Ril7Zm9yKDstMTxoZTspZ2VbaGVdPW51bGwsaGUtLTtqZT1EO2llLmN1cnJlbnQ9RDtYLmN1cnJlbnQ9ITE7eCgpO3JhPWE7SD1iO0Y9c2UocmEuY3VycmVudCxudWxsLGIpfXZhciBjPSExLGQ9bnVsbDt0cnl7ZihiKX1jYXRjaChSYyl7Yz0hMCxkPVJjfWZvcig7Yzspe2lmKGViKXtjYT1kO2JyZWFrfXZhciBnPUY7aWYobnVsbD09PWcpZWI9ITA7ZWxzZXt2YXIgaz1oKGcsZCk7bnVsbD09PWs/RShcIjE4M1wiKTp2b2lkIDA7aWYoIWViKXt0cnl7Yz1rO2Q9Yjtmb3Ioaz1jO251bGwhPT1nOyl7c3dpdGNoKGcudGFnKXtjYXNlIDI6bmUoZyk7YnJlYWs7Y2FzZSA1OnFnKGcpO2JyZWFrO2Nhc2UgMzpwKGcpO2JyZWFrO2Nhc2UgNDpwKGcpfWlmKGc9PT1rfHxnLmFsdGVybmF0ZT09PWspYnJlYWs7Zz1nW1wicmV0dXJuXCJdfUY9ZShjKTtmKGQpfWNhdGNoKFJjKXtjPSEwO2Q9UmM7Y29udGludWV9YnJlYWt9fX1iPWNhO2ViPWphPSExO2NhPVxubnVsbDtudWxsIT09YiYmT2IoYik7cmV0dXJuIGEuaXNSZWFkeUZvckNvbW1pdD9hLmN1cnJlbnQuYWx0ZXJuYXRlOm51bGx9ZnVuY3Rpb24gaChhLGIpe3ZhciBjPWlkLmN1cnJlbnQ9bnVsbCxkPSExLGU9ITEsZj1udWxsO2lmKDM9PT1hLnRhZyljPWEscShhKSYmKGViPSEwKTtlbHNlIGZvcih2YXIgZz1hW1wicmV0dXJuXCJdO251bGwhPT1nJiZudWxsPT09YzspezI9PT1nLnRhZz9cImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5zdGF0ZU5vZGUuY29tcG9uZW50RGlkQ2F0Y2gmJihkPSEwLGY9amQoZyksYz1nLGU9ITApOjM9PT1nLnRhZyYmKGM9Zyk7aWYocShnKSl7aWYoU2N8fG51bGwhPT1oYSYmKGhhLmhhcyhnKXx8bnVsbCE9PWcuYWx0ZXJuYXRlJiZoYS5oYXMoZy5hbHRlcm5hdGUpKSlyZXR1cm4gbnVsbDtjPW51bGw7ZT0hMX1nPWdbXCJyZXR1cm5cIl19aWYobnVsbCE9PWMpe251bGw9PT1xYSYmKHFhPW5ldyBTZXQpO3FhLmFkZChjKTt2YXIgaD1cIlwiO2c9YTtkb3thOnN3aXRjaChnLnRhZyl7Y2FzZSAwOmNhc2UgMTpjYXNlIDI6Y2FzZSA1OnZhciBrPVxuZy5fZGVidWdPd25lcixRYz1nLl9kZWJ1Z1NvdXJjZTt2YXIgbT1qZChnKTt2YXIgbj1udWxsO2smJihuPWpkKGspKTtrPVFjO209XCJcXG4gICAgaW4gXCIrKG18fFwiVW5rbm93blwiKSsoaz9cIiAoYXQgXCIray5maWxlTmFtZS5yZXBsYWNlKC9eLipbXFxcXFxcL10vLFwiXCIpK1wiOlwiK2subGluZU51bWJlcitcIilcIjpuP1wiIChjcmVhdGVkIGJ5IFwiK24rXCIpXCI6XCJcIik7YnJlYWsgYTtkZWZhdWx0Om09XCJcIn1oKz1tO2c9Z1tcInJldHVyblwiXX13aGlsZShnKTtnPWg7YT1qZChhKTtudWxsPT09UiYmKFI9bmV3IE1hcCk7Yj17Y29tcG9uZW50TmFtZTphLGNvbXBvbmVudFN0YWNrOmcsZXJyb3I6YixlcnJvckJvdW5kYXJ5OmQ/Yy5zdGF0ZU5vZGU6bnVsbCxlcnJvckJvdW5kYXJ5Rm91bmQ6ZCxlcnJvckJvdW5kYXJ5TmFtZTpmLHdpbGxSZXRyeTplfTtSLnNldChjLGIpO3RyeXt2YXIgcD1iLmVycm9yO3AmJnAuc3VwcHJlc3NSZWFjdEVycm9yTG9nZ2luZ3x8Y29uc29sZS5lcnJvcihwKX1jYXRjaChWYyl7VmMmJlxuVmMuc3VwcHJlc3NSZWFjdEVycm9yTG9nZ2luZ3x8Y29uc29sZS5lcnJvcihWYyl9UWI/KG51bGw9PT1oYSYmKGhhPW5ldyBTZXQpLGhhLmFkZChjKSk6RyhjKTtyZXR1cm4gY31udWxsPT09Y2EmJihjYT1iKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBrKGEpe3JldHVybiBudWxsIT09UiYmKFIuaGFzKGEpfHxudWxsIT09YS5hbHRlcm5hdGUmJlIuaGFzKGEuYWx0ZXJuYXRlKSl9ZnVuY3Rpb24gcShhKXtyZXR1cm4gbnVsbCE9PXFhJiYocWEuaGFzKGEpfHxudWxsIT09YS5hbHRlcm5hdGUmJnFhLmhhcyhhLmFsdGVybmF0ZSkpfWZ1bmN0aW9uIHYoKXtyZXR1cm4gMjAqKCgoSSgpKzEwMCkvMjB8MCkrMSl9ZnVuY3Rpb24geShhKXtyZXR1cm4gMCE9PWthP2thOmphP1FiPzE6SDohSGd8fGEuaW50ZXJuYWxDb250ZXh0VGFnJjE/digpOjF9ZnVuY3Rpb24gdShhLGIpe3JldHVybiB6KGEsYiwhMSl9ZnVuY3Rpb24geihhLGIpe2Zvcig7bnVsbCE9PWE7KXtpZigwPT09YS5leHBpcmF0aW9uVGltZXx8XG5hLmV4cGlyYXRpb25UaW1lPmIpYS5leHBpcmF0aW9uVGltZT1iO251bGwhPT1hLmFsdGVybmF0ZSYmKDA9PT1hLmFsdGVybmF0ZS5leHBpcmF0aW9uVGltZXx8YS5hbHRlcm5hdGUuZXhwaXJhdGlvblRpbWU+YikmJihhLmFsdGVybmF0ZS5leHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09YVtcInJldHVyblwiXSlpZigzPT09YS50YWcpe3ZhciBjPWEuc3RhdGVOb2RlOyFqYSYmYz09PXJhJiZiPEgmJihGPXJhPW51bGwsSD0wKTt2YXIgZD1jLGU9YjtSYj5JZyYmRShcIjE4NVwiKTtpZihudWxsPT09ZC5uZXh0U2NoZWR1bGVkUm9vdClkLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWUsbnVsbD09PU8/KHNhPU89ZCxkLm5leHRTY2hlZHVsZWRSb290PWQpOihPPU8ubmV4dFNjaGVkdWxlZFJvb3Q9ZCxPLm5leHRTY2hlZHVsZWRSb290PXNhKTtlbHNle3ZhciBmPWQucmVtYWluaW5nRXhwaXJhdGlvblRpbWU7aWYoMD09PWZ8fGU8ZilkLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWV9RmF8fChsYT9cblNiJiYobWE9ZCxuYT0xLG0obWEsbmEpKToxPT09ZT93KDEsbnVsbCk6TChlKSk7IWphJiZjPT09cmEmJmI8SCYmKEY9cmE9bnVsbCxIPTApfWVsc2UgYnJlYWs7YT1hW1wicmV0dXJuXCJdfX1mdW5jdGlvbiBHKGEpe3ooYSwxLCEwKX1mdW5jdGlvbiBJKCl7cmV0dXJuIFVjPSgoV2MoKS1QZSkvMTB8MCkrMn1mdW5jdGlvbiBMKGEpe2lmKDAhPT1UYil7aWYoYT5UYilyZXR1cm47SmcoWGMpfXZhciBiPVdjKCktUGU7VGI9YTtYYz1LZyhKLHt0aW1lb3V0OjEwKihhLTIpLWJ9KX1mdW5jdGlvbiBOKCl7dmFyIGE9MCxiPW51bGw7aWYobnVsbCE9PU8pZm9yKHZhciBjPU8sZD1zYTtudWxsIT09ZDspe3ZhciBlPWQucmVtYWluaW5nRXhwaXJhdGlvblRpbWU7aWYoMD09PWUpe251bGw9PT1jfHxudWxsPT09Tz9FKFwiMjQ0XCIpOnZvaWQgMDtpZihkPT09ZC5uZXh0U2NoZWR1bGVkUm9vdCl7c2E9Tz1kLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBpZihkPT09c2Epc2E9ZT1kLm5leHRTY2hlZHVsZWRSb290LFxuTy5uZXh0U2NoZWR1bGVkUm9vdD1lLGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtlbHNlIGlmKGQ9PT1PKXtPPWM7Ty5uZXh0U2NoZWR1bGVkUm9vdD1zYTtkLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBjLm5leHRTY2hlZHVsZWRSb290PWQubmV4dFNjaGVkdWxlZFJvb3QsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Q9Yy5uZXh0U2NoZWR1bGVkUm9vdH1lbHNle2lmKDA9PT1hfHxlPGEpYT1lLGI9ZDtpZihkPT09TylicmVhaztjPWQ7ZD1kLm5leHRTY2hlZHVsZWRSb290fX1jPW1hO251bGwhPT1jJiZjPT09Yj9SYisrOlJiPTA7bWE9YjtuYT1hfWZ1bmN0aW9uIEooYSl7dygwLGEpfWZ1bmN0aW9uIHcoYSxiKXtmYj1iO2ZvcihOKCk7bnVsbCE9PW1hJiYwIT09bmEmJigwPT09YXx8bmE8PWEpJiYhWWM7KW0obWEsbmEpLE4oKTtudWxsIT09ZmImJihUYj0wLFhjPS0xKTswIT09bmEmJkwobmEpO2ZiPW51bGw7WWM9ITE7UmI9MDtpZihVYil0aHJvdyBhPVpjLFpjPVxubnVsbCxVYj0hMSxhO31mdW5jdGlvbiBtKGEsYyl7RmE/RShcIjI0NVwiKTp2b2lkIDA7RmE9ITA7aWYoYzw9SSgpKXt2YXIgZD1hLmZpbmlzaGVkV29yaztudWxsIT09ZD8oYS5maW5pc2hlZFdvcms9bnVsbCxhLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWIoZCkpOihhLmZpbmlzaGVkV29yaz1udWxsLGQ9ZyhhLGMpLG51bGwhPT1kJiYoYS5yZW1haW5pbmdFeHBpcmF0aW9uVGltZT1iKGQpKSl9ZWxzZSBkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kPyhhLmZpbmlzaGVkV29yaz1udWxsLGEucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9YihkKSk6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1nKGEsYyksbnVsbCE9PWQmJihBKCk/YS5maW5pc2hlZFdvcms9ZDphLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWIoZCkpKTtGYT0hMX1mdW5jdGlvbiBBKCl7cmV0dXJuIG51bGw9PT1mYnx8ZmIudGltZVJlbWFpbmluZygpPkxnPyExOlljPSEwfWZ1bmN0aW9uIE9iKGEpe251bGw9PT1tYT9FKFwiMjQ2XCIpOlxudm9pZCAwO21hLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPTA7VWJ8fChVYj0hMCxaYz1hKX12YXIgcj1oZihhKSxuPWpmKGEpLHA9ci5wb3BIb3N0Q29udGFpbmVyLHFnPXIucG9wSG9zdENvbnRleHQseD1yLnJlc2V0SG9zdENvbnRhaW5lcixNZT1kZihhLHIsbix1LHkpLHJnPU1lLmJlZ2luV29yayxHZz1NZS5iZWdpbkZhaWxlZFdvcmssRmc9ZWYoYSxyLG4pLmNvbXBsZXRlV29yaztyPWZmKGEsaCk7dmFyIHpnPXIuY29tbWl0UmVzZXRUZXh0Q29udGVudCxOZT1yLmNvbW1pdFBsYWNlbWVudCxCZz1yLmNvbW1pdERlbGV0aW9uLE9lPXIuY29tbWl0V29yayxEZz1yLmNvbW1pdExpZmVDeWNsZXMsRWc9ci5jb21taXRBdHRhY2hSZWYsQWc9ci5jb21taXREZXRhY2hSZWYsV2M9YS5ub3csS2c9YS5zY2hlZHVsZURlZmVycmVkQ2FsbGJhY2ssSmc9YS5jYW5jZWxEZWZlcnJlZENhbGxiYWNrLEhnPWEudXNlU3luY1NjaGVkdWxpbmcseWc9YS5wcmVwYXJlRm9yQ29tbWl0LENnPWEucmVzZXRBZnRlckNvbW1pdCxcblBlPVdjKCksVWM9MixrYT0wLGphPSExLEY9bnVsbCxyYT1udWxsLEg9MCx0PW51bGwsUj1udWxsLHFhPW51bGwsaGE9bnVsbCxjYT1udWxsLGViPSExLFFiPSExLFNjPSExLHNhPW51bGwsTz1udWxsLFRiPTAsWGM9LTEsRmE9ITEsbWE9bnVsbCxuYT0wLFljPSExLFViPSExLFpjPW51bGwsZmI9bnVsbCxsYT0hMSxTYj0hMSxJZz0xRTMsUmI9MCxMZz0xO3JldHVybntjb21wdXRlQXN5bmNFeHBpcmF0aW9uOnYsY29tcHV0ZUV4cGlyYXRpb25Gb3JGaWJlcjp5LHNjaGVkdWxlV29yazp1LGJhdGNoZWRVcGRhdGVzOmZ1bmN0aW9uKGEsYil7dmFyIGM9bGE7bGE9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7KGxhPWMpfHxGYXx8dygxLG51bGwpfX0sdW5iYXRjaGVkVXBkYXRlczpmdW5jdGlvbihhKXtpZihsYSYmIVNiKXtTYj0hMDt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1NiPSExfX1yZXR1cm4gYSgpfSxmbHVzaFN5bmM6ZnVuY3Rpb24oYSl7dmFyIGI9bGE7bGE9ITA7dHJ5e2E6e3ZhciBjPVxua2E7a2E9MTt0cnl7dmFyIGQ9YSgpO2JyZWFrIGF9ZmluYWxseXtrYT1jfWQ9dm9pZCAwfXJldHVybiBkfWZpbmFsbHl7bGE9YixGYT9FKFwiMTg3XCIpOnZvaWQgMCx3KDEsbnVsbCl9fSxkZWZlcnJlZFVwZGF0ZXM6ZnVuY3Rpb24oYSl7dmFyIGI9a2E7a2E9digpO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7a2E9Yn19fX1cbmZ1bmN0aW9uIGxmKGEpe2Z1bmN0aW9uIGIoYSl7YT1vZChhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX12YXIgYz1hLmdldFB1YmxpY0luc3RhbmNlO2E9a2YoYSk7dmFyIGQ9YS5jb21wdXRlQXN5bmNFeHBpcmF0aW9uLGU9YS5jb21wdXRlRXhwaXJhdGlvbkZvckZpYmVyLGY9YS5zY2hlZHVsZVdvcms7cmV0dXJue2NyZWF0ZUNvbnRhaW5lcjpmdW5jdGlvbihhLGIpe3ZhciBjPW5ldyBZKDMsbnVsbCwwKTthPXtjdXJyZW50OmMsY29udGFpbmVySW5mbzphLHBlbmRpbmdDaGlsZHJlbjpudWxsLHJlbWFpbmluZ0V4cGlyYXRpb25UaW1lOjAsaXNSZWFkeUZvckNvbW1pdDohMSxmaW5pc2hlZFdvcms6bnVsbCxjb250ZXh0Om51bGwscGVuZGluZ0NvbnRleHQ6bnVsbCxoeWRyYXRlOmIsbmV4dFNjaGVkdWxlZFJvb3Q6bnVsbH07cmV0dXJuIGMuc3RhdGVOb2RlPWF9LHVwZGF0ZUNvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxxKXt2YXIgZz1iLmN1cnJlbnQ7aWYoYyl7Yz1cbmMuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgaDtiOnsyPT09a2QoYykmJjI9PT1jLnRhZz92b2lkIDA6RShcIjE3MFwiKTtmb3IoaD1jOzMhPT1oLnRhZzspe2lmKGxlKGgpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9KGg9aFtcInJldHVyblwiXSk/dm9pZCAwOkUoXCIxNzFcIil9aD1oLnN0YXRlTm9kZS5jb250ZXh0fWM9bGUoYyk/cGUoYyxoKTpofWVsc2UgYz1EO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9cTtiPXZvaWQgMD09PWI/bnVsbDpiO3E9bnVsbCE9YSYmbnVsbCE9YS50eXBlJiZudWxsIT1hLnR5cGUucHJvdG90eXBlJiYhMD09PWEudHlwZS5wcm90b3R5cGUudW5zdGFibGVfaXNBc3luY1JlYWN0Q29tcG9uZW50P2QoKTplKGcpO0hlKGcse2V4cGlyYXRpb25UaW1lOnEscGFydGlhbFN0YXRlOntlbGVtZW50OmF9LGNhbGxiYWNrOmIsaXNSZXBsYWNlOiExLGlzRm9yY2VkOiExLFxubmV4dENhbGxiYWNrOm51bGwsbmV4dDpudWxsfSk7ZihnLHEpfSxiYXRjaGVkVXBkYXRlczphLmJhdGNoZWRVcGRhdGVzLHVuYmF0Y2hlZFVwZGF0ZXM6YS51bmJhdGNoZWRVcGRhdGVzLGRlZmVycmVkVXBkYXRlczphLmRlZmVycmVkVXBkYXRlcyxmbHVzaFN5bmM6YS5mbHVzaFN5bmMsZ2V0UHVibGljUm9vdEluc3RhbmNlOmZ1bmN0aW9uKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBjKGEuY2hpbGQuc3RhdGVOb2RlKTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19LGZpbmRIb3N0SW5zdGFuY2U6YixmaW5kSG9zdEluc3RhbmNlV2l0aE5vUG9ydGFsczpmdW5jdGlvbihhKXthPXBkKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxpbmplY3RJbnRvRGV2VG9vbHM6ZnVuY3Rpb24oYSl7dmFyIGM9YS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZTtyZXR1cm4gQ2UoQih7fSxcbmEse2ZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe3JldHVybiBiKGEpfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gYz9jKGEpOm51bGx9fSkpfX19dmFyIG1mPU9iamVjdC5mcmVlemUoe2RlZmF1bHQ6bGZ9KSxuZj1tZiYmbGZ8fG1mLG9mPW5mW1wiZGVmYXVsdFwiXT9uZltcImRlZmF1bHRcIl06bmY7ZnVuY3Rpb24gcGYoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjpVZSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX12YXIgcWY9XCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyxyZj12b2lkIDA7cmY9cWY/ZnVuY3Rpb24oKXtyZXR1cm4gcGVyZm9ybWFuY2Uubm93KCl9OmZ1bmN0aW9uKCl7cmV0dXJuIERhdGUubm93KCl9O1xudmFyIHNmPXZvaWQgMCx0Zj12b2lkIDA7XG5pZihsLmNhblVzZURPTSlpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgcmVxdWVzdElkbGVDYWxsYmFja3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIGNhbmNlbElkbGVDYWxsYmFjayl7dmFyIHVmPW51bGwsdmY9ITEsd2Y9LTEseGY9ITEseWY9MCx6Zj0zMyxBZj0zMyxCZjtCZj1xZj97ZGlkVGltZW91dDohMSx0aW1lUmVtYWluaW5nOmZ1bmN0aW9uKCl7dmFyIGE9eWYtcGVyZm9ybWFuY2Uubm93KCk7cmV0dXJuIDA8YT9hOjB9fTp7ZGlkVGltZW91dDohMSx0aW1lUmVtYWluaW5nOmZ1bmN0aW9uKCl7dmFyIGE9eWYtRGF0ZS5ub3coKTtyZXR1cm4gMDxhP2E6MH19O3ZhciBDZj1cIl9fcmVhY3RJZGxlQ2FsbGJhY2skXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsZnVuY3Rpb24oYSl7aWYoYS5zb3VyY2U9PT13aW5kb3cmJmEuZGF0YT09PUNmKXt2Zj0hMTthPXJmKCk7aWYoMD49eWYtYSlpZigtMSE9PXdmJiZ3Zjw9XG5hKUJmLmRpZFRpbWVvdXQ9ITA7ZWxzZXt4Znx8KHhmPSEwLHJlcXVlc3RBbmltYXRpb25GcmFtZShEZikpO3JldHVybn1lbHNlIEJmLmRpZFRpbWVvdXQ9ITE7d2Y9LTE7YT11Zjt1Zj1udWxsO251bGwhPT1hJiZhKEJmKX19LCExKTt2YXIgRGY9ZnVuY3Rpb24oYSl7eGY9ITE7dmFyIGI9YS15ZitBZjtiPEFmJiZ6ZjxBZj8oOD5iJiYoYj04KSxBZj1iPHpmP3pmOmIpOnpmPWI7eWY9YStBZjt2Znx8KHZmPSEwLHdpbmRvdy5wb3N0TWVzc2FnZShDZixcIipcIikpfTtzZj1mdW5jdGlvbihhLGIpe3VmPWE7bnVsbCE9YiYmXCJudW1iZXJcIj09PXR5cGVvZiBiLnRpbWVvdXQmJih3Zj1yZigpK2IudGltZW91dCk7eGZ8fCh4Zj0hMCxyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoRGYpKTtyZXR1cm4gMH07dGY9ZnVuY3Rpb24oKXt1Zj1udWxsO3ZmPSExO3dmPS0xfX1lbHNlIHNmPXdpbmRvdy5yZXF1ZXN0SWRsZUNhbGxiYWNrLHRmPXdpbmRvdy5jYW5jZWxJZGxlQ2FsbGJhY2s7ZWxzZSBzZj1mdW5jdGlvbihhKXtyZXR1cm4gc2V0VGltZW91dChmdW5jdGlvbigpe2Eoe3RpbWVSZW1haW5pbmc6ZnVuY3Rpb24oKXtyZXR1cm4gSW5maW5pdHl9fSl9KX0sXG50Zj1mdW5jdGlvbihhKXtjbGVhclRpbWVvdXQoYSl9O3ZhciBFZj0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8sRmY9e30sR2Y9e307XG5mdW5jdGlvbiBIZihhKXtpZihHZi5oYXNPd25Qcm9wZXJ0eShhKSlyZXR1cm4hMDtpZihGZi5oYXNPd25Qcm9wZXJ0eShhKSlyZXR1cm4hMTtpZihFZi50ZXN0KGEpKXJldHVybiBHZlthXT0hMDtGZlthXT0hMDtyZXR1cm4hMX1cbmZ1bmN0aW9uIElmKGEsYixjKXt2YXIgZD13YShiKTtpZihkJiZ2YShiLGMpKXt2YXIgZT1kLm11dGF0aW9uTWV0aG9kO2U/ZShhLGMpOm51bGw9PWN8fGQuaGFzQm9vbGVhblZhbHVlJiYhY3x8ZC5oYXNOdW1lcmljVmFsdWUmJmlzTmFOKGMpfHxkLmhhc1Bvc2l0aXZlTnVtZXJpY1ZhbHVlJiYxPmN8fGQuaGFzT3ZlcmxvYWRlZEJvb2xlYW5WYWx1ZSYmITE9PT1jP0pmKGEsYik6ZC5tdXN0VXNlUHJvcGVydHk/YVtkLnByb3BlcnR5TmFtZV09YzooYj1kLmF0dHJpYnV0ZU5hbWUsKGU9ZC5hdHRyaWJ1dGVOYW1lc3BhY2UpP2Euc2V0QXR0cmlidXRlTlMoZSxiLFwiXCIrYyk6ZC5oYXNCb29sZWFuVmFsdWV8fGQuaGFzT3ZlcmxvYWRlZEJvb2xlYW5WYWx1ZSYmITA9PT1jP2Euc2V0QXR0cmlidXRlKGIsXCJcIik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKX1lbHNlIEtmKGEsYix2YShiLGMpP2M6bnVsbCl9XG5mdW5jdGlvbiBLZihhLGIsYyl7SGYoYikmJihudWxsPT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSl9ZnVuY3Rpb24gSmYoYSxiKXt2YXIgYz13YShiKTtjPyhiPWMubXV0YXRpb25NZXRob2QpP2IoYSx2b2lkIDApOmMubXVzdFVzZVByb3BlcnR5P2FbYy5wcm9wZXJ0eU5hbWVdPWMuaGFzQm9vbGVhblZhbHVlPyExOlwiXCI6YS5yZW1vdmVBdHRyaWJ1dGUoYy5hdHRyaWJ1dGVOYW1lKTphLnJlbW92ZUF0dHJpYnV0ZShiKX1cbmZ1bmN0aW9uIExmKGEsYil7dmFyIGM9Yi52YWx1ZSxkPWIuY2hlY2tlZDtyZXR1cm4gQih7dHlwZTp2b2lkIDAsc3RlcDp2b2lkIDAsbWluOnZvaWQgMCxtYXg6dm9pZCAwfSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSxjaGVja2VkOm51bGwhPWQ/ZDphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1mdW5jdGlvbiBNZihhLGIpe3ZhciBjPWIuZGVmYXVsdFZhbHVlO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkLGluaXRpYWxWYWx1ZTpudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1cbmZ1bmN0aW9uIE5mKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmSWYoYSxcImNoZWNrZWRcIixiKX1mdW5jdGlvbiBPZihhLGIpe05mKGEsYik7dmFyIGM9Yi52YWx1ZTtpZihudWxsIT1jKWlmKDA9PT1jJiZcIlwiPT09YS52YWx1ZSlhLnZhbHVlPVwiMFwiO2Vsc2UgaWYoXCJudW1iZXJcIj09PWIudHlwZSl7aWYoYj1wYXJzZUZsb2F0KGEudmFsdWUpfHwwLGMhPWJ8fGM9PWImJmEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgbnVsbD09Yi52YWx1ZSYmbnVsbCE9Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09XCJcIitiLmRlZmF1bHRWYWx1ZSYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYi5kZWZhdWx0VmFsdWUpLG51bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIFBmKGEsYil7c3dpdGNoKGIudHlwZSl7Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2Nhc2UgXCJjb2xvclwiOmNhc2UgXCJkYXRlXCI6Y2FzZSBcImRhdGV0aW1lXCI6Y2FzZSBcImRhdGV0aW1lLWxvY2FsXCI6Y2FzZSBcIm1vbnRoXCI6Y2FzZSBcInRpbWVcIjpjYXNlIFwid2Vla1wiOmEudmFsdWU9XCJcIjthLnZhbHVlPWEuZGVmYXVsdFZhbHVlO2JyZWFrO2RlZmF1bHQ6YS52YWx1ZT1hLnZhbHVlfWI9YS5uYW1lO1wiXCIhPT1iJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hYS5kZWZhdWx0Q2hlY2tlZDtcIlwiIT09YiYmKGEubmFtZT1iKX1mdW5jdGlvbiBRZihhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsPT1hfHxcInN0cmluZ1wiIT09dHlwZW9mIGEmJlwibnVtYmVyXCIhPT10eXBlb2YgYXx8KGIrPWEpfSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBSZihhLGIpe2E9Qih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPVFmKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1mdW5jdGlvbiBTZihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrYztiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gVGYoYSxiKXt2YXIgYz1iLnZhbHVlO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOm51bGwhPWM/YzpiLmRlZmF1bHRWYWx1ZSx3YXNNdWx0aXBsZTohIWIubXVsdGlwbGV9fWZ1bmN0aW9uIFVmKGEsYil7bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD9FKFwiOTFcIik6dm9pZCAwO3JldHVybiBCKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIFZmKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsPT1jJiYoYz1iLmRlZmF1bHRWYWx1ZSxiPWIuY2hpbGRyZW4sbnVsbCE9YiYmKG51bGwhPWM/RShcIjkyXCIpOnZvaWQgMCxBcnJheS5pc0FycmF5KGIpJiYoMT49Yi5sZW5ndGg/dm9pZCAwOkUoXCI5M1wiKSxiPWJbMF0pLGM9XCJcIitiKSxudWxsPT1jJiYoYz1cIlwiKSk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6XCJcIitjfX1cbmZ1bmN0aW9uIFdmKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWIuZGVmYXVsdFZhbHVlJiYoYS5kZWZhdWx0VmFsdWU9Yi5kZWZhdWx0VmFsdWUpfWZ1bmN0aW9uIFhmKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJihhLnZhbHVlPWIpfXZhciBZZj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBaZihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uICRmKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9aZihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBhZz12b2lkIDAsYmc9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09WWYuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7YWc9YWd8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7YWcuaW5uZXJIVE1MPVwiXFx4M2NzdmdcXHgzZVwiK2IrXCJcXHgzYy9zdmdcXHgzZVwiO2ZvcihiPWFnLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIGNnKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgZGc9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLGZsb29kT3BhY2l0eTohMCxcbnN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0sZWc9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKGRnKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2VnLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7ZGdbYl09ZGdbYV19KX0pO1xuZnVuY3Rpb24gZmcoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpO3ZhciBlPWM7dmFyIGY9YltjXTtlPW51bGw9PWZ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGZ8fFwiXCI9PT1mP1wiXCI6ZHx8XCJudW1iZXJcIiE9PXR5cGVvZiBmfHwwPT09Znx8ZGcuaGFzT3duUHJvcGVydHkoZSkmJmRnW2VdPyhcIlwiK2YpLnRyaW0oKTpmK1wicHhcIjtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIGdnPUIoe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiBoZyhhLGIsYyl7YiYmKGdnW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD9FKFwiMTM3XCIsYSxjKCkpOnZvaWQgMCksbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmKG51bGwhPWIuY2hpbGRyZW4/RShcIjYwXCIpOnZvaWQgMCxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3ZvaWQgMDpFKFwiNjFcIikpLG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZT9FKFwiNjJcIixjKCkpOnZvaWQgMCl9XG5mdW5jdGlvbiBpZyhhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19dmFyIGpnPVlmLmh0bWwsa2c9Qy50aGF0UmV0dXJucyhcIlwiKTtcbmZ1bmN0aW9uIGxnKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPUhkKGEpO2I9U2FbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspe3ZhciBlPWJbZF07Yy5oYXNPd25Qcm9wZXJ0eShlKSYmY1tlXXx8KFwidG9wU2Nyb2xsXCI9PT1lP3dkKFwidG9wU2Nyb2xsXCIsXCJzY3JvbGxcIixhKTpcInRvcEZvY3VzXCI9PT1lfHxcInRvcEJsdXJcIj09PWU/KHdkKFwidG9wRm9jdXNcIixcImZvY3VzXCIsYSksd2QoXCJ0b3BCbHVyXCIsXCJibHVyXCIsYSksYy50b3BCbHVyPSEwLGMudG9wRm9jdXM9ITApOlwidG9wQ2FuY2VsXCI9PT1lPyh5YyhcImNhbmNlbFwiLCEwKSYmd2QoXCJ0b3BDYW5jZWxcIixcImNhbmNlbFwiLGEpLGMudG9wQ2FuY2VsPSEwKTpcInRvcENsb3NlXCI9PT1lPyh5YyhcImNsb3NlXCIsITApJiZ3ZChcInRvcENsb3NlXCIsXCJjbG9zZVwiLGEpLGMudG9wQ2xvc2U9ITApOkRkLmhhc093blByb3BlcnR5KGUpJiZVKGUsRGRbZV0sYSksY1tlXT0hMCl9fVxudmFyIG1nPXt0b3BBYm9ydDpcImFib3J0XCIsdG9wQ2FuUGxheTpcImNhbnBsYXlcIix0b3BDYW5QbGF5VGhyb3VnaDpcImNhbnBsYXl0aHJvdWdoXCIsdG9wRHVyYXRpb25DaGFuZ2U6XCJkdXJhdGlvbmNoYW5nZVwiLHRvcEVtcHRpZWQ6XCJlbXB0aWVkXCIsdG9wRW5jcnlwdGVkOlwiZW5jcnlwdGVkXCIsdG9wRW5kZWQ6XCJlbmRlZFwiLHRvcEVycm9yOlwiZXJyb3JcIix0b3BMb2FkZWREYXRhOlwibG9hZGVkZGF0YVwiLHRvcExvYWRlZE1ldGFkYXRhOlwibG9hZGVkbWV0YWRhdGFcIix0b3BMb2FkU3RhcnQ6XCJsb2Fkc3RhcnRcIix0b3BQYXVzZTpcInBhdXNlXCIsdG9wUGxheTpcInBsYXlcIix0b3BQbGF5aW5nOlwicGxheWluZ1wiLHRvcFByb2dyZXNzOlwicHJvZ3Jlc3NcIix0b3BSYXRlQ2hhbmdlOlwicmF0ZWNoYW5nZVwiLHRvcFNlZWtlZDpcInNlZWtlZFwiLHRvcFNlZWtpbmc6XCJzZWVraW5nXCIsdG9wU3RhbGxlZDpcInN0YWxsZWRcIix0b3BTdXNwZW5kOlwic3VzcGVuZFwiLHRvcFRpbWVVcGRhdGU6XCJ0aW1ldXBkYXRlXCIsdG9wVm9sdW1lQ2hhbmdlOlwidm9sdW1lY2hhbmdlXCIsXG50b3BXYWl0aW5nOlwid2FpdGluZ1wifTtmdW5jdGlvbiBuZyhhLGIsYyxkKXtjPTk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O2Q9PT1qZyYmKGQ9WmYoYSkpO2Q9PT1qZz9cInNjcmlwdFwiPT09YT8oYT1jLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCJcXHgzY3NjcmlwdFxceDNlXFx4M2Mvc2NyaXB0XFx4M2VcIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6YT1cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM/Yy5jcmVhdGVFbGVtZW50KGEse2lzOmIuaXN9KTpjLmNyZWF0ZUVsZW1lbnQoYSk6YT1jLmNyZWF0ZUVsZW1lbnROUyhkLGEpO3JldHVybiBhfWZ1bmN0aW9uIG9nKGEsYil7cmV0dXJuKDk9PT1iLm5vZGVUeXBlP2I6Yi5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShhKX1cbmZ1bmN0aW9uIHBnKGEsYixjLGQpe3ZhciBlPWlnKGIsYyk7c3dpdGNoKGIpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6VShcInRvcExvYWRcIixcImxvYWRcIixhKTt2YXIgZj1jO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihmIGluIG1nKW1nLmhhc093blByb3BlcnR5KGYpJiZVKGYsbWdbZl0sYSk7Zj1jO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpVKFwidG9wRXJyb3JcIixcImVycm9yXCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpVKFwidG9wRXJyb3JcIixcImVycm9yXCIsYSk7VShcInRvcExvYWRcIixcImxvYWRcIixhKTtmPWM7YnJlYWs7Y2FzZSBcImZvcm1cIjpVKFwidG9wUmVzZXRcIixcInJlc2V0XCIsYSk7VShcInRvcFN1Ym1pdFwiLFwic3VibWl0XCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6VShcInRvcFRvZ2dsZVwiLFwidG9nZ2xlXCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOk1mKGEsYyk7Zj1MZihhLGMpO1UoXCJ0b3BJbnZhbGlkXCIsXCJpbnZhbGlkXCIsYSk7XG5sZyhkLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9UmYoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6VGYoYSxjKTtmPUIoe30sYyx7dmFsdWU6dm9pZCAwfSk7VShcInRvcEludmFsaWRcIixcImludmFsaWRcIixhKTtsZyhkLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmYoYSxjKTtmPVVmKGEsYyk7VShcInRvcEludmFsaWRcIixcImludmFsaWRcIixhKTtsZyhkLFwib25DaGFuZ2VcIik7YnJlYWs7ZGVmYXVsdDpmPWN9aGcoYixmLGtnKTt2YXIgZz1mLGg7Zm9yKGggaW4gZylpZihnLmhhc093blByb3BlcnR5KGgpKXt2YXIgaz1nW2hdO1wic3R5bGVcIj09PWg/ZmcoYSxrLGtnKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1oPyhrPWs/ay5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJmJnKGEsaykpOlwiY2hpbGRyZW5cIj09PWg/XCJzdHJpbmdcIj09PXR5cGVvZiBrPyhcInRleHRhcmVhXCIhPT1ifHxcIlwiIT09aykmJmNnKGEsayk6XCJudW1iZXJcIj09PXR5cGVvZiBrJiZjZyhhLFxuXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJlwiYXV0b0ZvY3VzXCIhPT1oJiYoUmEuaGFzT3duUHJvcGVydHkoaCk/bnVsbCE9ayYmbGcoZCxoKTplP0tmKGEsaCxrKTpudWxsIT1rJiZJZihhLGgsaykpfXN3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpCYyhhKTtQZihhLGMpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkJjKGEpO1hmKGEsYyk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWMudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixjLnZhbHVlKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWMubXVsdGlwbGU7Yj1jLnZhbHVlO251bGwhPWI/U2YoYSwhIWMubXVsdGlwbGUsYiwhMSk6bnVsbCE9Yy5kZWZhdWx0VmFsdWUmJlNmKGEsISFjLm11bHRpcGxlLGMuZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLm9uQ2xpY2smJihhLm9uY2xpY2s9XG5DKX19XG5mdW5jdGlvbiBzZyhhLGIsYyxkLGUpe3ZhciBmPW51bGw7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmM9TGYoYSxjKTtkPUxmKGEsZCk7Zj1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6Yz1SZihhLGMpO2Q9UmYoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjPUIoe30sYyx7dmFsdWU6dm9pZCAwfSk7ZD1CKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2Y9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Yz1VZihhLGMpO2Q9VWYoYSxkKTtmPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGMub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGEub25jbGljaz1DKX1oZyhiLGQsa2cpO3ZhciBnLGg7YT1udWxsO2ZvcihnIGluIGMpaWYoIWQuaGFzT3duUHJvcGVydHkoZykmJmMuaGFzT3duUHJvcGVydHkoZykmJm51bGwhPWNbZ10paWYoXCJzdHlsZVwiPT09Zylmb3IoaCBpbiBiPWNbZ10sYiliLmhhc093blByb3BlcnR5KGgpJiYoYXx8KGE9e30pLGFbaF09XG5cIlwiKTtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09ZyYmXCJjaGlsZHJlblwiIT09ZyYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWcmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1nJiZcImF1dG9Gb2N1c1wiIT09ZyYmKFJhLmhhc093blByb3BlcnR5KGcpP2Z8fChmPVtdKTooZj1mfHxbXSkucHVzaChnLG51bGwpKTtmb3IoZyBpbiBkKXt2YXIgaz1kW2ddO2I9bnVsbCE9Yz9jW2ddOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGcpJiZrIT09YiYmKG51bGwhPWt8fG51bGwhPWIpKWlmKFwic3R5bGVcIj09PWcpaWYoYil7Zm9yKGggaW4gYikhYi5oYXNPd25Qcm9wZXJ0eShoKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShoKXx8KGF8fChhPXt9KSxhW2hdPVwiXCIpO2ZvcihoIGluIGspay5oYXNPd25Qcm9wZXJ0eShoKSYmYltoXSE9PWtbaF0mJihhfHwoYT17fSksYVtoXT1rW2hdKX1lbHNlIGF8fChmfHwoZj1bXSksZi5wdXNoKGcsYSkpLGE9aztlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09XG5nPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGI9Yj9iLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmYiE9PWsmJihmPWZ8fFtdKS5wdXNoKGcsXCJcIitrKSk6XCJjaGlsZHJlblwiPT09Zz9iPT09a3x8XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChmPWZ8fFtdKS5wdXNoKGcsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWcmJihSYS5oYXNPd25Qcm9wZXJ0eShnKT8obnVsbCE9ayYmbGcoZSxnKSxmfHxiPT09a3x8KGY9W10pKTooZj1mfHxbXSkucHVzaChnLGspKX1hJiYoZj1mfHxbXSkucHVzaChcInN0eWxlXCIsYSk7cmV0dXJuIGZ9XG5mdW5jdGlvbiB0ZyhhLGIsYyxkLGUpe1wiaW5wdXRcIj09PWMmJlwicmFkaW9cIj09PWUudHlwZSYmbnVsbCE9ZS5uYW1lJiZOZihhLGUpO2lnKGMsZCk7ZD1pZyhjLGUpO2Zvcih2YXIgZj0wO2Y8Yi5sZW5ndGg7Zis9Mil7dmFyIGc9YltmXSxoPWJbZisxXTtcInN0eWxlXCI9PT1nP2ZnKGEsaCxrZyk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9iZyhhLGgpOlwiY2hpbGRyZW5cIj09PWc/Y2coYSxoKTpkP251bGwhPWg/S2YoYSxnLGgpOmEucmVtb3ZlQXR0cmlidXRlKGcpOm51bGwhPWg/SWYoYSxnLGgpOkpmKGEsZyl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOk9mKGEsZSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6V2YoYSxlKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZT12b2lkIDAsYj1hLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZS5tdWx0aXBsZSxjPWUudmFsdWUsbnVsbCE9Yz9TZihhLFxuISFlLm11bHRpcGxlLGMsITEpOmIhPT0hIWUubXVsdGlwbGUmJihudWxsIT1lLmRlZmF1bHRWYWx1ZT9TZihhLCEhZS5tdWx0aXBsZSxlLmRlZmF1bHRWYWx1ZSwhMCk6U2YoYSwhIWUubXVsdGlwbGUsZS5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fVxuZnVuY3Rpb24gdWcoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpVKFwidG9wTG9hZFwiLFwibG9hZFwiLGEpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcih2YXIgZiBpbiBtZyltZy5oYXNPd25Qcm9wZXJ0eShmKSYmVShmLG1nW2ZdLGEpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpVKFwidG9wRXJyb3JcIixcImVycm9yXCIsYSk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOlUoXCJ0b3BFcnJvclwiLFwiZXJyb3JcIixhKTtVKFwidG9wTG9hZFwiLFwibG9hZFwiLGEpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6VShcInRvcFJlc2V0XCIsXCJyZXNldFwiLGEpO1UoXCJ0b3BTdWJtaXRcIixcInN1Ym1pdFwiLGEpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6VShcInRvcFRvZ2dsZVwiLFwidG9nZ2xlXCIsYSk7YnJlYWs7Y2FzZSBcImlucHV0XCI6TWYoYSxjKTtVKFwidG9wSW52YWxpZFwiLFwiaW52YWxpZFwiLGEpO2xnKGUsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6VGYoYSxjKTtcblUoXCJ0b3BJbnZhbGlkXCIsXCJpbnZhbGlkXCIsYSk7bGcoZSxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZmKGEsYyksVShcInRvcEludmFsaWRcIixcImludmFsaWRcIixhKSxsZyhlLFwib25DaGFuZ2VcIil9aGcoYixjLGtnKTtkPW51bGw7Zm9yKHZhciBnIGluIGMpYy5oYXNPd25Qcm9wZXJ0eShnKSYmKGY9Y1tnXSxcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgZj9hLnRleHRDb250ZW50IT09ZiYmKGQ9W1wiY2hpbGRyZW5cIixmXSk6XCJudW1iZXJcIj09PXR5cGVvZiBmJiZhLnRleHRDb250ZW50IT09XCJcIitmJiYoZD1bXCJjaGlsZHJlblwiLFwiXCIrZl0pOlJhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1mJiZsZyhlLGcpKTtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6QmMoYSk7UGYoYSxjKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpCYyhhKTtYZihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5vbkNsaWNrJiZcbihhLm9uY2xpY2s9Qyl9cmV0dXJuIGR9ZnVuY3Rpb24gdmcoYSxiKXtyZXR1cm4gYS5ub2RlVmFsdWUhPT1ifVxudmFyIHdnPU9iamVjdC5mcmVlemUoe2NyZWF0ZUVsZW1lbnQ6bmcsY3JlYXRlVGV4dE5vZGU6b2csc2V0SW5pdGlhbFByb3BlcnRpZXM6cGcsZGlmZlByb3BlcnRpZXM6c2csdXBkYXRlUHJvcGVydGllczp0ZyxkaWZmSHlkcmF0ZWRQcm9wZXJ0aWVzOnVnLGRpZmZIeWRyYXRlZFRleHQ6dmcsd2FybkZvclVubWF0Y2hlZFRleHQ6ZnVuY3Rpb24oKXt9LHdhcm5Gb3JEZWxldGVkSHlkcmF0YWJsZUVsZW1lbnQ6ZnVuY3Rpb24oKXt9LHdhcm5Gb3JEZWxldGVkSHlkcmF0YWJsZVRleHQ6ZnVuY3Rpb24oKXt9LHdhcm5Gb3JJbnNlcnRlZEh5ZHJhdGVkRWxlbWVudDpmdW5jdGlvbigpe30sd2FybkZvckluc2VydGVkSHlkcmF0ZWRUZXh0OmZ1bmN0aW9uKCl7fSxyZXN0b3JlQ29udHJvbGxlZFN0YXRlOmZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6T2YoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPVxuYy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZVxceDNkXCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlXFx4M2RcInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1yYihkKTtlP3ZvaWQgMDpFKFwiOTBcIik7Q2MoZCk7T2YoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOldmKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZTZihhLCEhYy5tdWx0aXBsZSxiLCExKX19fSk7bmMuaW5qZWN0RmliZXJDb250cm9sbGVkSG9zdENvbXBvbmVudCh3Zyk7dmFyIHhnPW51bGwsTWc9bnVsbDtmdW5jdGlvbiBOZyhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9XG5mdW5jdGlvbiBPZyhhKXthPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGw7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGV8fCFhLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKX1cbnZhciBaPW9mKHtnZXRSb290SG9zdENvbnRleHQ6ZnVuY3Rpb24oYSl7dmFyIGI9YS5ub2RlVHlwZTtzd2l0Y2goYil7Y2FzZSA5OmNhc2UgMTE6YT0oYT1hLmRvY3VtZW50RWxlbWVudCk/YS5uYW1lc3BhY2VVUkk6JGYobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmI9OD09PWI/YS5wYXJlbnROb2RlOmEsYT1iLm5hbWVzcGFjZVVSSXx8bnVsbCxiPWIudGFnTmFtZSxhPSRmKGEsYil9cmV0dXJuIGF9LGdldENoaWxkSG9zdENvbnRleHQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gJGYoYSxiKX0sZ2V0UHVibGljSW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGF9LHByZXBhcmVGb3JDb21taXQ6ZnVuY3Rpb24oKXt4Zz10ZDt2YXIgYT1kYSgpO2lmKEtkKGEpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBhKXZhciBiPXtzdGFydDphLnNlbGVjdGlvblN0YXJ0LGVuZDphLnNlbGVjdGlvbkVuZH07ZWxzZSBhOnt2YXIgYz13aW5kb3cuZ2V0U2VsZWN0aW9uJiZ3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7XG5pZihjJiYwIT09Yy5yYW5nZUNvdW50KXtiPWMuYW5jaG9yTm9kZTt2YXIgZD1jLmFuY2hvck9mZnNldCxlPWMuZm9jdXNOb2RlO2M9Yy5mb2N1c09mZnNldDt0cnl7Yi5ub2RlVHlwZSxlLm5vZGVUeXBlfWNhdGNoKHope2I9bnVsbDticmVhayBhfXZhciBmPTAsZz0tMSxoPS0xLGs9MCxxPTAsdj1hLHk9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB1Ozspe3YhPT1ifHwwIT09ZCYmMyE9PXYubm9kZVR5cGV8fChnPWYrZCk7diE9PWV8fDAhPT1jJiYzIT09di5ub2RlVHlwZXx8KGg9ZitjKTszPT09di5ub2RlVHlwZSYmKGYrPXYubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PSh1PXYuZmlyc3RDaGlsZCkpYnJlYWs7eT12O3Y9dX1mb3IoOzspe2lmKHY9PT1hKWJyZWFrIGI7eT09PWImJisraz09PWQmJihnPWYpO3k9PT1lJiYrK3E9PT1jJiYoaD1mKTtpZihudWxsIT09KHU9di5uZXh0U2libGluZykpYnJlYWs7dj15O3k9di5wYXJlbnROb2RlfXY9dX1iPS0xPT09Z3x8LTE9PT1oP251bGw6XG57c3RhcnQ6ZyxlbmQ6aH19ZWxzZSBiPW51bGx9Yj1ifHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBiPW51bGw7TWc9e2ZvY3VzZWRFbGVtOmEsc2VsZWN0aW9uUmFuZ2U6Yn07dWQoITEpfSxyZXNldEFmdGVyQ29tbWl0OmZ1bmN0aW9uKCl7dmFyIGE9TWcsYj1kYSgpLGM9YS5mb2N1c2VkRWxlbSxkPWEuc2VsZWN0aW9uUmFuZ2U7aWYoYiE9PWMmJmZhKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxjKSl7aWYoS2QoYykpaWYoYj1kLnN0YXJ0LGE9ZC5lbmQsdm9pZCAwPT09YSYmKGE9YiksXCJzZWxlY3Rpb25TdGFydFwiaW4gYyljLnNlbGVjdGlvblN0YXJ0PWIsYy5zZWxlY3Rpb25FbmQ9TWF0aC5taW4oYSxjLnZhbHVlLmxlbmd0aCk7ZWxzZSBpZih3aW5kb3cuZ2V0U2VsZWN0aW9uKXtiPXdpbmRvdy5nZXRTZWxlY3Rpb24oKTt2YXIgZT1jW0ViKCldLmxlbmd0aDthPU1hdGgubWluKGQuc3RhcnQsZSk7ZD12b2lkIDA9PT1kLmVuZD9hOk1hdGgubWluKGQuZW5kLGUpOyFiLmV4dGVuZCYmYT5cbmQmJihlPWQsZD1hLGE9ZSk7ZT1KZChjLGEpO3ZhciBmPUpkKGMsZCk7aWYoZSYmZiYmKDEhPT1iLnJhbmdlQ291bnR8fGIuYW5jaG9yTm9kZSE9PWUubm9kZXx8Yi5hbmNob3JPZmZzZXQhPT1lLm9mZnNldHx8Yi5mb2N1c05vZGUhPT1mLm5vZGV8fGIuZm9jdXNPZmZzZXQhPT1mLm9mZnNldCkpe3ZhciBnPWRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7Zy5zZXRTdGFydChlLm5vZGUsZS5vZmZzZXQpO2IucmVtb3ZlQWxsUmFuZ2VzKCk7YT5kPyhiLmFkZFJhbmdlKGcpLGIuZXh0ZW5kKGYubm9kZSxmLm9mZnNldCkpOihnLnNldEVuZChmLm5vZGUsZi5vZmZzZXQpLGIuYWRkUmFuZ2UoZykpfX1iPVtdO2ZvcihhPWM7YT1hLnBhcmVudE5vZGU7KTE9PT1hLm5vZGVUeXBlJiZiLnB1c2goe2VsZW1lbnQ6YSxsZWZ0OmEuc2Nyb2xsTGVmdCx0b3A6YS5zY3JvbGxUb3B9KTtpYShjKTtmb3IoYz0wO2M8Yi5sZW5ndGg7YysrKWE9YltjXSxhLmVsZW1lbnQuc2Nyb2xsTGVmdD1hLmxlZnQsYS5lbGVtZW50LnNjcm9sbFRvcD1cbmEudG9wfU1nPW51bGw7dWQoeGcpO3hnPW51bGx9LGNyZWF0ZUluc3RhbmNlOmZ1bmN0aW9uKGEsYixjLGQsZSl7YT1uZyhhLGIsYyxkKTthW1FdPWU7YVtvYl09YjtyZXR1cm4gYX0sYXBwZW5kSW5pdGlhbENoaWxkOmZ1bmN0aW9uKGEsYil7YS5hcHBlbmRDaGlsZChiKX0sZmluYWxpemVJbml0aWFsQ2hpbGRyZW46ZnVuY3Rpb24oYSxiLGMsZCl7cGcoYSxiLGMsZCk7YTp7c3dpdGNoKGIpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6YT0hIWMuYXV0b0ZvY3VzO2JyZWFrIGF9YT0hMX1yZXR1cm4gYX0scHJlcGFyZVVwZGF0ZTpmdW5jdGlvbihhLGIsYyxkLGUpe3JldHVybiBzZyhhLGIsYyxkLGUpfSxzaG91bGRTZXRUZXh0Q29udGVudDpmdW5jdGlvbihhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09XG50eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwic3RyaW5nXCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9LHNob3VsZERlcHJpb3JpdGl6ZVN1YnRyZWU6ZnVuY3Rpb24oYSxiKXtyZXR1cm4hIWIuaGlkZGVufSxjcmVhdGVUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oYSxiLGMsZCl7YT1vZyhhLGIpO2FbUV09ZDtyZXR1cm4gYX0sbm93OnJmLG11dGF0aW9uOntjb21taXRNb3VudDpmdW5jdGlvbihhKXthLmZvY3VzKCl9LGNvbW1pdFVwZGF0ZTpmdW5jdGlvbihhLGIsYyxkLGUpe2Fbb2JdPWU7dGcoYSxiLGMsZCxlKX0scmVzZXRUZXh0Q29udGVudDpmdW5jdGlvbihhKXthLnRleHRDb250ZW50PVwiXCJ9LGNvbW1pdFRleHRVcGRhdGU6ZnVuY3Rpb24oYSxiLGMpe2Eubm9kZVZhbHVlPWN9LGFwcGVuZENoaWxkOmZ1bmN0aW9uKGEsYil7YS5hcHBlbmRDaGlsZChiKX0sYXBwZW5kQ2hpbGRUb0NvbnRhaW5lcjpmdW5jdGlvbihhLFxuYil7OD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShiLGEpOmEuYXBwZW5kQ2hpbGQoYil9LGluc2VydEJlZm9yZTpmdW5jdGlvbihhLGIsYyl7YS5pbnNlcnRCZWZvcmUoYixjKX0saW5zZXJ0SW5Db250YWluZXJCZWZvcmU6ZnVuY3Rpb24oYSxiLGMpezg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYixjKTphLmluc2VydEJlZm9yZShiLGMpfSxyZW1vdmVDaGlsZDpmdW5jdGlvbihhLGIpe2EucmVtb3ZlQ2hpbGQoYil9LHJlbW92ZUNoaWxkRnJvbUNvbnRhaW5lcjpmdW5jdGlvbihhLGIpezg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChiKTphLnJlbW92ZUNoaWxkKGIpfX0saHlkcmF0aW9uOntjYW5IeWRyYXRlSW5zdGFuY2U6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gMSE9PWEubm9kZVR5cGV8fGIudG9Mb3dlckNhc2UoKSE9PWEubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmF9LGNhbkh5ZHJhdGVUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oYSxcbmIpe3JldHVyblwiXCI9PT1ifHwzIT09YS5ub2RlVHlwZT9udWxsOmF9LGdldE5leHRIeWRyYXRhYmxlU2libGluZzpmdW5jdGlvbihhKXtmb3IoYT1hLm5leHRTaWJsaW5nO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfSxnZXRGaXJzdEh5ZHJhdGFibGVDaGlsZDpmdW5jdGlvbihhKXtmb3IoYT1hLmZpcnN0Q2hpbGQ7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9LGh5ZHJhdGVJbnN0YW5jZTpmdW5jdGlvbihhLGIsYyxkLGUsZil7YVtRXT1mO2Fbb2JdPWM7cmV0dXJuIHVnKGEsYixjLGUsZCl9LGh5ZHJhdGVUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oYSxiLGMpe2FbUV09YztyZXR1cm4gdmcoYSxiKX0sZGlkTm90TWF0Y2hIeWRyYXRlZENvbnRhaW5lclRleHRJbnN0YW5jZTpmdW5jdGlvbigpe30sZGlkTm90TWF0Y2hIeWRyYXRlZFRleHRJbnN0YW5jZTpmdW5jdGlvbigpe30sXG5kaWROb3RIeWRyYXRlQ29udGFpbmVySW5zdGFuY2U6ZnVuY3Rpb24oKXt9LGRpZE5vdEh5ZHJhdGVJbnN0YW5jZTpmdW5jdGlvbigpe30sZGlkTm90RmluZEh5ZHJhdGFibGVDb250YWluZXJJbnN0YW5jZTpmdW5jdGlvbigpe30sZGlkTm90RmluZEh5ZHJhdGFibGVDb250YWluZXJUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oKXt9LGRpZE5vdEZpbmRIeWRyYXRhYmxlSW5zdGFuY2U6ZnVuY3Rpb24oKXt9LGRpZE5vdEZpbmRIeWRyYXRhYmxlVGV4dEluc3RhbmNlOmZ1bmN0aW9uKCl7fX0sc2NoZWR1bGVEZWZlcnJlZENhbGxiYWNrOnNmLGNhbmNlbERlZmVycmVkQ2FsbGJhY2s6dGYsdXNlU3luY1NjaGVkdWxpbmc6ITB9KTtyYz1aLmJhdGNoZWRVcGRhdGVzO1xuZnVuY3Rpb24gUGcoYSxiLGMsZCxlKXtOZyhjKT92b2lkIDA6RShcIjIwMFwiKTt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZilaLnVwZGF0ZUNvbnRhaW5lcihiLGYsYSxlKTtlbHNle2Q9ZHx8T2coYyk7aWYoIWQpZm9yKGY9dm9pZCAwO2Y9Yy5sYXN0Q2hpbGQ7KWMucmVtb3ZlQ2hpbGQoZik7dmFyIGc9Wi5jcmVhdGVDb250YWluZXIoYyxkKTtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1nO1oudW5iYXRjaGVkVXBkYXRlcyhmdW5jdGlvbigpe1oudXBkYXRlQ29udGFpbmVyKGIsZyxhLGUpfSl9cmV0dXJuIFouZ2V0UHVibGljUm9vdEluc3RhbmNlKGYpfWZ1bmN0aW9uIFFnKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7TmcoYik/dm9pZCAwOkUoXCIyMDBcIik7cmV0dXJuIHBmKGEsYixudWxsLGMpfVxuZnVuY3Rpb24gUmcoYSxiKXt0aGlzLl9yZWFjdFJvb3RDb250YWluZXI9Wi5jcmVhdGVDb250YWluZXIoYSxiKX1SZy5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEsYil7Wi51cGRhdGVDb250YWluZXIoYSx0aGlzLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCxiKX07UmcucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oYSl7Wi51cGRhdGVDb250YWluZXIobnVsbCx0aGlzLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCxhKX07XG52YXIgU2c9e2NyZWF0ZVBvcnRhbDpRZyxmaW5kRE9NTm9kZTpmdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjtpZihiKXJldHVybiBaLmZpbmRIb3N0SW5zdGFuY2UoYik7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyP0UoXCIxODhcIik6RShcIjIxM1wiLE9iamVjdC5rZXlzKGEpKX0saHlkcmF0ZTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIFBnKG51bGwsYSxiLCEwLGMpfSxyZW5kZXI6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBQZyhudWxsLGEsYiwhMSxjKX0sdW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI6ZnVuY3Rpb24oYSxiLGMsZCl7bnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyP0UoXCIzOFwiKTp2b2lkIDA7cmV0dXJuIFBnKGEsYixjLCExLGQpfSx1bm1vdW50Q29tcG9uZW50QXROb2RlOmZ1bmN0aW9uKGEpe05nKGEpP3ZvaWQgMDpcbkUoXCI0MFwiKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhaLnVuYmF0Y2hlZFVwZGF0ZXMoZnVuY3Rpb24oKXtQZyhudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsfSl9KSwhMCk6ITF9LHVuc3RhYmxlX2NyZWF0ZVBvcnRhbDpRZyx1bnN0YWJsZV9iYXRjaGVkVXBkYXRlczp0Yyx1bnN0YWJsZV9kZWZlcnJlZFVwZGF0ZXM6Wi5kZWZlcnJlZFVwZGF0ZXMsZmx1c2hTeW5jOlouZmx1c2hTeW5jLF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntFdmVudFBsdWdpbkh1YjptYixFdmVudFBsdWdpblJlZ2lzdHJ5OlZhLEV2ZW50UHJvcGFnYXRvcnM6Q2IsUmVhY3RDb250cm9sbGVkQ29tcG9uZW50OnFjLFJlYWN0RE9NQ29tcG9uZW50VHJlZTpzYixSZWFjdERPTUV2ZW50TGlzdGVuZXI6eGR9fTtcblouaW5qZWN0SW50b0RldlRvb2xzKHtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpwYixidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE2LjIuMFwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn0pO3ZhciBUZz1PYmplY3QuZnJlZXplKHtkZWZhdWx0OlNnfSksVWc9VGcmJlNnfHxUZzttb2R1bGUuZXhwb3J0cz1VZ1tcImRlZmF1bHRcIl0/VWdbXCJkZWZhdWx0XCJdOlVnO1xuXG5cbi8qKiovIH0pLFxuLyogOCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cblxuXG52YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcblxuLyoqXG4gKiBTaW1wbGUsIGxpZ2h0d2VpZ2h0IG1vZHVsZSBhc3Npc3Rpbmcgd2l0aCB0aGUgZGV0ZWN0aW9uIGFuZCBjb250ZXh0IG9mXG4gKiBXb3JrZXIuIEhlbHBzIGF2b2lkIGNpcmN1bGFyIGRlcGVuZGVuY2llcyBhbmQgYWxsb3dzIGNvZGUgdG8gcmVhc29uIGFib3V0XG4gKiB3aGV0aGVyIG9yIG5vdCB0aGV5IGFyZSBpbiBhIFdvcmtlciwgZXZlbiBpZiB0aGV5IG5ldmVyIGluY2x1ZGUgdGhlIG1haW5cbiAqIGBSZWFjdFdvcmtlcmAgZGVwZW5kZW5jeS5cbiAqL1xudmFyIEV4ZWN1dGlvbkVudmlyb25tZW50ID0ge1xuXG4gIGNhblVzZURPTTogY2FuVXNlRE9NLFxuXG4gIGNhblVzZVdvcmtlcnM6IHR5cGVvZiBXb3JrZXIgIT09ICd1bmRlZmluZWQnLFxuXG4gIGNhblVzZUV2ZW50TGlzdGVuZXJzOiBjYW5Vc2VET00gJiYgISEod2luZG93LmFkZEV2ZW50TGlzdGVuZXIgfHwgd2luZG93LmF0dGFjaEV2ZW50KSxcblxuICBjYW5Vc2VWaWV3cG9ydDogY2FuVXNlRE9NICYmICEhd2luZG93LnNjcmVlbixcblxuICBpc0luV29ya2VyOiAhY2FuVXNlRE9NIC8vIEZvciBub3csIHRoaXMgaXMgdHJ1ZSAtIG1pZ2h0IGNoYW5nZSBpbiB0aGUgZnV0dXJlLlxuXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEV4ZWN1dGlvbkVudmlyb25tZW50O1xuXG4vKioqLyB9KSxcbi8qIDkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICovXG5cbnZhciBlbXB0eUZ1bmN0aW9uID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxuLyoqXG4gKiBVcHN0cmVhbSB2ZXJzaW9uIG9mIGV2ZW50IGxpc3RlbmVyLiBEb2VzIG5vdCB0YWtlIGludG8gYWNjb3VudCBzcGVjaWZpY1xuICogbmF0dXJlIG9mIHBsYXRmb3JtLlxuICovXG52YXIgRXZlbnRMaXN0ZW5lciA9IHtcbiAgLyoqXG4gICAqIExpc3RlbiB0byBET00gZXZlbnRzIGR1cmluZyB0aGUgYnViYmxlIHBoYXNlLlxuICAgKlxuICAgKiBAcGFyYW0ge0RPTUV2ZW50VGFyZ2V0fSB0YXJnZXQgRE9NIGVsZW1lbnQgdG8gcmVnaXN0ZXIgbGlzdGVuZXIgb24uXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudFR5cGUgRXZlbnQgdHlwZSwgZS5nLiAnY2xpY2snIG9yICdtb3VzZW92ZXInLlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFjayBDYWxsYmFjayBmdW5jdGlvbi5cbiAgICogQHJldHVybiB7b2JqZWN0fSBPYmplY3Qgd2l0aCBhIGByZW1vdmVgIG1ldGhvZC5cbiAgICovXG4gIGxpc3RlbjogZnVuY3Rpb24gbGlzdGVuKHRhcmdldCwgZXZlbnRUeXBlLCBjYWxsYmFjaykge1xuICAgIGlmICh0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjaywgZmFsc2UpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICAgICAgdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjaywgZmFsc2UpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0gZWxzZSBpZiAodGFyZ2V0LmF0dGFjaEV2ZW50KSB7XG4gICAgICB0YXJnZXQuYXR0YWNoRXZlbnQoJ29uJyArIGV2ZW50VHlwZSwgY2FsbGJhY2spO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICAgICAgdGFyZ2V0LmRldGFjaEV2ZW50KCdvbicgKyBldmVudFR5cGUsIGNhbGxiYWNrKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIExpc3RlbiB0byBET00gZXZlbnRzIGR1cmluZyB0aGUgY2FwdHVyZSBwaGFzZS5cbiAgICpcbiAgICogQHBhcmFtIHtET01FdmVudFRhcmdldH0gdGFyZ2V0IERPTSBlbGVtZW50IHRvIHJlZ2lzdGVyIGxpc3RlbmVyIG9uLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXZlbnRUeXBlIEV2ZW50IHR5cGUsIGUuZy4gJ2NsaWNrJyBvciAnbW91c2VvdmVyJy5cbiAgICogQHBhcmFtIHtmdW5jdGlvbn0gY2FsbGJhY2sgQ2FsbGJhY2sgZnVuY3Rpb24uXG4gICAqIEByZXR1cm4ge29iamVjdH0gT2JqZWN0IHdpdGggYSBgcmVtb3ZlYCBtZXRob2QuXG4gICAqL1xuICBjYXB0dXJlOiBmdW5jdGlvbiBjYXB0dXJlKHRhcmdldCwgZXZlbnRUeXBlLCBjYWxsYmFjaykge1xuICAgIGlmICh0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjaywgdHJ1ZSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgICAgICB0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGNhbGxiYWNrLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGZhbHNlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0F0dGVtcHRlZCB0byBsaXN0ZW4gdG8gZXZlbnRzIGR1cmluZyB0aGUgY2FwdHVyZSBwaGFzZSBvbiBhICcgKyAnYnJvd3NlciB0aGF0IGRvZXMgbm90IHN1cHBvcnQgdGhlIGNhcHR1cmUgcGhhc2UuIFlvdXIgYXBwbGljYXRpb24gJyArICd3aWxsIG5vdCByZWNlaXZlIHNvbWUgZXZlbnRzLicpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcmVtb3ZlOiBlbXB0eUZ1bmN0aW9uXG4gICAgICB9O1xuICAgIH1cbiAgfSxcblxuICByZWdpc3RlckRlZmF1bHQ6IGZ1bmN0aW9uIHJlZ2lzdGVyRGVmYXVsdCgpIHt9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50TGlzdGVuZXI7XG5cbi8qKiovIH0pLFxuLyogMTAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICovXG5cbi8qIGVzbGludC1kaXNhYmxlIGZiLXd3dy90eXBlb2YtdW5kZWZpbmVkICovXG5cbi8qKlxuICogU2FtZSBhcyBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGJ1dCB3cmFwcyBpbiBhIHRyeS1jYXRjaCBibG9jay4gSW4gSUUgaXQgaXNcbiAqIG5vdCBzYWZlIHRvIGNhbGwgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBpZiB0aGVyZSBpcyBub3RoaW5nIGZvY3VzZWQuXG4gKlxuICogVGhlIGFjdGl2ZUVsZW1lbnQgd2lsbCBiZSBudWxsIG9ubHkgaWYgdGhlIGRvY3VtZW50IG9yIGRvY3VtZW50IGJvZHkgaXMgbm90XG4gKiB5ZXQgZGVmaW5lZC5cbiAqXG4gKiBAcGFyYW0gez9ET01Eb2N1bWVudH0gZG9jIERlZmF1bHRzIHRvIGN1cnJlbnQgZG9jdW1lbnQuXG4gKiBAcmV0dXJuIHs/RE9NRWxlbWVudH1cbiAqL1xuZnVuY3Rpb24gZ2V0QWN0aXZlRWxlbWVudChkb2MpIC8qP0RPTUVsZW1lbnQqL3tcbiAgZG9jID0gZG9jIHx8ICh0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnID8gZG9jdW1lbnQgOiB1bmRlZmluZWQpO1xuICBpZiAodHlwZW9mIGRvYyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICB0cnkge1xuICAgIHJldHVybiBkb2MuYWN0aXZlRWxlbWVudCB8fCBkb2MuYm9keTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBkb2MuYm9keTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldEFjdGl2ZUVsZW1lbnQ7XG5cbi8qKiovIH0pLFxuLyogMTEgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKiBcbiAqL1xuXG4vKmVzbGludC1kaXNhYmxlIG5vLXNlbGYtY29tcGFyZSAqL1xuXG5cblxudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBpbmxpbmVkIE9iamVjdC5pcyBwb2x5ZmlsbCB0byBhdm9pZCByZXF1aXJpbmcgY29uc3VtZXJzIHNoaXAgdGhlaXIgb3duXG4gKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9PYmplY3QvaXNcbiAqL1xuZnVuY3Rpb24gaXMoeCwgeSkge1xuICAvLyBTYW1lVmFsdWUgYWxnb3JpdGhtXG4gIGlmICh4ID09PSB5KSB7XG4gICAgLy8gU3RlcHMgMS01LCA3LTEwXG4gICAgLy8gU3RlcHMgNi5iLTYuZTogKzAgIT0gLTBcbiAgICAvLyBBZGRlZCB0aGUgbm9uemVybyB5IGNoZWNrIHRvIG1ha2UgRmxvdyBoYXBweSwgYnV0IGl0IGlzIHJlZHVuZGFudFxuICAgIHJldHVybiB4ICE9PSAwIHx8IHkgIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIC8vIFN0ZXAgNi5hOiBOYU4gPT0gTmFOXG4gICAgcmV0dXJuIHggIT09IHggJiYgeSAhPT0geTtcbiAgfVxufVxuXG4vKipcbiAqIFBlcmZvcm1zIGVxdWFsaXR5IGJ5IGl0ZXJhdGluZyB0aHJvdWdoIGtleXMgb24gYW4gb2JqZWN0IGFuZCByZXR1cm5pbmcgZmFsc2VcbiAqIHdoZW4gYW55IGtleSBoYXMgdmFsdWVzIHdoaWNoIGFyZSBub3Qgc3RyaWN0bHkgZXF1YWwgYmV0d2VlbiB0aGUgYXJndW1lbnRzLlxuICogUmV0dXJucyB0cnVlIHdoZW4gdGhlIHZhbHVlcyBvZiBhbGwga2V5cyBhcmUgc3RyaWN0bHkgZXF1YWwuXG4gKi9cbmZ1bmN0aW9uIHNoYWxsb3dFcXVhbChvYmpBLCBvYmpCKSB7XG4gIGlmIChpcyhvYmpBLCBvYmpCKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvYmpBICE9PSAnb2JqZWN0JyB8fCBvYmpBID09PSBudWxsIHx8IHR5cGVvZiBvYmpCICE9PSAnb2JqZWN0JyB8fCBvYmpCID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIGtleXNBID0gT2JqZWN0LmtleXMob2JqQSk7XG4gIHZhciBrZXlzQiA9IE9iamVjdC5rZXlzKG9iakIpO1xuXG4gIGlmIChrZXlzQS5sZW5ndGggIT09IGtleXNCLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8vIFRlc3QgZm9yIEEncyBrZXlzIGRpZmZlcmVudCBmcm9tIEIuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwga2V5c0EubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoIWhhc093blByb3BlcnR5LmNhbGwob2JqQiwga2V5c0FbaV0pIHx8ICFpcyhvYmpBW2tleXNBW2ldXSwgb2JqQltrZXlzQVtpXV0pKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hhbGxvd0VxdWFsO1xuXG4vKioqLyB9KSxcbi8qIDEyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKi9cblxudmFyIGlzVGV4dE5vZGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEzKTtcblxuLyplc2xpbnQtZGlzYWJsZSBuby1iaXR3aXNlICovXG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgZ2l2ZW4gRE9NIG5vZGUgY29udGFpbnMgb3IgaXMgYW5vdGhlciBET00gbm9kZS5cbiAqL1xuZnVuY3Rpb24gY29udGFpbnNOb2RlKG91dGVyTm9kZSwgaW5uZXJOb2RlKSB7XG4gIGlmICghb3V0ZXJOb2RlIHx8ICFpbm5lck5vZGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0gZWxzZSBpZiAob3V0ZXJOb2RlID09PSBpbm5lck5vZGUpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIGlmIChpc1RleHROb2RlKG91dGVyTm9kZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0gZWxzZSBpZiAoaXNUZXh0Tm9kZShpbm5lck5vZGUpKSB7XG4gICAgcmV0dXJuIGNvbnRhaW5zTm9kZShvdXRlck5vZGUsIGlubmVyTm9kZS5wYXJlbnROb2RlKTtcbiAgfSBlbHNlIGlmICgnY29udGFpbnMnIGluIG91dGVyTm9kZSkge1xuICAgIHJldHVybiBvdXRlck5vZGUuY29udGFpbnMoaW5uZXJOb2RlKTtcbiAgfSBlbHNlIGlmIChvdXRlck5vZGUuY29tcGFyZURvY3VtZW50UG9zaXRpb24pIHtcbiAgICByZXR1cm4gISEob3V0ZXJOb2RlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGlubmVyTm9kZSkgJiAxNik7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29udGFpbnNOb2RlO1xuXG4vKioqLyB9KSxcbi8qIDEzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG52YXIgaXNOb2RlID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNCk7XG5cbi8qKlxuICogQHBhcmFtIHsqfSBvYmplY3QgVGhlIG9iamVjdCB0byBjaGVjay5cbiAqIEByZXR1cm4ge2Jvb2xlYW59IFdoZXRoZXIgb3Igbm90IHRoZSBvYmplY3QgaXMgYSBET00gdGV4dCBub2RlLlxuICovXG5mdW5jdGlvbiBpc1RleHROb2RlKG9iamVjdCkge1xuICByZXR1cm4gaXNOb2RlKG9iamVjdCkgJiYgb2JqZWN0Lm5vZGVUeXBlID09IDM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNUZXh0Tm9kZTtcblxuLyoqKi8gfSksXG4vKiAxNCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0geyp9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNoZWNrLlxuICogQHJldHVybiB7Ym9vbGVhbn0gV2hldGhlciBvciBub3QgdGhlIG9iamVjdCBpcyBhIERPTSBub2RlLlxuICovXG5mdW5jdGlvbiBpc05vZGUob2JqZWN0KSB7XG4gIHZhciBkb2MgPSBvYmplY3QgPyBvYmplY3Qub3duZXJEb2N1bWVudCB8fCBvYmplY3QgOiBkb2N1bWVudDtcbiAgdmFyIGRlZmF1bHRWaWV3ID0gZG9jLmRlZmF1bHRWaWV3IHx8IHdpbmRvdztcbiAgcmV0dXJuICEhKG9iamVjdCAmJiAodHlwZW9mIGRlZmF1bHRWaWV3Lk5vZGUgPT09ICdmdW5jdGlvbicgPyBvYmplY3QgaW5zdGFuY2VvZiBkZWZhdWx0Vmlldy5Ob2RlIDogdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG9iamVjdC5ub2RlVHlwZSA9PT0gJ251bWJlcicgJiYgdHlwZW9mIG9iamVjdC5ub2RlTmFtZSA9PT0gJ3N0cmluZycpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc05vZGU7XG5cbi8qKiovIH0pLFxuLyogMTUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG5cblxuLyoqXG4gKiBAcGFyYW0ge0RPTUVsZW1lbnR9IG5vZGUgaW5wdXQvdGV4dGFyZWEgdG8gZm9jdXNcbiAqL1xuXG5mdW5jdGlvbiBmb2N1c05vZGUobm9kZSkge1xuICAvLyBJRTggY2FuIHRocm93IFwiQ2FuJ3QgbW92ZSBmb2N1cyB0byB0aGUgY29udHJvbCBiZWNhdXNlIGl0IGlzIGludmlzaWJsZSxcbiAgLy8gbm90IGVuYWJsZWQsIG9yIG9mIGEgdHlwZSB0aGF0IGRvZXMgbm90IGFjY2VwdCB0aGUgZm9jdXMuXCIgZm9yIGFsbCBraW5kcyBvZlxuICAvLyByZWFzb25zIHRoYXQgYXJlIHRvbyBleHBlbnNpdmUgYW5kIGZyYWdpbGUgdG8gdGVzdC5cbiAgdHJ5IHtcbiAgICBub2RlLmZvY3VzKCk7XG4gIH0gY2F0Y2ggKGUpIHt9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZm9jdXNOb2RlO1xuXG4vKioqLyB9KSxcbi8qIDE2ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfaW5WaWV3ID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNyk7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnZGVmYXVsdCcsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2luVmlldykuZGVmYXVsdDtcbiAgfVxufSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8qKiovIH0pLFxuLyogMTcgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBXRUJQQUNLIFZBUiBJTkpFQ1RJT04gKi8oZnVuY3Rpb24ocHJvY2Vzcykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX3JlYWN0ID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfcmVhY3REb20gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpO1xuXG52YXIgX2xvZGFzaCA9IF9fd2VicGFja19yZXF1aXJlX18oMTkpO1xuXG52YXIgX2xvZGFzaDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9sb2Rhc2gpO1xuXG52YXIgX3V0aWwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIwKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgb25XaW5kb3dTY3JvbGwgPSAoMCwgX3V0aWwub24pKCdzY3JvbGwnLCB7IGNhcHR1cmU6IHRydWUsIHBhc3NpdmU6IHRydWUgfSkod2luZG93KTtcbnZhciBpc1Byb2QgPSBwcm9jZXNzICYmIHByb2Nlc3MuZW52ICYmIFwicHJvZHVjdGlvblwiID09PSAncHJvZHVjdGlvbic7XG5cbnZhciBJblZpZXcgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoSW5WaWV3LCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBJblZpZXcoKSB7XG4gICAgdmFyIF9yZWY7XG5cbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEluVmlldyk7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChfcmVmID0gSW5WaWV3Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoSW5WaWV3KSkuY2FsbC5hcHBseShfcmVmLCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMubW91bnRlZCA9IGZhbHNlLCBfdGhpcy5zdGF0ZSA9IHsgaXNJblZpZXc6IGZhbHNlLCBoYXNVcGRhdGVkOiBmYWxzZSB9LCBfdGhpcy5jaGVja0lzSW5WaWV3ID0gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKCFfdGhpcy5tb3VudGVkKSByZXR1cm47XG4gICAgICBpZiAoX3RoaXMucHJvcHMub25jZSAmJiBfdGhpcy5zdGF0ZS5oYXNVcGRhdGVkKSByZXR1cm47XG4gICAgICB2YXIgdGhyZXNob2xkID0gX3RoaXMucHJvcHMudGhyZXNob2xkO1xuXG4gICAgICBpZiAodGhyZXNob2xkID4gMTAgJiYgaXNQcm9kKSB7XG4gICAgICAgIGNvbnNvbGUud2FybignSGlnaCBJblZpZXcgdGhyZXNob2xkOiBcIicgKyB0aHJlc2hvbGQgKyAnXCIuIFRocmVzaG9sZCBpcyBtdWx0aXBsaWVkIGJ5IHRoZSB2aWV3cG9ydCBkaW1lbnNpb25zIScpO1xuICAgICAgfVxuXG4gICAgICB2YXIgd2FzSW5WaWV3ID0gX3RoaXMuc3RhdGUuaXNJblZpZXc7XG4gICAgICB2YXIgaXNOb3dJblZpZXcgPSBfdGhpcy5pc0luVmlld3BvcnQoX3RoaXMuX3JlZik7XG5cbiAgICAgIGlmICh3YXNJblZpZXcgIT09IGlzTm93SW5WaWV3KSB7XG4gICAgICAgIF90aGlzLnNldFN0YXRlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaXNJblZpZXc6IGlzTm93SW5WaWV3LFxuICAgICAgICAgICAgaGFzVXBkYXRlZDogdHJ1ZVxuICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sIF90aGlzLmNoZWNrSXNJblZpZXdEZWJvdW5jZWQgPSAoMCwgX2xvZGFzaDIuZGVmYXVsdCkoX3RoaXMuY2hlY2tJc0luVmlldywgX3RoaXMucHJvcHMuZGVib3VuY2UpLCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhJblZpZXcsIFt7XG4gICAga2V5OiAnY29tcG9uZW50RGlkTW91bnQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIHRoaXMubW91bnRlZCA9IHRydWU7XG4gICAgICB0aGlzLl9yZWYgPSAoMCwgX3JlYWN0RG9tLmZpbmRET01Ob2RlKSh0aGlzKTtcbiAgICAgIHRoaXMuaXNJblZpZXdwb3J0ID0gKDAsIF91dGlsLmluVmlld3BvcnQpKHtcbiAgICAgICAgdGhyZXNob2xkOiB0aGlzLnByb3BzLnRocmVzaG9sZCxcbiAgICAgICAgYm91bmRpbmdMZWZ0OiB0aGlzLnByb3BzLmJvdW5kaW5nTGVmdCxcbiAgICAgICAgYm91bmRpbmdSaWdodDogdGhpcy5wcm9wcy5ib3VuZGluZ1JpZ2h0LFxuICAgICAgICByZXF1aXJlRW50aXJlRWxlbWVudEluVmlld3BvcnQ6IHRydWUgfSk7XG4gICAgICB0aGlzLmNoZWNrSXNJblZpZXcoKTtcbiAgICAgIHRoaXMuc2Nyb2xsVW5zdWJzY3JpYmUgPSBvbldpbmRvd1Njcm9sbCh0aGlzLmNoZWNrSXNJblZpZXdEZWJvdW5jZWQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2NvbXBvbmVudFdpbGxVbm1vdW50JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICB0aGlzLm1vdW50ZWQgPSBmYWxzZTtcbiAgICAgIHRoaXMuc2Nyb2xsVW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIHZhciB0aHJlc2hvbGQgPSBuZXh0UHJvcHMudGhyZXNob2xkLFxuICAgICAgICAgIGRlYm91bmNlID0gbmV4dFByb3BzLmRlYm91bmNlO1xuXG4gICAgICB0aGlzLmlzSW5WaWV3cG9ydCA9ICgwLCBfdXRpbC5pblZpZXdwb3J0KSh7IHRocmVzaG9sZDogdGhyZXNob2xkLCByZXF1aXJlRW50aXJlRWxlbWVudEluVmlld3BvcnQ6IHRydWUgfSk7XG4gICAgICB0aGlzLmNoZWNrSXNJblZpZXdEZWJvdW5jZWQgPSAoMCwgX2xvZGFzaDIuZGVmYXVsdCkodGhpcy5jaGVja0lzSW5WaWV3LCBkZWJvdW5jZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVuZGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW4odGhpcy5zdGF0ZS5pc0luVmlldyk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEluVmlldztcbn0oX3JlYWN0Mi5kZWZhdWx0LkNvbXBvbmVudCk7XG5cbkluVmlldy5kZWZhdWx0UHJvcHMgPSB7XG4gIGRlYm91bmNlOiAyNTAsXG4gIHRocmVzaG9sZDogMCxcbiAgb25jZTogZmFsc2Vcbn07XG5leHBvcnRzLmRlZmF1bHQgPSBJblZpZXc7XG4vKiBXRUJQQUNLIFZBUiBJTkpFQ1RJT04gKi99LmNhbGwoZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXygxOCkpKVxuXG4vKioqLyB9KSxcbi8qIDE4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIHNoaW0gZm9yIHVzaW5nIHByb2Nlc3MgaW4gYnJvd3NlclxudmFyIHByb2Nlc3MgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xuXG4vLyBjYWNoZWQgZnJvbSB3aGF0ZXZlciBnbG9iYWwgaXMgcHJlc2VudCBzbyB0aGF0IHRlc3QgcnVubmVycyB0aGF0IHN0dWIgaXRcbi8vIGRvbid0IGJyZWFrIHRoaW5ncy4gIEJ1dCB3ZSBuZWVkIHRvIHdyYXAgaXQgaW4gYSB0cnkgY2F0Y2ggaW4gY2FzZSBpdCBpc1xuLy8gd3JhcHBlZCBpbiBzdHJpY3QgbW9kZSBjb2RlIHdoaWNoIGRvZXNuJ3QgZGVmaW5lIGFueSBnbG9iYWxzLiAgSXQncyBpbnNpZGUgYVxuLy8gZnVuY3Rpb24gYmVjYXVzZSB0cnkvY2F0Y2hlcyBkZW9wdGltaXplIGluIGNlcnRhaW4gZW5naW5lcy5cblxudmFyIGNhY2hlZFNldFRpbWVvdXQ7XG52YXIgY2FjaGVkQ2xlYXJUaW1lb3V0O1xuXG5mdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCkge1xuICAgIHRocm93IG5ldyBFcnJvcignc2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCAoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbihmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBzZXRUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhclRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgfVxufSAoKSlcbmZ1bmN0aW9uIHJ1blRpbWVvdXQoZnVuKSB7XG4gICAgaWYgKGNhY2hlZFNldFRpbWVvdXQgPT09IHNldFRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIC8vIGlmIHNldFRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRTZXRUaW1lb3V0ID09PSBkZWZhdWx0U2V0VGltb3V0IHx8ICFjYWNoZWRTZXRUaW1lb3V0KSAmJiBzZXRUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfSBjYXRjaChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbChudWxsLCBmdW4sIDApO1xuICAgICAgICB9IGNhdGNoKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3JcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwodGhpcywgZnVuLCAwKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG59XG5mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQobWFya2VyKSB7XG4gICAgaWYgKGNhY2hlZENsZWFyVGltZW91dCA9PT0gY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIC8vIGlmIGNsZWFyVGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZENsZWFyVGltZW91dCA9PT0gZGVmYXVsdENsZWFyVGltZW91dCB8fCAhY2FjaGVkQ2xlYXJUaW1lb3V0KSAmJiBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0ICB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKG51bGwsIG1hcmtlcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3IuXG4gICAgICAgICAgICAvLyBTb21lIHZlcnNpb25zIG9mIEkuRS4gaGF2ZSBkaWZmZXJlbnQgcnVsZXMgZm9yIGNsZWFyVGltZW91dCB2cyBzZXRUaW1lb3V0XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwodGhpcywgbWFya2VyKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG5cbn1cbnZhciBxdWV1ZSA9IFtdO1xudmFyIGRyYWluaW5nID0gZmFsc2U7XG52YXIgY3VycmVudFF1ZXVlO1xudmFyIHF1ZXVlSW5kZXggPSAtMTtcblxuZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkge1xuICAgIGlmICghZHJhaW5pbmcgfHwgIWN1cnJlbnRRdWV1ZSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgaWYgKGN1cnJlbnRRdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcXVldWUgPSBjdXJyZW50UXVldWUuY29uY2F0KHF1ZXVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgfVxuICAgIGlmIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgZHJhaW5RdWV1ZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHtcbiAgICBpZiAoZHJhaW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgdGltZW91dCA9IHJ1blRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtcbiAgICBkcmFpbmluZyA9IHRydWU7XG5cbiAgICB2YXIgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIHdoaWxlKGxlbikge1xuICAgICAgICBjdXJyZW50UXVldWUgPSBxdWV1ZTtcbiAgICAgICAgcXVldWUgPSBbXTtcbiAgICAgICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRRdWV1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRRdWV1ZVtxdWV1ZUluZGV4XS5ydW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgICAgIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB9XG4gICAgY3VycmVudFF1ZXVlID0gbnVsbDtcbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIHJ1bkNsZWFyVGltZW91dCh0aW1lb3V0KTtcbn1cblxucHJvY2Vzcy5uZXh0VGljayA9IGZ1bmN0aW9uIChmdW4pIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSk7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5wdXNoKG5ldyBJdGVtKGZ1biwgYXJncykpO1xuICAgIGlmIChxdWV1ZS5sZW5ndGggPT09IDEgJiYgIWRyYWluaW5nKSB7XG4gICAgICAgIHJ1blRpbWVvdXQoZHJhaW5RdWV1ZSk7XG4gICAgfVxufTtcblxuLy8gdjggbGlrZXMgcHJlZGljdGlibGUgb2JqZWN0c1xuZnVuY3Rpb24gSXRlbShmdW4sIGFycmF5KSB7XG4gICAgdGhpcy5mdW4gPSBmdW47XG4gICAgdGhpcy5hcnJheSA9IGFycmF5O1xufVxuSXRlbS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZnVuLmFwcGx5KG51bGwsIHRoaXMuYXJyYXkpO1xufTtcbnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7XG5wcm9jZXNzLmJyb3dzZXIgPSB0cnVlO1xucHJvY2Vzcy5lbnYgPSB7fTtcbnByb2Nlc3MuYXJndiA9IFtdO1xucHJvY2Vzcy52ZXJzaW9uID0gJyc7IC8vIGVtcHR5IHN0cmluZyB0byBhdm9pZCByZWdleHAgaXNzdWVzXG5wcm9jZXNzLnZlcnNpb25zID0ge307XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5wcm9jZXNzLm9uID0gbm9vcDtcbnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5vbmNlID0gbm9vcDtcbnByb2Nlc3Mub2ZmID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBub29wO1xucHJvY2Vzcy5lbWl0ID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZE9uY2VMaXN0ZW5lciA9IG5vb3A7XG5cbnByb2Nlc3MubGlzdGVuZXJzID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIFtdIH1cblxucHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xuXG5wcm9jZXNzLmN3ZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICcvJyB9O1xucHJvY2Vzcy5jaGRpciA9IGZ1bmN0aW9uIChkaXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcbnByb2Nlc3MudW1hc2sgPSBmdW5jdGlvbigpIHsgcmV0dXJuIDA7IH07XG5cblxuLyoqKi8gfSksXG4vKiAxOSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG4vKiBXRUJQQUNLIFZBUiBJTkpFQ1RJT04gKi8oZnVuY3Rpb24oZ2xvYmFsKSB7LyoqXG4gKiBsb2Rhc2ggKEN1c3RvbSBCdWlsZCkgPGh0dHBzOi8vbG9kYXNoLmNvbS8+XG4gKiBCdWlsZDogYGxvZGFzaCBtb2R1bGFyaXplIGV4cG9ydHM9XCJucG1cIiAtbyAuL2BcbiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzIDxodHRwczovL2pxdWVyeS5vcmcvPlxuICogUmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UgPGh0dHBzOi8vbG9kYXNoLmNvbS9saWNlbnNlPlxuICogQmFzZWQgb24gVW5kZXJzY29yZS5qcyAxLjguMyA8aHR0cDovL3VuZGVyc2NvcmVqcy5vcmcvTElDRU5TRT5cbiAqIENvcHlyaWdodCBKZXJlbXkgQXNoa2VuYXMsIERvY3VtZW50Q2xvdWQgYW5kIEludmVzdGlnYXRpdmUgUmVwb3J0ZXJzICYgRWRpdG9yc1xuICovXG5cbi8qKiBVc2VkIGFzIHRoZSBgVHlwZUVycm9yYCBtZXNzYWdlIGZvciBcIkZ1bmN0aW9uc1wiIG1ldGhvZHMuICovXG52YXIgRlVOQ19FUlJPUl9URVhUID0gJ0V4cGVjdGVkIGEgZnVuY3Rpb24nO1xuXG4vKiogVXNlZCBhcyByZWZlcmVuY2VzIGZvciB2YXJpb3VzIGBOdW1iZXJgIGNvbnN0YW50cy4gKi9cbnZhciBOQU4gPSAwIC8gMDtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIHN5bWJvbFRhZyA9ICdbb2JqZWN0IFN5bWJvbF0nO1xuXG4vKiogVXNlZCB0byBtYXRjaCBsZWFkaW5nIGFuZCB0cmFpbGluZyB3aGl0ZXNwYWNlLiAqL1xudmFyIHJlVHJpbSA9IC9eXFxzK3xcXHMrJC9nO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgYmFkIHNpZ25lZCBoZXhhZGVjaW1hbCBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlSXNCYWRIZXggPSAvXlstK10weFswLTlhLWZdKyQvaTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IGJpbmFyeSBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlSXNCaW5hcnkgPSAvXjBiWzAxXSskL2k7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBvY3RhbCBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlSXNPY3RhbCA9IC9eMG9bMC03XSskL2k7XG5cbi8qKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyB3aXRob3V0IGEgZGVwZW5kZW5jeSBvbiBgcm9vdGAuICovXG52YXIgZnJlZVBhcnNlSW50ID0gcGFyc2VJbnQ7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgZ2xvYmFsYCBmcm9tIE5vZGUuanMuICovXG52YXIgZnJlZUdsb2JhbCA9IHR5cGVvZiBnbG9iYWwgPT0gJ29iamVjdCcgJiYgZ2xvYmFsICYmIGdsb2JhbC5PYmplY3QgPT09IE9iamVjdCAmJiBnbG9iYWw7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgc2VsZmAuICovXG52YXIgZnJlZVNlbGYgPSB0eXBlb2Ygc2VsZiA9PSAnb2JqZWN0JyAmJiBzZWxmICYmIHNlbGYuT2JqZWN0ID09PSBPYmplY3QgJiYgc2VsZjtcblxuLyoqIFVzZWQgYXMgYSByZWZlcmVuY2UgdG8gdGhlIGdsb2JhbCBvYmplY3QuICovXG52YXIgcm9vdCA9IGZyZWVHbG9iYWwgfHwgZnJlZVNlbGYgfHwgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqXG4gKiBVc2VkIHRvIHJlc29sdmUgdGhlXG4gKiBbYHRvU3RyaW5nVGFnYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtb2JqZWN0LnByb3RvdHlwZS50b3N0cmluZylcbiAqIG9mIHZhbHVlcy5cbiAqL1xudmFyIG9iamVjdFRvU3RyaW5nID0gb2JqZWN0UHJvdG8udG9TdHJpbmc7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIGZvciB0aG9zZSB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgb3RoZXIgYGxvZGFzaGAgbWV0aG9kcy4gKi9cbnZhciBuYXRpdmVNYXggPSBNYXRoLm1heCxcbiAgICBuYXRpdmVNaW4gPSBNYXRoLm1pbjtcblxuLyoqXG4gKiBHZXRzIHRoZSB0aW1lc3RhbXAgb2YgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgdGhhdCBoYXZlIGVsYXBzZWQgc2luY2VcbiAqIHRoZSBVbml4IGVwb2NoICgxIEphbnVhcnkgMTk3MCAwMDowMDowMCBVVEMpLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMi40LjBcbiAqIEBjYXRlZ29yeSBEYXRlXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSB0aW1lc3RhbXAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uZGVmZXIoZnVuY3Rpb24oc3RhbXApIHtcbiAqICAgY29uc29sZS5sb2coXy5ub3coKSAtIHN0YW1wKTtcbiAqIH0sIF8ubm93KCkpO1xuICogLy8gPT4gTG9ncyB0aGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyBpdCB0b29rIGZvciB0aGUgZGVmZXJyZWQgaW52b2NhdGlvbi5cbiAqL1xudmFyIG5vdyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcm9vdC5EYXRlLm5vdygpO1xufTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgZGVib3VuY2VkIGZ1bmN0aW9uIHRoYXQgZGVsYXlzIGludm9raW5nIGBmdW5jYCB1bnRpbCBhZnRlciBgd2FpdGBcbiAqIG1pbGxpc2Vjb25kcyBoYXZlIGVsYXBzZWQgc2luY2UgdGhlIGxhc3QgdGltZSB0aGUgZGVib3VuY2VkIGZ1bmN0aW9uIHdhc1xuICogaW52b2tlZC4gVGhlIGRlYm91bmNlZCBmdW5jdGlvbiBjb21lcyB3aXRoIGEgYGNhbmNlbGAgbWV0aG9kIHRvIGNhbmNlbFxuICogZGVsYXllZCBgZnVuY2AgaW52b2NhdGlvbnMgYW5kIGEgYGZsdXNoYCBtZXRob2QgdG8gaW1tZWRpYXRlbHkgaW52b2tlIHRoZW0uXG4gKiBQcm92aWRlIGBvcHRpb25zYCB0byBpbmRpY2F0ZSB3aGV0aGVyIGBmdW5jYCBzaG91bGQgYmUgaW52b2tlZCBvbiB0aGVcbiAqIGxlYWRpbmcgYW5kL29yIHRyYWlsaW5nIGVkZ2Ugb2YgdGhlIGB3YWl0YCB0aW1lb3V0LiBUaGUgYGZ1bmNgIGlzIGludm9rZWRcbiAqIHdpdGggdGhlIGxhc3QgYXJndW1lbnRzIHByb3ZpZGVkIHRvIHRoZSBkZWJvdW5jZWQgZnVuY3Rpb24uIFN1YnNlcXVlbnRcbiAqIGNhbGxzIHRvIHRoZSBkZWJvdW5jZWQgZnVuY3Rpb24gcmV0dXJuIHRoZSByZXN1bHQgb2YgdGhlIGxhc3QgYGZ1bmNgXG4gKiBpbnZvY2F0aW9uLlxuICpcbiAqICoqTm90ZToqKiBJZiBgbGVhZGluZ2AgYW5kIGB0cmFpbGluZ2Agb3B0aW9ucyBhcmUgYHRydWVgLCBgZnVuY2AgaXNcbiAqIGludm9rZWQgb24gdGhlIHRyYWlsaW5nIGVkZ2Ugb2YgdGhlIHRpbWVvdXQgb25seSBpZiB0aGUgZGVib3VuY2VkIGZ1bmN0aW9uXG4gKiBpcyBpbnZva2VkIG1vcmUgdGhhbiBvbmNlIGR1cmluZyB0aGUgYHdhaXRgIHRpbWVvdXQuXG4gKlxuICogSWYgYHdhaXRgIGlzIGAwYCBhbmQgYGxlYWRpbmdgIGlzIGBmYWxzZWAsIGBmdW5jYCBpbnZvY2F0aW9uIGlzIGRlZmVycmVkXG4gKiB1bnRpbCB0byB0aGUgbmV4dCB0aWNrLCBzaW1pbGFyIHRvIGBzZXRUaW1lb3V0YCB3aXRoIGEgdGltZW91dCBvZiBgMGAuXG4gKlxuICogU2VlIFtEYXZpZCBDb3JiYWNobydzIGFydGljbGVdKGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vZGVib3VuY2luZy10aHJvdHRsaW5nLWV4cGxhaW5lZC1leGFtcGxlcy8pXG4gKiBmb3IgZGV0YWlscyBvdmVyIHRoZSBkaWZmZXJlbmNlcyBiZXR3ZWVuIGBfLmRlYm91bmNlYCBhbmQgYF8udGhyb3R0bGVgLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBGdW5jdGlvblxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gZGVib3VuY2UuXG4gKiBAcGFyYW0ge251bWJlcn0gW3dhaXQ9MF0gVGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgdG8gZGVsYXkuXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnM9e31dIFRoZSBvcHRpb25zIG9iamVjdC5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMubGVhZGluZz1mYWxzZV1cbiAqICBTcGVjaWZ5IGludm9raW5nIG9uIHRoZSBsZWFkaW5nIGVkZ2Ugb2YgdGhlIHRpbWVvdXQuXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMubWF4V2FpdF1cbiAqICBUaGUgbWF4aW11bSB0aW1lIGBmdW5jYCBpcyBhbGxvd2VkIHRvIGJlIGRlbGF5ZWQgYmVmb3JlIGl0J3MgaW52b2tlZC5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMudHJhaWxpbmc9dHJ1ZV1cbiAqICBTcGVjaWZ5IGludm9raW5nIG9uIHRoZSB0cmFpbGluZyBlZGdlIG9mIHRoZSB0aW1lb3V0LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgZGVib3VuY2VkIGZ1bmN0aW9uLlxuICogQGV4YW1wbGVcbiAqXG4gKiAvLyBBdm9pZCBjb3N0bHkgY2FsY3VsYXRpb25zIHdoaWxlIHRoZSB3aW5kb3cgc2l6ZSBpcyBpbiBmbHV4LlxuICogalF1ZXJ5KHdpbmRvdykub24oJ3Jlc2l6ZScsIF8uZGVib3VuY2UoY2FsY3VsYXRlTGF5b3V0LCAxNTApKTtcbiAqXG4gKiAvLyBJbnZva2UgYHNlbmRNYWlsYCB3aGVuIGNsaWNrZWQsIGRlYm91bmNpbmcgc3Vic2VxdWVudCBjYWxscy5cbiAqIGpRdWVyeShlbGVtZW50KS5vbignY2xpY2snLCBfLmRlYm91bmNlKHNlbmRNYWlsLCAzMDAsIHtcbiAqICAgJ2xlYWRpbmcnOiB0cnVlLFxuICogICAndHJhaWxpbmcnOiBmYWxzZVxuICogfSkpO1xuICpcbiAqIC8vIEVuc3VyZSBgYmF0Y2hMb2dgIGlzIGludm9rZWQgb25jZSBhZnRlciAxIHNlY29uZCBvZiBkZWJvdW5jZWQgY2FsbHMuXG4gKiB2YXIgZGVib3VuY2VkID0gXy5kZWJvdW5jZShiYXRjaExvZywgMjUwLCB7ICdtYXhXYWl0JzogMTAwMCB9KTtcbiAqIHZhciBzb3VyY2UgPSBuZXcgRXZlbnRTb3VyY2UoJy9zdHJlYW0nKTtcbiAqIGpRdWVyeShzb3VyY2UpLm9uKCdtZXNzYWdlJywgZGVib3VuY2VkKTtcbiAqXG4gKiAvLyBDYW5jZWwgdGhlIHRyYWlsaW5nIGRlYm91bmNlZCBpbnZvY2F0aW9uLlxuICogalF1ZXJ5KHdpbmRvdykub24oJ3BvcHN0YXRlJywgZGVib3VuY2VkLmNhbmNlbCk7XG4gKi9cbmZ1bmN0aW9uIGRlYm91bmNlKGZ1bmMsIHdhaXQsIG9wdGlvbnMpIHtcbiAgdmFyIGxhc3RBcmdzLFxuICAgICAgbGFzdFRoaXMsXG4gICAgICBtYXhXYWl0LFxuICAgICAgcmVzdWx0LFxuICAgICAgdGltZXJJZCxcbiAgICAgIGxhc3RDYWxsVGltZSxcbiAgICAgIGxhc3RJbnZva2VUaW1lID0gMCxcbiAgICAgIGxlYWRpbmcgPSBmYWxzZSxcbiAgICAgIG1heGluZyA9IGZhbHNlLFxuICAgICAgdHJhaWxpbmcgPSB0cnVlO1xuXG4gIGlmICh0eXBlb2YgZnVuYyAhPSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihGVU5DX0VSUk9SX1RFWFQpO1xuICB9XG4gIHdhaXQgPSB0b051bWJlcih3YWl0KSB8fCAwO1xuICBpZiAoaXNPYmplY3Qob3B0aW9ucykpIHtcbiAgICBsZWFkaW5nID0gISFvcHRpb25zLmxlYWRpbmc7XG4gICAgbWF4aW5nID0gJ21heFdhaXQnIGluIG9wdGlvbnM7XG4gICAgbWF4V2FpdCA9IG1heGluZyA/IG5hdGl2ZU1heCh0b051bWJlcihvcHRpb25zLm1heFdhaXQpIHx8IDAsIHdhaXQpIDogbWF4V2FpdDtcbiAgICB0cmFpbGluZyA9ICd0cmFpbGluZycgaW4gb3B0aW9ucyA/ICEhb3B0aW9ucy50cmFpbGluZyA6IHRyYWlsaW5nO1xuICB9XG5cbiAgZnVuY3Rpb24gaW52b2tlRnVuYyh0aW1lKSB7XG4gICAgdmFyIGFyZ3MgPSBsYXN0QXJncyxcbiAgICAgICAgdGhpc0FyZyA9IGxhc3RUaGlzO1xuXG4gICAgbGFzdEFyZ3MgPSBsYXN0VGhpcyA9IHVuZGVmaW5lZDtcbiAgICBsYXN0SW52b2tlVGltZSA9IHRpbWU7XG4gICAgcmVzdWx0ID0gZnVuYy5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gbGVhZGluZ0VkZ2UodGltZSkge1xuICAgIC8vIFJlc2V0IGFueSBgbWF4V2FpdGAgdGltZXIuXG4gICAgbGFzdEludm9rZVRpbWUgPSB0aW1lO1xuICAgIC8vIFN0YXJ0IHRoZSB0aW1lciBmb3IgdGhlIHRyYWlsaW5nIGVkZ2UuXG4gICAgdGltZXJJZCA9IHNldFRpbWVvdXQodGltZXJFeHBpcmVkLCB3YWl0KTtcbiAgICAvLyBJbnZva2UgdGhlIGxlYWRpbmcgZWRnZS5cbiAgICByZXR1cm4gbGVhZGluZyA/IGludm9rZUZ1bmModGltZSkgOiByZXN1bHQ7XG4gIH1cblxuICBmdW5jdGlvbiByZW1haW5pbmdXYWl0KHRpbWUpIHtcbiAgICB2YXIgdGltZVNpbmNlTGFzdENhbGwgPSB0aW1lIC0gbGFzdENhbGxUaW1lLFxuICAgICAgICB0aW1lU2luY2VMYXN0SW52b2tlID0gdGltZSAtIGxhc3RJbnZva2VUaW1lLFxuICAgICAgICByZXN1bHQgPSB3YWl0IC0gdGltZVNpbmNlTGFzdENhbGw7XG5cbiAgICByZXR1cm4gbWF4aW5nID8gbmF0aXZlTWluKHJlc3VsdCwgbWF4V2FpdCAtIHRpbWVTaW5jZUxhc3RJbnZva2UpIDogcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gc2hvdWxkSW52b2tlKHRpbWUpIHtcbiAgICB2YXIgdGltZVNpbmNlTGFzdENhbGwgPSB0aW1lIC0gbGFzdENhbGxUaW1lLFxuICAgICAgICB0aW1lU2luY2VMYXN0SW52b2tlID0gdGltZSAtIGxhc3RJbnZva2VUaW1lO1xuXG4gICAgLy8gRWl0aGVyIHRoaXMgaXMgdGhlIGZpcnN0IGNhbGwsIGFjdGl2aXR5IGhhcyBzdG9wcGVkIGFuZCB3ZSdyZSBhdCB0aGVcbiAgICAvLyB0cmFpbGluZyBlZGdlLCB0aGUgc3lzdGVtIHRpbWUgaGFzIGdvbmUgYmFja3dhcmRzIGFuZCB3ZSdyZSB0cmVhdGluZ1xuICAgIC8vIGl0IGFzIHRoZSB0cmFpbGluZyBlZGdlLCBvciB3ZSd2ZSBoaXQgdGhlIGBtYXhXYWl0YCBsaW1pdC5cbiAgICByZXR1cm4gKGxhc3RDYWxsVGltZSA9PT0gdW5kZWZpbmVkIHx8ICh0aW1lU2luY2VMYXN0Q2FsbCA+PSB3YWl0KSB8fFxuICAgICAgKHRpbWVTaW5jZUxhc3RDYWxsIDwgMCkgfHwgKG1heGluZyAmJiB0aW1lU2luY2VMYXN0SW52b2tlID49IG1heFdhaXQpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRpbWVyRXhwaXJlZCgpIHtcbiAgICB2YXIgdGltZSA9IG5vdygpO1xuICAgIGlmIChzaG91bGRJbnZva2UodGltZSkpIHtcbiAgICAgIHJldHVybiB0cmFpbGluZ0VkZ2UodGltZSk7XG4gICAgfVxuICAgIC8vIFJlc3RhcnQgdGhlIHRpbWVyLlxuICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgcmVtYWluaW5nV2FpdCh0aW1lKSk7XG4gIH1cblxuICBmdW5jdGlvbiB0cmFpbGluZ0VkZ2UodGltZSkge1xuICAgIHRpbWVySWQgPSB1bmRlZmluZWQ7XG5cbiAgICAvLyBPbmx5IGludm9rZSBpZiB3ZSBoYXZlIGBsYXN0QXJnc2Agd2hpY2ggbWVhbnMgYGZ1bmNgIGhhcyBiZWVuXG4gICAgLy8gZGVib3VuY2VkIGF0IGxlYXN0IG9uY2UuXG4gICAgaWYgKHRyYWlsaW5nICYmIGxhc3RBcmdzKSB7XG4gICAgICByZXR1cm4gaW52b2tlRnVuYyh0aW1lKTtcbiAgICB9XG4gICAgbGFzdEFyZ3MgPSBsYXN0VGhpcyA9IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gY2FuY2VsKCkge1xuICAgIGlmICh0aW1lcklkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lcklkKTtcbiAgICB9XG4gICAgbGFzdEludm9rZVRpbWUgPSAwO1xuICAgIGxhc3RBcmdzID0gbGFzdENhbGxUaW1lID0gbGFzdFRoaXMgPSB0aW1lcklkID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgZnVuY3Rpb24gZmx1c2goKSB7XG4gICAgcmV0dXJuIHRpbWVySWQgPT09IHVuZGVmaW5lZCA/IHJlc3VsdCA6IHRyYWlsaW5nRWRnZShub3coKSk7XG4gIH1cblxuICBmdW5jdGlvbiBkZWJvdW5jZWQoKSB7XG4gICAgdmFyIHRpbWUgPSBub3coKSxcbiAgICAgICAgaXNJbnZva2luZyA9IHNob3VsZEludm9rZSh0aW1lKTtcblxuICAgIGxhc3RBcmdzID0gYXJndW1lbnRzO1xuICAgIGxhc3RUaGlzID0gdGhpcztcbiAgICBsYXN0Q2FsbFRpbWUgPSB0aW1lO1xuXG4gICAgaWYgKGlzSW52b2tpbmcpIHtcbiAgICAgIGlmICh0aW1lcklkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIGxlYWRpbmdFZGdlKGxhc3RDYWxsVGltZSk7XG4gICAgICB9XG4gICAgICBpZiAobWF4aW5nKSB7XG4gICAgICAgIC8vIEhhbmRsZSBpbnZvY2F0aW9ucyBpbiBhIHRpZ2h0IGxvb3AuXG4gICAgICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgd2FpdCk7XG4gICAgICAgIHJldHVybiBpbnZva2VGdW5jKGxhc3RDYWxsVGltZSk7XG4gICAgICB9XG4gICAgfVxuICAgIGlmICh0aW1lcklkID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgd2FpdCk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgZGVib3VuY2VkLmNhbmNlbCA9IGNhbmNlbDtcbiAgZGVib3VuY2VkLmZsdXNoID0gZmx1c2g7XG4gIHJldHVybiBkZWJvdW5jZWQ7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgdGhlXG4gKiBbbGFuZ3VhZ2UgdHlwZV0oaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLWVjbWFzY3JpcHQtbGFuZ3VhZ2UtdHlwZXMpXG4gKiBvZiBgT2JqZWN0YC4gKGUuZy4gYXJyYXlzLCBmdW5jdGlvbnMsIG9iamVjdHMsIHJlZ2V4ZXMsIGBuZXcgTnVtYmVyKDApYCwgYW5kIGBuZXcgU3RyaW5nKCcnKWApXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gb2JqZWN0LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNPYmplY3Qoe30pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KF8ubm9vcCk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChudWxsKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICByZXR1cm4gISF2YWx1ZSAmJiAodHlwZSA9PSAnb2JqZWN0JyB8fCB0eXBlID09ICdmdW5jdGlvbicpO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIG9iamVjdC1saWtlLiBBIHZhbHVlIGlzIG9iamVjdC1saWtlIGlmIGl0J3Mgbm90IGBudWxsYFxuICogYW5kIGhhcyBhIGB0eXBlb2ZgIHJlc3VsdCBvZiBcIm9iamVjdFwiLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIG9iamVjdC1saWtlLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKHt9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKG51bGwpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNPYmplY3RMaWtlKHZhbHVlKSB7XG4gIHJldHVybiAhIXZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PSAnb2JqZWN0Jztcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGEgYFN5bWJvbGAgcHJpbWl0aXZlIG9yIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHN5bWJvbCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzU3ltYm9sKFN5bWJvbC5pdGVyYXRvcik7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc1N5bWJvbCgnYWJjJyk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N5bWJvbCh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdzeW1ib2wnIHx8XG4gICAgKGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgb2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT0gc3ltYm9sVGFnKTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgbnVtYmVyLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBwcm9jZXNzLlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgbnVtYmVyLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLnRvTnVtYmVyKDMuMik7XG4gKiAvLyA9PiAzLjJcbiAqXG4gKiBfLnRvTnVtYmVyKE51bWJlci5NSU5fVkFMVUUpO1xuICogLy8gPT4gNWUtMzI0XG4gKlxuICogXy50b051bWJlcihJbmZpbml0eSk7XG4gKiAvLyA9PiBJbmZpbml0eVxuICpcbiAqIF8udG9OdW1iZXIoJzMuMicpO1xuICogLy8gPT4gMy4yXG4gKi9cbmZ1bmN0aW9uIHRvTnVtYmVyKHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgaWYgKGlzU3ltYm9sKHZhbHVlKSkge1xuICAgIHJldHVybiBOQU47XG4gIH1cbiAgaWYgKGlzT2JqZWN0KHZhbHVlKSkge1xuICAgIHZhciBvdGhlciA9IHR5cGVvZiB2YWx1ZS52YWx1ZU9mID09ICdmdW5jdGlvbicgPyB2YWx1ZS52YWx1ZU9mKCkgOiB2YWx1ZTtcbiAgICB2YWx1ZSA9IGlzT2JqZWN0KG90aGVyKSA/IChvdGhlciArICcnKSA6IG90aGVyO1xuICB9XG4gIGlmICh0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IDAgPyB2YWx1ZSA6ICt2YWx1ZTtcbiAgfVxuICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UocmVUcmltLCAnJyk7XG4gIHZhciBpc0JpbmFyeSA9IHJlSXNCaW5hcnkudGVzdCh2YWx1ZSk7XG4gIHJldHVybiAoaXNCaW5hcnkgfHwgcmVJc09jdGFsLnRlc3QodmFsdWUpKVxuICAgID8gZnJlZVBhcnNlSW50KHZhbHVlLnNsaWNlKDIpLCBpc0JpbmFyeSA/IDIgOiA4KVxuICAgIDogKHJlSXNCYWRIZXgudGVzdCh2YWx1ZSkgPyBOQU4gOiArdmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRlYm91bmNlO1xuXG4vKiBXRUJQQUNLIFZBUiBJTkpFQ1RJT04gKi99LmNhbGwoZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyg1KSkpXG5cbi8qKiovIH0pLFxuLyogMjAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbnZhciBvbiA9IGV4cG9ydHMub24gPSBmdW5jdGlvbiBvbihldnROYW1lLCBvcHRzKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoZWwpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGZuKSB7XG4gICAgICBlbC5hZGRFdmVudExpc3RlbmVyKGV2dE5hbWUsIGZuLCBvcHRzKTtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZ0TmFtZSwgZm4pO1xuICAgICAgICBmbi5jYW5jZWwgJiYgZm4uY2FuY2VsKCk7XG4gICAgICB9O1xuICAgIH07XG4gIH07XG59O1xuXG52YXIgaXNCZXR3ZWVuID0gZnVuY3Rpb24gaXNCZXR3ZWVuKG1pbkluY2x1c2l2ZSwgbWF4KSB7XG4gIHJldHVybiBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgcmV0dXJuIE1hdGgubWF4KE1hdGgubWluKG1heCwgdGFyZ2V0KSwgbWluSW5jbHVzaXZlKSA9PT0gdGFyZ2V0O1xuICB9O1xufTtcbnZhciBpc0JvdW5kaW5nQ2xpZW50UmVjdEluUmFuZ2UgPSBmdW5jdGlvbiBpc0JvdW5kaW5nQ2xpZW50UmVjdEluUmFuZ2UoX3JlZikge1xuICB2YXIgdGFyZ2V0UmVjdCA9IF9yZWYudGFyZ2V0UmVjdCxcbiAgICAgIGJvdW5kaW5nUmVjdCA9IF9yZWYuYm91bmRpbmdSZWN0LFxuICAgICAgZnVsbHlDb250YWluZWQgPSBfcmVmLmZ1bGx5Q29udGFpbmVkO1xuXG4gIHZhciBob3JpekJvdW5kcyA9IGlzQmV0d2Vlbihib3VuZGluZ1JlY3QubGVmdCwgYm91bmRpbmdSZWN0LnJpZ2h0KTtcbiAgdmFyIHZlcnRCb3VuZHMgPSBpc0JldHdlZW4oYm91bmRpbmdSZWN0LnRvcCwgYm91bmRpbmdSZWN0LmJvdHRvbSk7XG4gIHJldHVybiBmdWxseUNvbnRhaW5lZCA/IGhvcml6Qm91bmRzKHRhcmdldFJlY3QubGVmdCkgJiYgaG9yaXpCb3VuZHModGFyZ2V0UmVjdC5yaWdodCkgJiYgdmVydEJvdW5kcyh0YXJnZXRSZWN0LnRvcCkgJiYgdmVydEJvdW5kcyh0YXJnZXRSZWN0LmJvdHRvbSkgOiBob3JpekJvdW5kcyh0YXJnZXRSZWN0LmxlZnQpIHx8IGhvcml6Qm91bmRzKHRhcmdldFJlY3QucmlnaHQpIHx8IHZlcnRCb3VuZHModGFyZ2V0UmVjdC50b3ApIHx8IHZlcnRCb3VuZHModGFyZ2V0UmVjdC5ib3R0b20pO1xufTtcblxudmFyIGluVmlld3BvcnQgPSBleHBvcnRzLmluVmlld3BvcnQgPSBmdW5jdGlvbiBpblZpZXdwb3J0KCkge1xuICB2YXIgX3JlZjIgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9LFxuICAgICAgX3JlZjIkdGhyZXNob2xkID0gX3JlZjIudGhyZXNob2xkLFxuICAgICAgdGhyZXNob2xkID0gX3JlZjIkdGhyZXNob2xkID09PSB1bmRlZmluZWQgPyAwIDogX3JlZjIkdGhyZXNob2xkLFxuICAgICAgX3JlZjIkb2Zmc2V0VmVydCA9IF9yZWYyLm9mZnNldFZlcnQsXG4gICAgICBvZmZzZXRWZXJ0ID0gX3JlZjIkb2Zmc2V0VmVydCA9PT0gdW5kZWZpbmVkID8gd2luZG93LmlubmVySGVpZ2h0ICogdGhyZXNob2xkIDogX3JlZjIkb2Zmc2V0VmVydCxcbiAgICAgIF9yZWYyJG9mZnNldEhvcml6ID0gX3JlZjIub2Zmc2V0SG9yaXosXG4gICAgICBvZmZzZXRIb3JpeiA9IF9yZWYyJG9mZnNldEhvcml6ID09PSB1bmRlZmluZWQgPyB3aW5kb3cuaW5uZXJXaWR0aCAqIHRocmVzaG9sZCA6IF9yZWYyJG9mZnNldEhvcml6LFxuICAgICAgYm91bmRpbmdMZWZ0ID0gX3JlZjIuYm91bmRpbmdMZWZ0LFxuICAgICAgYm91bmRpbmdSaWdodCA9IF9yZWYyLmJvdW5kaW5nUmlnaHQsXG4gICAgICBfcmVmMiRyZXF1aXJlRW50aXJlRWwgPSBfcmVmMi5yZXF1aXJlRW50aXJlRWxlbWVudEluVmlld3BvcnQsXG4gICAgICByZXF1aXJlRW50aXJlRWxlbWVudEluVmlld3BvcnQgPSBfcmVmMiRyZXF1aXJlRW50aXJlRWwgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX3JlZjIkcmVxdWlyZUVudGlyZUVsO1xuXG4gIHZhciBpc0VsSW5WaWV3ID0gZnVuY3Rpb24gaXNFbEluVmlldyhlbGVtZW50KSB7XG4gICAgaWYgKCFlbGVtZW50KSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCFlbGVtZW50Lm9mZnNldFBhcmVudCkgcmV0dXJuIHRydWU7XG4gICAgdmFyIGhvcml6TWluID0gMCAtIG9mZnNldEhvcml6O1xuICAgIHZhciBob3Jpek1heCA9IHdpbmRvdy5pbm5lcldpZHRoICsgb2Zmc2V0SG9yaXo7XG4gICAgdmFyIHZlcnRNaW4gPSAwIC0gb2Zmc2V0VmVydDtcbiAgICB2YXIgdmVydE1heCA9IHdpbmRvdy5pbm5lckhlaWdodCArIG9mZnNldFZlcnQ7XG4gICAgcmV0dXJuIGlzQm91bmRpbmdDbGllbnRSZWN0SW5SYW5nZSh7XG4gICAgICB0YXJnZXRSZWN0OiBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLFxuICAgICAgYm91bmRpbmdSZWN0OiB7XG4gICAgICAgIHRvcDogdmVydE1pbixcbiAgICAgICAgYm90dG9tOiB2ZXJ0TWF4LFxuICAgICAgICBsZWZ0OiBpc05hTihib3VuZGluZ0xlZnQpID8gaG9yaXpNaW4gOiBib3VuZGluZ0xlZnQsXG4gICAgICAgIHJpZ2h0OiBpc05hTihib3VuZGluZ1JpZ2h0KSA/IGhvcml6TWF4IDogYm91bmRpbmdSaWdodCB9LFxuICAgICAgZnVsbHlDb250YWluZWQ6IHJlcXVpcmVFbnRpcmVFbGVtZW50SW5WaWV3cG9ydCB9KTtcbiAgfTtcblxuICByZXR1cm4gaXNFbEluVmlldztcbn07XG5cbi8qKiovIH0pLFxuLyogMjEgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9yZWFjdCA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XG5cbnZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG52YXIgX3JlYWN0RG9tID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KTtcblxudmFyIF9zcmMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE2KTtcblxudmFyIF9zcmMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc3JjKTtcblxudmFyIF9wcm9wVHlwZXMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIyKTtcblxudmFyIF9tYXJrZWQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI2KTtcblxudmFyIF9tYXJrZWQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbWFya2VkKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgY29sb3JzID0gWycjZjQ3NDY3JywgJyM5NWRkMTInLCAnIzI0YzBlZCcsICcjMGFmMWJhJywgJyNkZWNjZWQnLCAnI2JkZjZjMCcsICcjZTdlZTI4JywgJyNlMDgzODgnLCAnIzYyZmQxZScsICcjZWFhMzBhJ107XG5cbnZhciBCb3ggPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoQm94LCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBCb3goKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJveCk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKEJveC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEJveCkpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKEJveCwgW3tcbiAgICBrZXk6ICdjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIGlmIChuZXh0UHJvcHMuaXNJblZpZXcgJiYgIXRoaXMucHJvcHMuaXNJblZpZXcpIHtcbiAgICAgICAgd2luZG93LmRvY3VtZW50LnRpdGxlID0gdGhpcy5wcm9wcy5pICsgMTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdyZW5kZXInLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgaSA9IHRoaXMucHJvcHMuaTtcblxuICAgICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAnZGl2JyxcbiAgICAgICAgeyBjbGFzc05hbWU6ICdib3gnLCBzdHlsZTogeyBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9yc1tpXSB9IH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICdoMycsXG4gICAgICAgICAgbnVsbCxcbiAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICdjb2RlJyxcbiAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAnbG9jYXRpb24udGl0bGUnXG4gICAgICAgICAgKSxcbiAgICAgICAgICAnIHNob3VsZCBub3cgYmUgJyxcbiAgICAgICAgICBpICsgMVxuICAgICAgICApXG4gICAgICApO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBCb3g7XG59KF9yZWFjdC5Db21wb25lbnQpO1xuXG5Cb3gucHJvcHR5cGVzID0ge1xuICBpc0luVmlldzogX3Byb3BUeXBlcy5ib29sLFxuICBpOiBfcHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkXG59O1xuXG52YXIgRGVtbyA9IGZ1bmN0aW9uIChfQ29tcG9uZW50Mikge1xuICBfaW5oZXJpdHMoRGVtbywgX0NvbXBvbmVudDIpO1xuXG4gIGZ1bmN0aW9uIERlbW8oKSB7XG4gICAgdmFyIF9yZWY7XG5cbiAgICB2YXIgX3RlbXAsIF90aGlzMiwgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBEZW1vKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzMiA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChfcmVmID0gRGVtby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKERlbW8pKS5jYWxsLmFwcGx5KF9yZWYsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMyKSwgX3RoaXMyLnVwZGF0ZVRpdGxlID0gZnVuY3Rpb24gKHMpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHdpbmRvdy5kb2N1bWVudC50aXRsZSA9IHM7XG4gICAgICB9O1xuICAgIH0sIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMyLCBfcmV0KTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhEZW1vLCBbe1xuICAgIGtleTogJ3JlbmRlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgJ2RpdicsXG4gICAgICAgIHsgc3R5bGU6IHsgaGVpZ2h0OiAnY2FsYygxMDB2aCAqIDEwKScgfSB9LFxuICAgICAgICBBcnJheSgxMCkuZmlsbCgpLm1hcChmdW5jdGlvbiAoXywgaSkge1xuICAgICAgICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgIF9zcmMyLmRlZmF1bHQsXG4gICAgICAgICAgICB7IGtleTogaSwgdGhyZXNob2xkOiAwIH0sXG4gICAgICAgICAgICBmdW5jdGlvbiAoaXNJblZpZXcpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KEJveCwgeyBpOiBpLCBpc0luVmlldzogaXNJblZpZXcgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgKTtcbiAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIERlbW87XG59KF9yZWFjdC5Db21wb25lbnQpO1xuXG52YXIgRG9jcyA9IGZ1bmN0aW9uIChfQ29tcG9uZW50Mykge1xuICBfaW5oZXJpdHMoRG9jcywgX0NvbXBvbmVudDMpO1xuXG4gIGZ1bmN0aW9uIERvY3MoKSB7XG4gICAgdmFyIF9yZWYyO1xuXG4gICAgdmFyIF90ZW1wMiwgX3RoaXMzLCBfcmV0MjtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBEb2NzKTtcblxuICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4yKSwgX2tleTIgPSAwOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICBhcmdzW19rZXkyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQyID0gKF90ZW1wMiA9IChfdGhpczMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoX3JlZjIgPSBEb2NzLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoRG9jcykpLmNhbGwuYXBwbHkoX3JlZjIsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMzKSwgX3RoaXMzLnN0YXRlID0geyBkb2NzOiAnJyB9LCBfdGVtcDIpLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpczMsIF9yZXQyKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhEb2NzLCBbe1xuICAgIGtleTogJ2NvbXBvbmVudFdpbGxNb3VudCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICAgIHZhciBfdGhpczQgPSB0aGlzO1xuXG4gICAgICB3aW5kb3cuZmV0Y2goJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9qYW5lL3JlYWN0LW5vdy15b3Utc2VlLW1lL21hc3Rlci9SRUFETUUubWQnKS50aGVuKGZ1bmN0aW9uIChhKSB7XG4gICAgICAgIHJldHVybiBhLnRleHQoKTtcbiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgX3RoaXM0LnNldFN0YXRlKHsgZG9jczogKDAsIF9tYXJrZWQyLmRlZmF1bHQpKHQpIH0pO1xuICAgICAgfSkuY2F0Y2goY29uc29sZS5lcnJvcik7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVuZGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAnZGl2JyxcbiAgICAgICAgeyBjbGFzc05hbWU6ICd3cmFwcGVyJyB9LFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudCgnZGl2JywgeyBkYW5nZXJvdXNseVNldElubmVySFRNTDogeyBfX2h0bWw6IHRoaXMuc3RhdGUuZG9jcyB9LCBjbGFzc05hbWU6ICdtZCcgfSksXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KERlbW8sIG51bGwpXG4gICAgICApO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBEb2NzO1xufShfcmVhY3QuQ29tcG9uZW50KTtcblxuKDAsIF9yZWFjdERvbS5yZW5kZXIpKF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KERvY3MsIG51bGwpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpKTtcblxuLyoqKi8gfSksXG4vKiAyMiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChmYWxzZSkge1xuICB2YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiZcbiAgICBTeW1ib2wuZm9yICYmXG4gICAgU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpKSB8fFxuICAgIDB4ZWFjNztcblxuICB2YXIgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiZcbiAgICAgIG9iamVjdCAhPT0gbnVsbCAmJlxuICAgICAgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH07XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShpc1ZhbGlkRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMykoKTtcbn1cblxuXG4vKioqLyB9KSxcbi8qIDIzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5cblxudmFyIGVtcHR5RnVuY3Rpb24gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xudmFyIGludmFyaWFudCA9IF9fd2VicGFja19yZXF1aXJlX18oMjQpO1xudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gX193ZWJwYWNrX3JlcXVpcmVfXygyNSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpbnZhcmlhbnQoXG4gICAgICBmYWxzZSxcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMgPSBlbXB0eUZ1bmN0aW9uO1xuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuXG5cbi8qKiovIH0pLFxuLyogMjQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG5cblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIHZhbGlkYXRlRm9ybWF0ID0gZnVuY3Rpb24gdmFsaWRhdGVGb3JtYXQoZm9ybWF0KSB7fTtcblxuaWYgKGZhbHNlKSB7XG4gIHZhbGlkYXRlRm9ybWF0ID0gZnVuY3Rpb24gdmFsaWRhdGVGb3JtYXQoZm9ybWF0KSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFyaWFudCByZXF1aXJlcyBhbiBlcnJvciBtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBpbnZhcmlhbnQoY29uZGl0aW9uLCBmb3JtYXQsIGEsIGIsIGMsIGQsIGUsIGYpIHtcbiAgdmFsaWRhdGVGb3JtYXQoZm9ybWF0KTtcblxuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHZhciBlcnJvcjtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKCdNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCAnICsgJ2ZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhcmdzID0gW2EsIGIsIGMsIGQsIGUsIGZdO1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgfSkpO1xuICAgICAgZXJyb3IubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB9XG5cbiAgICBlcnJvci5mcmFtZXNUb1BvcCA9IDE7IC8vIHdlIGRvbid0IGNhcmUgYWJvdXQgaW52YXJpYW50J3Mgb3duIGZyYW1lXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnZhcmlhbnQ7XG5cbi8qKiovIH0pLFxuLyogMjUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cblxuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuXG5cbi8qKiovIH0pLFxuLyogMjYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuLyogV0VCUEFDSyBWQVIgSU5KRUNUSU9OICovKGZ1bmN0aW9uKGdsb2JhbCkgey8qKlxuICogbWFya2VkIC0gYSBtYXJrZG93biBwYXJzZXJcbiAqIENvcHlyaWdodCAoYykgMjAxMS0yMDE0LCBDaHJpc3RvcGhlciBKZWZmcmV5LiAoTUlUIExpY2Vuc2VkKVxuICogaHR0cHM6Ly9naXRodWIuY29tL2NoamovbWFya2VkXG4gKi9cblxuOyhmdW5jdGlvbigpIHtcbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBCbG9jay1MZXZlbCBHcmFtbWFyXG4gKi9cblxudmFyIGJsb2NrID0ge1xuICBuZXdsaW5lOiAvXlxcbisvLFxuICBjb2RlOiAvXiggezR9W15cXG5dK1xcbiopKy8sXG4gIGZlbmNlczogbm9vcCxcbiAgaHI6IC9eKCAqWy0qX10pezMsfSAqKD86XFxuK3wkKS8sXG4gIGhlYWRpbmc6IC9eICooI3sxLDZ9KSAqKFteXFxuXSs/KSAqIyogKig/Olxcbit8JCkvLFxuICBucHRhYmxlOiBub29wLFxuICBsaGVhZGluZzogL14oW15cXG5dKylcXG4gKig9fC0pezIsfSAqKD86XFxuK3wkKS8sXG4gIGJsb2NrcXVvdGU6IC9eKCAqPlteXFxuXSsoXFxuKD8hZGVmKVteXFxuXSspKlxcbiopKy8sXG4gIGxpc3Q6IC9eKCAqKShidWxsKSBbXFxzXFxTXSs/KD86aHJ8ZGVmfFxcbnsyLH0oPyEgKSg/IVxcMWJ1bGwgKVxcbip8XFxzKiQpLyxcbiAgaHRtbDogL14gKig/OmNvbW1lbnQgKig/OlxcbnxcXHMqJCl8Y2xvc2VkICooPzpcXG57Mix9fFxccyokKXxjbG9zaW5nICooPzpcXG57Mix9fFxccyokKSkvLFxuICBkZWY6IC9eICpcXFsoW15cXF1dKylcXF06ICo8PyhbXlxccz5dKyk+Pyg/OiArW1wiKF0oW15cXG5dKylbXCIpXSk/ICooPzpcXG4rfCQpLyxcbiAgdGFibGU6IG5vb3AsXG4gIHBhcmFncmFwaDogL14oKD86W15cXG5dK1xcbj8oPyFocnxoZWFkaW5nfGxoZWFkaW5nfGJsb2NrcXVvdGV8dGFnfGRlZikpKylcXG4qLyxcbiAgdGV4dDogL15bXlxcbl0rL1xufTtcblxuYmxvY2suYnVsbGV0ID0gLyg/OlsqKy1dfFxcZCtcXC4pLztcbmJsb2NrLml0ZW0gPSAvXiggKikoYnVsbCkgW15cXG5dKig/Olxcbig/IVxcMWJ1bGwgKVteXFxuXSopKi87XG5ibG9jay5pdGVtID0gcmVwbGFjZShibG9jay5pdGVtLCAnZ20nKVxuICAoL2J1bGwvZywgYmxvY2suYnVsbGV0KVxuICAoKTtcblxuYmxvY2subGlzdCA9IHJlcGxhY2UoYmxvY2subGlzdClcbiAgKC9idWxsL2csIGJsb2NrLmJ1bGxldClcbiAgKCdocicsICdcXFxcbisoPz1cXFxcMT8oPzpbLSpfXSAqKXszLH0oPzpcXFxcbit8JCkpJylcbiAgKCdkZWYnLCAnXFxcXG4rKD89JyArIGJsb2NrLmRlZi5zb3VyY2UgKyAnKScpXG4gICgpO1xuXG5ibG9jay5ibG9ja3F1b3RlID0gcmVwbGFjZShibG9jay5ibG9ja3F1b3RlKVxuICAoJ2RlZicsIGJsb2NrLmRlZilcbiAgKCk7XG5cbmJsb2NrLl90YWcgPSAnKD8hKD86J1xuICArICdhfGVtfHN0cm9uZ3xzbWFsbHxzfGNpdGV8cXxkZm58YWJicnxkYXRhfHRpbWV8Y29kZSdcbiAgKyAnfHZhcnxzYW1wfGtiZHxzdWJ8c3VwfGl8Ynx1fG1hcmt8cnVieXxydHxycHxiZGl8YmRvJ1xuICArICd8c3Bhbnxicnx3YnJ8aW5zfGRlbHxpbWcpXFxcXGIpXFxcXHcrKD8hOi98W15cXFxcd1xcXFxzQF0qQClcXFxcYic7XG5cbmJsb2NrLmh0bWwgPSByZXBsYWNlKGJsb2NrLmh0bWwpXG4gICgnY29tbWVudCcsIC88IS0tW1xcc1xcU10qPy0tPi8pXG4gICgnY2xvc2VkJywgLzwodGFnKVtcXHNcXFNdKz88XFwvXFwxPi8pXG4gICgnY2xvc2luZycsIC88dGFnKD86XCJbXlwiXSpcInwnW14nXSonfFteJ1wiPl0pKj8+LylcbiAgKC90YWcvZywgYmxvY2suX3RhZylcbiAgKCk7XG5cbmJsb2NrLnBhcmFncmFwaCA9IHJlcGxhY2UoYmxvY2sucGFyYWdyYXBoKVxuICAoJ2hyJywgYmxvY2suaHIpXG4gICgnaGVhZGluZycsIGJsb2NrLmhlYWRpbmcpXG4gICgnbGhlYWRpbmcnLCBibG9jay5saGVhZGluZylcbiAgKCdibG9ja3F1b3RlJywgYmxvY2suYmxvY2txdW90ZSlcbiAgKCd0YWcnLCAnPCcgKyBibG9jay5fdGFnKVxuICAoJ2RlZicsIGJsb2NrLmRlZilcbiAgKCk7XG5cbi8qKlxuICogTm9ybWFsIEJsb2NrIEdyYW1tYXJcbiAqL1xuXG5ibG9jay5ub3JtYWwgPSBtZXJnZSh7fSwgYmxvY2spO1xuXG4vKipcbiAqIEdGTSBCbG9jayBHcmFtbWFyXG4gKi9cblxuYmxvY2suZ2ZtID0gbWVyZ2Uoe30sIGJsb2NrLm5vcm1hbCwge1xuICBmZW5jZXM6IC9eICooYHszLH18fnszLH0pWyBcXC5dKihcXFMrKT8gKlxcbihbXFxzXFxTXSo/KVxccypcXDEgKig/Olxcbit8JCkvLFxuICBwYXJhZ3JhcGg6IC9eLyxcbiAgaGVhZGluZzogL14gKigjezEsNn0pICsoW15cXG5dKz8pICojKiAqKD86XFxuK3wkKS9cbn0pO1xuXG5ibG9jay5nZm0ucGFyYWdyYXBoID0gcmVwbGFjZShibG9jay5wYXJhZ3JhcGgpXG4gICgnKD8hJywgJyg/ISdcbiAgICArIGJsb2NrLmdmbS5mZW5jZXMuc291cmNlLnJlcGxhY2UoJ1xcXFwxJywgJ1xcXFwyJykgKyAnfCdcbiAgICArIGJsb2NrLmxpc3Quc291cmNlLnJlcGxhY2UoJ1xcXFwxJywgJ1xcXFwzJykgKyAnfCcpXG4gICgpO1xuXG4vKipcbiAqIEdGTSArIFRhYmxlcyBCbG9jayBHcmFtbWFyXG4gKi9cblxuYmxvY2sudGFibGVzID0gbWVyZ2Uoe30sIGJsb2NrLmdmbSwge1xuICBucHRhYmxlOiAvXiAqKFxcUy4qXFx8LiopXFxuICooWy06XSsgKlxcfFstfCA6XSopXFxuKCg/Oi4qXFx8LiooPzpcXG58JCkpKilcXG4qLyxcbiAgdGFibGU6IC9eICpcXHwoLispXFxuICpcXHwoICpbLTpdK1stfCA6XSopXFxuKCg/OiAqXFx8LiooPzpcXG58JCkpKilcXG4qL1xufSk7XG5cbi8qKlxuICogQmxvY2sgTGV4ZXJcbiAqL1xuXG5mdW5jdGlvbiBMZXhlcihvcHRpb25zKSB7XG4gIHRoaXMudG9rZW5zID0gW107XG4gIHRoaXMudG9rZW5zLmxpbmtzID0ge307XG4gIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgfHwgbWFya2VkLmRlZmF1bHRzO1xuICB0aGlzLnJ1bGVzID0gYmxvY2subm9ybWFsO1xuXG4gIGlmICh0aGlzLm9wdGlvbnMuZ2ZtKSB7XG4gICAgaWYgKHRoaXMub3B0aW9ucy50YWJsZXMpIHtcbiAgICAgIHRoaXMucnVsZXMgPSBibG9jay50YWJsZXM7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucnVsZXMgPSBibG9jay5nZm07XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogRXhwb3NlIEJsb2NrIFJ1bGVzXG4gKi9cblxuTGV4ZXIucnVsZXMgPSBibG9jaztcblxuLyoqXG4gKiBTdGF0aWMgTGV4IE1ldGhvZFxuICovXG5cbkxleGVyLmxleCA9IGZ1bmN0aW9uKHNyYywgb3B0aW9ucykge1xuICB2YXIgbGV4ZXIgPSBuZXcgTGV4ZXIob3B0aW9ucyk7XG4gIHJldHVybiBsZXhlci5sZXgoc3JjKTtcbn07XG5cbi8qKlxuICogUHJlcHJvY2Vzc2luZ1xuICovXG5cbkxleGVyLnByb3RvdHlwZS5sZXggPSBmdW5jdGlvbihzcmMpIHtcbiAgc3JjID0gc3JjXG4gICAgLnJlcGxhY2UoL1xcclxcbnxcXHIvZywgJ1xcbicpXG4gICAgLnJlcGxhY2UoL1xcdC9nLCAnICAgICcpXG4gICAgLnJlcGxhY2UoL1xcdTAwYTAvZywgJyAnKVxuICAgIC5yZXBsYWNlKC9cXHUyNDI0L2csICdcXG4nKTtcblxuICByZXR1cm4gdGhpcy50b2tlbihzcmMsIHRydWUpO1xufTtcblxuLyoqXG4gKiBMZXhpbmdcbiAqL1xuXG5MZXhlci5wcm90b3R5cGUudG9rZW4gPSBmdW5jdGlvbihzcmMsIHRvcCwgYnEpIHtcbiAgdmFyIHNyYyA9IHNyYy5yZXBsYWNlKC9eICskL2dtLCAnJylcbiAgICAsIG5leHRcbiAgICAsIGxvb3NlXG4gICAgLCBjYXBcbiAgICAsIGJ1bGxcbiAgICAsIGJcbiAgICAsIGl0ZW1cbiAgICAsIHNwYWNlXG4gICAgLCBpXG4gICAgLCBsO1xuXG4gIHdoaWxlIChzcmMpIHtcbiAgICAvLyBuZXdsaW5lXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMubmV3bGluZS5leGVjKHNyYykpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICBpZiAoY2FwWzBdLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgdGhpcy50b2tlbnMucHVzaCh7XG4gICAgICAgICAgdHlwZTogJ3NwYWNlJ1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjb2RlXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuY29kZS5leGVjKHNyYykpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICBjYXAgPSBjYXBbMF0ucmVwbGFjZSgvXiB7NH0vZ20sICcnKTtcbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAnY29kZScsXG4gICAgICAgIHRleHQ6ICF0aGlzLm9wdGlvbnMucGVkYW50aWNcbiAgICAgICAgICA/IGNhcC5yZXBsYWNlKC9cXG4rJC8sICcnKVxuICAgICAgICAgIDogY2FwXG4gICAgICB9KTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGZlbmNlcyAoZ2ZtKVxuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmZlbmNlcy5leGVjKHNyYykpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICB0aGlzLnRva2Vucy5wdXNoKHtcbiAgICAgICAgdHlwZTogJ2NvZGUnLFxuICAgICAgICBsYW5nOiBjYXBbMl0sXG4gICAgICAgIHRleHQ6IGNhcFszXSB8fCAnJ1xuICAgICAgfSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBoZWFkaW5nXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuaGVhZGluZy5leGVjKHNyYykpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICB0aGlzLnRva2Vucy5wdXNoKHtcbiAgICAgICAgdHlwZTogJ2hlYWRpbmcnLFxuICAgICAgICBkZXB0aDogY2FwWzFdLmxlbmd0aCxcbiAgICAgICAgdGV4dDogY2FwWzJdXG4gICAgICB9KTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIHRhYmxlIG5vIGxlYWRpbmcgcGlwZSAoZ2ZtKVxuICAgIGlmICh0b3AgJiYgKGNhcCA9IHRoaXMucnVsZXMubnB0YWJsZS5leGVjKHNyYykpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuXG4gICAgICBpdGVtID0ge1xuICAgICAgICB0eXBlOiAndGFibGUnLFxuICAgICAgICBoZWFkZXI6IGNhcFsxXS5yZXBsYWNlKC9eICp8ICpcXHwgKiQvZywgJycpLnNwbGl0KC8gKlxcfCAqLyksXG4gICAgICAgIGFsaWduOiBjYXBbMl0ucmVwbGFjZSgvXiAqfFxcfCAqJC9nLCAnJykuc3BsaXQoLyAqXFx8ICovKSxcbiAgICAgICAgY2VsbHM6IGNhcFszXS5yZXBsYWNlKC9cXG4kLywgJycpLnNwbGl0KCdcXG4nKVxuICAgICAgfTtcblxuICAgICAgZm9yIChpID0gMDsgaSA8IGl0ZW0uYWxpZ24ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKC9eICotKzogKiQvLnRlc3QoaXRlbS5hbGlnbltpXSkpIHtcbiAgICAgICAgICBpdGVtLmFsaWduW2ldID0gJ3JpZ2h0JztcbiAgICAgICAgfSBlbHNlIGlmICgvXiAqOi0rOiAqJC8udGVzdChpdGVtLmFsaWduW2ldKSkge1xuICAgICAgICAgIGl0ZW0uYWxpZ25baV0gPSAnY2VudGVyJztcbiAgICAgICAgfSBlbHNlIGlmICgvXiAqOi0rICokLy50ZXN0KGl0ZW0uYWxpZ25baV0pKSB7XG4gICAgICAgICAgaXRlbS5hbGlnbltpXSA9ICdsZWZ0JztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtLmFsaWduW2ldID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBmb3IgKGkgPSAwOyBpIDwgaXRlbS5jZWxscy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpdGVtLmNlbGxzW2ldID0gaXRlbS5jZWxsc1tpXS5zcGxpdCgvICpcXHwgKi8pO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnRva2Vucy5wdXNoKGl0ZW0pO1xuXG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBsaGVhZGluZ1xuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmxoZWFkaW5nLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAnaGVhZGluZycsXG4gICAgICAgIGRlcHRoOiBjYXBbMl0gPT09ICc9JyA/IDEgOiAyLFxuICAgICAgICB0ZXh0OiBjYXBbMV1cbiAgICAgIH0pO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gaHJcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5oci5leGVjKHNyYykpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICB0aGlzLnRva2Vucy5wdXNoKHtcbiAgICAgICAgdHlwZTogJ2hyJ1xuICAgICAgfSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBibG9ja3F1b3RlXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuYmxvY2txdW90ZS5leGVjKHNyYykpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG5cbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAnYmxvY2txdW90ZV9zdGFydCdcbiAgICAgIH0pO1xuXG4gICAgICBjYXAgPSBjYXBbMF0ucmVwbGFjZSgvXiAqPiA/L2dtLCAnJyk7XG5cbiAgICAgIC8vIFBhc3MgYHRvcGAgdG8ga2VlcCB0aGUgY3VycmVudFxuICAgICAgLy8gXCJ0b3BsZXZlbFwiIHN0YXRlLiBUaGlzIGlzIGV4YWN0bHlcbiAgICAgIC8vIGhvdyBtYXJrZG93bi5wbCB3b3Jrcy5cbiAgICAgIHRoaXMudG9rZW4oY2FwLCB0b3AsIHRydWUpO1xuXG4gICAgICB0aGlzLnRva2Vucy5wdXNoKHtcbiAgICAgICAgdHlwZTogJ2Jsb2NrcXVvdGVfZW5kJ1xuICAgICAgfSk7XG5cbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGxpc3RcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5saXN0LmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIGJ1bGwgPSBjYXBbMl07XG5cbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAnbGlzdF9zdGFydCcsXG4gICAgICAgIG9yZGVyZWQ6IGJ1bGwubGVuZ3RoID4gMVxuICAgICAgfSk7XG5cbiAgICAgIC8vIEdldCBlYWNoIHRvcC1sZXZlbCBpdGVtLlxuICAgICAgY2FwID0gY2FwWzBdLm1hdGNoKHRoaXMucnVsZXMuaXRlbSk7XG5cbiAgICAgIG5leHQgPSBmYWxzZTtcbiAgICAgIGwgPSBjYXAubGVuZ3RoO1xuICAgICAgaSA9IDA7XG5cbiAgICAgIGZvciAoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGl0ZW0gPSBjYXBbaV07XG5cbiAgICAgICAgLy8gUmVtb3ZlIHRoZSBsaXN0IGl0ZW0ncyBidWxsZXRcbiAgICAgICAgLy8gc28gaXQgaXMgc2VlbiBhcyB0aGUgbmV4dCB0b2tlbi5cbiAgICAgICAgc3BhY2UgPSBpdGVtLmxlbmd0aDtcbiAgICAgICAgaXRlbSA9IGl0ZW0ucmVwbGFjZSgvXiAqKFsqKy1dfFxcZCtcXC4pICsvLCAnJyk7XG5cbiAgICAgICAgLy8gT3V0ZGVudCB3aGF0ZXZlciB0aGVcbiAgICAgICAgLy8gbGlzdCBpdGVtIGNvbnRhaW5zLiBIYWNreS5cbiAgICAgICAgaWYgKH5pdGVtLmluZGV4T2YoJ1xcbiAnKSkge1xuICAgICAgICAgIHNwYWNlIC09IGl0ZW0ubGVuZ3RoO1xuICAgICAgICAgIGl0ZW0gPSAhdGhpcy5vcHRpb25zLnBlZGFudGljXG4gICAgICAgICAgICA/IGl0ZW0ucmVwbGFjZShuZXcgUmVnRXhwKCdeIHsxLCcgKyBzcGFjZSArICd9JywgJ2dtJyksICcnKVxuICAgICAgICAgICAgOiBpdGVtLnJlcGxhY2UoL14gezEsNH0vZ20sICcnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIERldGVybWluZSB3aGV0aGVyIHRoZSBuZXh0IGxpc3QgaXRlbSBiZWxvbmdzIGhlcmUuXG4gICAgICAgIC8vIEJhY2twZWRhbCBpZiBpdCBkb2VzIG5vdCBiZWxvbmcgaW4gdGhpcyBsaXN0LlxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLnNtYXJ0TGlzdHMgJiYgaSAhPT0gbCAtIDEpIHtcbiAgICAgICAgICBiID0gYmxvY2suYnVsbGV0LmV4ZWMoY2FwW2kgKyAxXSlbMF07XG4gICAgICAgICAgaWYgKGJ1bGwgIT09IGIgJiYgIShidWxsLmxlbmd0aCA+IDEgJiYgYi5sZW5ndGggPiAxKSkge1xuICAgICAgICAgICAgc3JjID0gY2FwLnNsaWNlKGkgKyAxKS5qb2luKCdcXG4nKSArIHNyYztcbiAgICAgICAgICAgIGkgPSBsIC0gMTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBEZXRlcm1pbmUgd2hldGhlciBpdGVtIGlzIGxvb3NlIG9yIG5vdC5cbiAgICAgICAgLy8gVXNlOiAvKF58XFxuKSg/ISApW15cXG5dK1xcblxcbig/IVxccyokKS9cbiAgICAgICAgLy8gZm9yIGRpc2NvdW50IGJlaGF2aW9yLlxuICAgICAgICBsb29zZSA9IG5leHQgfHwgL1xcblxcbig/IVxccyokKS8udGVzdChpdGVtKTtcbiAgICAgICAgaWYgKGkgIT09IGwgLSAxKSB7XG4gICAgICAgICAgbmV4dCA9IGl0ZW0uY2hhckF0KGl0ZW0ubGVuZ3RoIC0gMSkgPT09ICdcXG4nO1xuICAgICAgICAgIGlmICghbG9vc2UpIGxvb3NlID0gbmV4dDtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICAgIHR5cGU6IGxvb3NlXG4gICAgICAgICAgICA/ICdsb29zZV9pdGVtX3N0YXJ0J1xuICAgICAgICAgICAgOiAnbGlzdF9pdGVtX3N0YXJ0J1xuICAgICAgICB9KTtcblxuICAgICAgICAvLyBSZWN1cnNlLlxuICAgICAgICB0aGlzLnRva2VuKGl0ZW0sIGZhbHNlLCBicSk7XG5cbiAgICAgICAgdGhpcy50b2tlbnMucHVzaCh7XG4gICAgICAgICAgdHlwZTogJ2xpc3RfaXRlbV9lbmQnXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnRva2Vucy5wdXNoKHtcbiAgICAgICAgdHlwZTogJ2xpc3RfZW5kJ1xuICAgICAgfSk7XG5cbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGh0bWxcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5odG1sLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiB0aGlzLm9wdGlvbnMuc2FuaXRpemVcbiAgICAgICAgICA/ICdwYXJhZ3JhcGgnXG4gICAgICAgICAgOiAnaHRtbCcsXG4gICAgICAgIHByZTogIXRoaXMub3B0aW9ucy5zYW5pdGl6ZXJcbiAgICAgICAgICAmJiAoY2FwWzFdID09PSAncHJlJyB8fCBjYXBbMV0gPT09ICdzY3JpcHQnIHx8IGNhcFsxXSA9PT0gJ3N0eWxlJyksXG4gICAgICAgIHRleHQ6IGNhcFswXVxuICAgICAgfSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBkZWZcbiAgICBpZiAoKCFicSAmJiB0b3ApICYmIChjYXAgPSB0aGlzLnJ1bGVzLmRlZi5leGVjKHNyYykpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgdGhpcy50b2tlbnMubGlua3NbY2FwWzFdLnRvTG93ZXJDYXNlKCldID0ge1xuICAgICAgICBocmVmOiBjYXBbMl0sXG4gICAgICAgIHRpdGxlOiBjYXBbM11cbiAgICAgIH07XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyB0YWJsZSAoZ2ZtKVxuICAgIGlmICh0b3AgJiYgKGNhcCA9IHRoaXMucnVsZXMudGFibGUuZXhlYyhzcmMpKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcblxuICAgICAgaXRlbSA9IHtcbiAgICAgICAgdHlwZTogJ3RhYmxlJyxcbiAgICAgICAgaGVhZGVyOiBjYXBbMV0ucmVwbGFjZSgvXiAqfCAqXFx8ICokL2csICcnKS5zcGxpdCgvICpcXHwgKi8pLFxuICAgICAgICBhbGlnbjogY2FwWzJdLnJlcGxhY2UoL14gKnxcXHwgKiQvZywgJycpLnNwbGl0KC8gKlxcfCAqLyksXG4gICAgICAgIGNlbGxzOiBjYXBbM10ucmVwbGFjZSgvKD86ICpcXHwgKik/XFxuJC8sICcnKS5zcGxpdCgnXFxuJylcbiAgICAgIH07XG5cbiAgICAgIGZvciAoaSA9IDA7IGkgPCBpdGVtLmFsaWduLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICgvXiAqLSs6ICokLy50ZXN0KGl0ZW0uYWxpZ25baV0pKSB7XG4gICAgICAgICAgaXRlbS5hbGlnbltpXSA9ICdyaWdodCc7XG4gICAgICAgIH0gZWxzZSBpZiAoL14gKjotKzogKiQvLnRlc3QoaXRlbS5hbGlnbltpXSkpIHtcbiAgICAgICAgICBpdGVtLmFsaWduW2ldID0gJ2NlbnRlcic7XG4gICAgICAgIH0gZWxzZSBpZiAoL14gKjotKyAqJC8udGVzdChpdGVtLmFsaWduW2ldKSkge1xuICAgICAgICAgIGl0ZW0uYWxpZ25baV0gPSAnbGVmdCc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbS5hbGlnbltpXSA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZm9yIChpID0gMDsgaSA8IGl0ZW0uY2VsbHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaXRlbS5jZWxsc1tpXSA9IGl0ZW0uY2VsbHNbaV1cbiAgICAgICAgICAucmVwbGFjZSgvXiAqXFx8ICp8ICpcXHwgKiQvZywgJycpXG4gICAgICAgICAgLnNwbGl0KC8gKlxcfCAqLyk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMudG9rZW5zLnB1c2goaXRlbSk7XG5cbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIHRvcC1sZXZlbCBwYXJhZ3JhcGhcbiAgICBpZiAodG9wICYmIChjYXAgPSB0aGlzLnJ1bGVzLnBhcmFncmFwaC5leGVjKHNyYykpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgdGhpcy50b2tlbnMucHVzaCh7XG4gICAgICAgIHR5cGU6ICdwYXJhZ3JhcGgnLFxuICAgICAgICB0ZXh0OiBjYXBbMV0uY2hhckF0KGNhcFsxXS5sZW5ndGggLSAxKSA9PT0gJ1xcbidcbiAgICAgICAgICA/IGNhcFsxXS5zbGljZSgwLCAtMSlcbiAgICAgICAgICA6IGNhcFsxXVxuICAgICAgfSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyB0ZXh0XG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMudGV4dC5leGVjKHNyYykpIHtcbiAgICAgIC8vIFRvcC1sZXZlbCBzaG91bGQgbmV2ZXIgcmVhY2ggaGVyZS5cbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICB0aGlzLnRva2Vucy5wdXNoKHtcbiAgICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgICB0ZXh0OiBjYXBbMF1cbiAgICAgIH0pO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKHNyYykge1xuICAgICAgdGhyb3cgbmV3XG4gICAgICAgIEVycm9yKCdJbmZpbml0ZSBsb29wIG9uIGJ5dGU6ICcgKyBzcmMuY2hhckNvZGVBdCgwKSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRoaXMudG9rZW5zO1xufTtcblxuLyoqXG4gKiBJbmxpbmUtTGV2ZWwgR3JhbW1hclxuICovXG5cbnZhciBpbmxpbmUgPSB7XG4gIGVzY2FwZTogL15cXFxcKFtcXFxcYCp7fVxcW1xcXSgpIytcXC0uIV8+XSkvLFxuICBhdXRvbGluazogL148KFteIDw+XSsoQHw6XFwvKVteIDw+XSspPi8sXG4gIHVybDogbm9vcCxcbiAgdGFnOiAvXjwhLS1bXFxzXFxTXSo/LS0+fF48XFwvP1xcdysoPzpcIlteXCJdKlwifCdbXiddKid8W148J1wiPl0pKj8+LyxcbiAgbGluazogL14hP1xcWyhpbnNpZGUpXFxdXFwoaHJlZlxcKS8sXG4gIHJlZmxpbms6IC9eIT9cXFsoaW5zaWRlKVxcXVxccypcXFsoW15cXF1dKilcXF0vLFxuICBub2xpbms6IC9eIT9cXFsoKD86XFxbW15cXF1dKlxcXXxbXlxcW1xcXV0pKilcXF0vLFxuICBzdHJvbmc6IC9eX18oW1xcc1xcU10rPylfXyg/IV8pfF5cXCpcXCooW1xcc1xcU10rPylcXCpcXCooPyFcXCopLyxcbiAgZW06IC9eXFxiXygoPzpbXl9dfF9fKSs/KV9cXGJ8XlxcKigoPzpcXCpcXCp8W1xcc1xcU10pKz8pXFwqKD8hXFwqKS8sXG4gIGNvZGU6IC9eKGArKShbXFxzXFxTXSo/W15gXSlcXDEoPyFgKS8sXG4gIGJyOiAvXiB7Mix9XFxuKD8hXFxzKiQpLyxcbiAgZGVsOiBub29wLFxuICB0ZXh0OiAvXltcXHNcXFNdKz8oPz1bXFxcXDwhXFxbXypgXXwgezIsfVxcbnwkKS9cbn07XG5cbmlubGluZS5faW5zaWRlID0gLyg/OlxcW1teXFxdXSpcXF18XFxcXFtcXFtcXF1dfFteXFxbXFxdXXxcXF0oPz1bXlxcW10qXFxdKSkqLztcbmlubGluZS5faHJlZiA9IC9cXHMqPD8oW1xcc1xcU10qPyk+Pyg/OlxccytbJ1wiXShbXFxzXFxTXSo/KVsnXCJdKT9cXHMqLztcblxuaW5saW5lLmxpbmsgPSByZXBsYWNlKGlubGluZS5saW5rKVxuICAoJ2luc2lkZScsIGlubGluZS5faW5zaWRlKVxuICAoJ2hyZWYnLCBpbmxpbmUuX2hyZWYpXG4gICgpO1xuXG5pbmxpbmUucmVmbGluayA9IHJlcGxhY2UoaW5saW5lLnJlZmxpbmspXG4gICgnaW5zaWRlJywgaW5saW5lLl9pbnNpZGUpXG4gICgpO1xuXG4vKipcbiAqIE5vcm1hbCBJbmxpbmUgR3JhbW1hclxuICovXG5cbmlubGluZS5ub3JtYWwgPSBtZXJnZSh7fSwgaW5saW5lKTtcblxuLyoqXG4gKiBQZWRhbnRpYyBJbmxpbmUgR3JhbW1hclxuICovXG5cbmlubGluZS5wZWRhbnRpYyA9IG1lcmdlKHt9LCBpbmxpbmUubm9ybWFsLCB7XG4gIHN0cm9uZzogL15fXyg/PVxcUykoW1xcc1xcU10qP1xcUylfXyg/IV8pfF5cXCpcXCooPz1cXFMpKFtcXHNcXFNdKj9cXFMpXFwqXFwqKD8hXFwqKS8sXG4gIGVtOiAvXl8oPz1cXFMpKFtcXHNcXFNdKj9cXFMpXyg/IV8pfF5cXCooPz1cXFMpKFtcXHNcXFNdKj9cXFMpXFwqKD8hXFwqKS9cbn0pO1xuXG4vKipcbiAqIEdGTSBJbmxpbmUgR3JhbW1hclxuICovXG5cbmlubGluZS5nZm0gPSBtZXJnZSh7fSwgaW5saW5lLm5vcm1hbCwge1xuICBlc2NhcGU6IHJlcGxhY2UoaW5saW5lLmVzY2FwZSkoJ10pJywgJ358XSknKSgpLFxuICB1cmw6IC9eKGh0dHBzPzpcXC9cXC9bXlxcczxdK1tePC4sOjtcIicpXFxdXFxzXSkvLFxuICBkZWw6IC9efn4oPz1cXFMpKFtcXHNcXFNdKj9cXFMpfn4vLFxuICB0ZXh0OiByZXBsYWNlKGlubGluZS50ZXh0KVxuICAgICgnXXwnLCAnfl18JylcbiAgICAoJ3wnLCAnfGh0dHBzPzovL3wnKVxuICAgICgpXG59KTtcblxuLyoqXG4gKiBHRk0gKyBMaW5lIEJyZWFrcyBJbmxpbmUgR3JhbW1hclxuICovXG5cbmlubGluZS5icmVha3MgPSBtZXJnZSh7fSwgaW5saW5lLmdmbSwge1xuICBicjogcmVwbGFjZShpbmxpbmUuYnIpKCd7Mix9JywgJyonKSgpLFxuICB0ZXh0OiByZXBsYWNlKGlubGluZS5nZm0udGV4dCkoJ3syLH0nLCAnKicpKClcbn0pO1xuXG4vKipcbiAqIElubGluZSBMZXhlciAmIENvbXBpbGVyXG4gKi9cblxuZnVuY3Rpb24gSW5saW5lTGV4ZXIobGlua3MsIG9wdGlvbnMpIHtcbiAgdGhpcy5vcHRpb25zID0gb3B0aW9ucyB8fCBtYXJrZWQuZGVmYXVsdHM7XG4gIHRoaXMubGlua3MgPSBsaW5rcztcbiAgdGhpcy5ydWxlcyA9IGlubGluZS5ub3JtYWw7XG4gIHRoaXMucmVuZGVyZXIgPSB0aGlzLm9wdGlvbnMucmVuZGVyZXIgfHwgbmV3IFJlbmRlcmVyO1xuICB0aGlzLnJlbmRlcmVyLm9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG5cbiAgaWYgKCF0aGlzLmxpbmtzKSB7XG4gICAgdGhyb3cgbmV3XG4gICAgICBFcnJvcignVG9rZW5zIGFycmF5IHJlcXVpcmVzIGEgYGxpbmtzYCBwcm9wZXJ0eS4nKTtcbiAgfVxuXG4gIGlmICh0aGlzLm9wdGlvbnMuZ2ZtKSB7XG4gICAgaWYgKHRoaXMub3B0aW9ucy5icmVha3MpIHtcbiAgICAgIHRoaXMucnVsZXMgPSBpbmxpbmUuYnJlYWtzO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnJ1bGVzID0gaW5saW5lLmdmbTtcbiAgICB9XG4gIH0gZWxzZSBpZiAodGhpcy5vcHRpb25zLnBlZGFudGljKSB7XG4gICAgdGhpcy5ydWxlcyA9IGlubGluZS5wZWRhbnRpYztcbiAgfVxufVxuXG4vKipcbiAqIEV4cG9zZSBJbmxpbmUgUnVsZXNcbiAqL1xuXG5JbmxpbmVMZXhlci5ydWxlcyA9IGlubGluZTtcblxuLyoqXG4gKiBTdGF0aWMgTGV4aW5nL0NvbXBpbGluZyBNZXRob2RcbiAqL1xuXG5JbmxpbmVMZXhlci5vdXRwdXQgPSBmdW5jdGlvbihzcmMsIGxpbmtzLCBvcHRpb25zKSB7XG4gIHZhciBpbmxpbmUgPSBuZXcgSW5saW5lTGV4ZXIobGlua3MsIG9wdGlvbnMpO1xuICByZXR1cm4gaW5saW5lLm91dHB1dChzcmMpO1xufTtcblxuLyoqXG4gKiBMZXhpbmcvQ29tcGlsaW5nXG4gKi9cblxuSW5saW5lTGV4ZXIucHJvdG90eXBlLm91dHB1dCA9IGZ1bmN0aW9uKHNyYykge1xuICB2YXIgb3V0ID0gJydcbiAgICAsIGxpbmtcbiAgICAsIHRleHRcbiAgICAsIGhyZWZcbiAgICAsIGNhcDtcblxuICB3aGlsZSAoc3JjKSB7XG4gICAgLy8gZXNjYXBlXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuZXNjYXBlLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIG91dCArPSBjYXBbMV07XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBhdXRvbGlua1xuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmF1dG9saW5rLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIGlmIChjYXBbMl0gPT09ICdAJykge1xuICAgICAgICB0ZXh0ID0gZXNjYXBlKFxuICAgICAgICAgIGNhcFsxXS5jaGFyQXQoNikgPT09ICc6J1xuICAgICAgICAgID8gdGhpcy5tYW5nbGUoY2FwWzFdLnN1YnN0cmluZyg3KSlcbiAgICAgICAgICA6IHRoaXMubWFuZ2xlKGNhcFsxXSlcbiAgICAgICAgKTtcbiAgICAgICAgaHJlZiA9IHRoaXMubWFuZ2xlKCdtYWlsdG86JykgKyB0ZXh0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGV4dCA9IGVzY2FwZShjYXBbMV0pO1xuICAgICAgICBocmVmID0gdGV4dDtcbiAgICAgIH1cbiAgICAgIG91dCArPSB0aGlzLnJlbmRlcmVyLmxpbmsoaHJlZiwgbnVsbCwgdGV4dCk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyB1cmwgKGdmbSlcbiAgICBpZiAoIXRoaXMuaW5MaW5rICYmIChjYXAgPSB0aGlzLnJ1bGVzLnVybC5leGVjKHNyYykpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgdGV4dCA9IGVzY2FwZShjYXBbMV0pO1xuICAgICAgaHJlZiA9IHRleHQ7XG4gICAgICBvdXQgKz0gdGhpcy5yZW5kZXJlci5saW5rKGhyZWYsIG51bGwsIHRleHQpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gdGFnXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMudGFnLmV4ZWMoc3JjKSkge1xuICAgICAgaWYgKCF0aGlzLmluTGluayAmJiAvXjxhIC9pLnRlc3QoY2FwWzBdKSkge1xuICAgICAgICB0aGlzLmluTGluayA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuaW5MaW5rICYmIC9ePFxcL2E+L2kudGVzdChjYXBbMF0pKSB7XG4gICAgICAgIHRoaXMuaW5MaW5rID0gZmFsc2U7XG4gICAgICB9XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgb3V0ICs9IHRoaXMub3B0aW9ucy5zYW5pdGl6ZVxuICAgICAgICA/IHRoaXMub3B0aW9ucy5zYW5pdGl6ZXJcbiAgICAgICAgICA/IHRoaXMub3B0aW9ucy5zYW5pdGl6ZXIoY2FwWzBdKVxuICAgICAgICAgIDogZXNjYXBlKGNhcFswXSlcbiAgICAgICAgOiBjYXBbMF1cbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGxpbmtcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5saW5rLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIHRoaXMuaW5MaW5rID0gdHJ1ZTtcbiAgICAgIG91dCArPSB0aGlzLm91dHB1dExpbmsoY2FwLCB7XG4gICAgICAgIGhyZWY6IGNhcFsyXSxcbiAgICAgICAgdGl0bGU6IGNhcFszXVxuICAgICAgfSk7XG4gICAgICB0aGlzLmluTGluayA9IGZhbHNlO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gcmVmbGluaywgbm9saW5rXG4gICAgaWYgKChjYXAgPSB0aGlzLnJ1bGVzLnJlZmxpbmsuZXhlYyhzcmMpKVxuICAgICAgICB8fCAoY2FwID0gdGhpcy5ydWxlcy5ub2xpbmsuZXhlYyhzcmMpKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIGxpbmsgPSAoY2FwWzJdIHx8IGNhcFsxXSkucmVwbGFjZSgvXFxzKy9nLCAnICcpO1xuICAgICAgbGluayA9IHRoaXMubGlua3NbbGluay50b0xvd2VyQ2FzZSgpXTtcbiAgICAgIGlmICghbGluayB8fCAhbGluay5ocmVmKSB7XG4gICAgICAgIG91dCArPSBjYXBbMF0uY2hhckF0KDApO1xuICAgICAgICBzcmMgPSBjYXBbMF0uc3Vic3RyaW5nKDEpICsgc3JjO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIHRoaXMuaW5MaW5rID0gdHJ1ZTtcbiAgICAgIG91dCArPSB0aGlzLm91dHB1dExpbmsoY2FwLCBsaW5rKTtcbiAgICAgIHRoaXMuaW5MaW5rID0gZmFsc2U7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBzdHJvbmdcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5zdHJvbmcuZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgb3V0ICs9IHRoaXMucmVuZGVyZXIuc3Ryb25nKHRoaXMub3V0cHV0KGNhcFsyXSB8fCBjYXBbMV0pKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGVtXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuZW0uZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgb3V0ICs9IHRoaXMucmVuZGVyZXIuZW0odGhpcy5vdXRwdXQoY2FwWzJdIHx8IGNhcFsxXSkpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gY29kZVxuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmNvZGUuZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgb3V0ICs9IHRoaXMucmVuZGVyZXIuY29kZXNwYW4oZXNjYXBlKGNhcFsyXS50cmltKCksIHRydWUpKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGJyXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuYnIuZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgb3V0ICs9IHRoaXMucmVuZGVyZXIuYnIoKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGRlbCAoZ2ZtKVxuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmRlbC5leGVjKHNyYykpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICBvdXQgKz0gdGhpcy5yZW5kZXJlci5kZWwodGhpcy5vdXRwdXQoY2FwWzFdKSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyB0ZXh0XG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMudGV4dC5leGVjKHNyYykpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICBvdXQgKz0gdGhpcy5yZW5kZXJlci50ZXh0KGVzY2FwZSh0aGlzLnNtYXJ0eXBhbnRzKGNhcFswXSkpKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGlmIChzcmMpIHtcbiAgICAgIHRocm93IG5ld1xuICAgICAgICBFcnJvcignSW5maW5pdGUgbG9vcCBvbiBieXRlOiAnICsgc3JjLmNoYXJDb2RlQXQoMCkpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvdXQ7XG59O1xuXG4vKipcbiAqIENvbXBpbGUgTGlua1xuICovXG5cbklubGluZUxleGVyLnByb3RvdHlwZS5vdXRwdXRMaW5rID0gZnVuY3Rpb24oY2FwLCBsaW5rKSB7XG4gIHZhciBocmVmID0gZXNjYXBlKGxpbmsuaHJlZilcbiAgICAsIHRpdGxlID0gbGluay50aXRsZSA/IGVzY2FwZShsaW5rLnRpdGxlKSA6IG51bGw7XG5cbiAgcmV0dXJuIGNhcFswXS5jaGFyQXQoMCkgIT09ICchJ1xuICAgID8gdGhpcy5yZW5kZXJlci5saW5rKGhyZWYsIHRpdGxlLCB0aGlzLm91dHB1dChjYXBbMV0pKVxuICAgIDogdGhpcy5yZW5kZXJlci5pbWFnZShocmVmLCB0aXRsZSwgZXNjYXBlKGNhcFsxXSkpO1xufTtcblxuLyoqXG4gKiBTbWFydHlwYW50cyBUcmFuc2Zvcm1hdGlvbnNcbiAqL1xuXG5JbmxpbmVMZXhlci5wcm90b3R5cGUuc21hcnR5cGFudHMgPSBmdW5jdGlvbih0ZXh0KSB7XG4gIGlmICghdGhpcy5vcHRpb25zLnNtYXJ0eXBhbnRzKSByZXR1cm4gdGV4dDtcbiAgcmV0dXJuIHRleHRcbiAgICAvLyBlbS1kYXNoZXNcbiAgICAucmVwbGFjZSgvLS0tL2csICdcXHUyMDE0JylcbiAgICAvLyBlbi1kYXNoZXNcbiAgICAucmVwbGFjZSgvLS0vZywgJ1xcdTIwMTMnKVxuICAgIC8vIG9wZW5pbmcgc2luZ2xlc1xuICAgIC5yZXBsYWNlKC8oXnxbLVxcdTIwMTQvKFxcW3tcIlxcc10pJy9nLCAnJDFcXHUyMDE4JylcbiAgICAvLyBjbG9zaW5nIHNpbmdsZXMgJiBhcG9zdHJvcGhlc1xuICAgIC5yZXBsYWNlKC8nL2csICdcXHUyMDE5JylcbiAgICAvLyBvcGVuaW5nIGRvdWJsZXNcbiAgICAucmVwbGFjZSgvKF58Wy1cXHUyMDE0LyhcXFt7XFx1MjAxOFxcc10pXCIvZywgJyQxXFx1MjAxYycpXG4gICAgLy8gY2xvc2luZyBkb3VibGVzXG4gICAgLnJlcGxhY2UoL1wiL2csICdcXHUyMDFkJylcbiAgICAvLyBlbGxpcHNlc1xuICAgIC5yZXBsYWNlKC9cXC57M30vZywgJ1xcdTIwMjYnKTtcbn07XG5cbi8qKlxuICogTWFuZ2xlIExpbmtzXG4gKi9cblxuSW5saW5lTGV4ZXIucHJvdG90eXBlLm1hbmdsZSA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgaWYgKCF0aGlzLm9wdGlvbnMubWFuZ2xlKSByZXR1cm4gdGV4dDtcbiAgdmFyIG91dCA9ICcnXG4gICAgLCBsID0gdGV4dC5sZW5ndGhcbiAgICAsIGkgPSAwXG4gICAgLCBjaDtcblxuICBmb3IgKDsgaSA8IGw7IGkrKykge1xuICAgIGNoID0gdGV4dC5jaGFyQ29kZUF0KGkpO1xuICAgIGlmIChNYXRoLnJhbmRvbSgpID4gMC41KSB7XG4gICAgICBjaCA9ICd4JyArIGNoLnRvU3RyaW5nKDE2KTtcbiAgICB9XG4gICAgb3V0ICs9ICcmIycgKyBjaCArICc7JztcbiAgfVxuXG4gIHJldHVybiBvdXQ7XG59O1xuXG4vKipcbiAqIFJlbmRlcmVyXG4gKi9cblxuZnVuY3Rpb24gUmVuZGVyZXIob3B0aW9ucykge1xuICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xufVxuXG5SZW5kZXJlci5wcm90b3R5cGUuY29kZSA9IGZ1bmN0aW9uKGNvZGUsIGxhbmcsIGVzY2FwZWQpIHtcbiAgaWYgKHRoaXMub3B0aW9ucy5oaWdobGlnaHQpIHtcbiAgICB2YXIgb3V0ID0gdGhpcy5vcHRpb25zLmhpZ2hsaWdodChjb2RlLCBsYW5nKTtcbiAgICBpZiAob3V0ICE9IG51bGwgJiYgb3V0ICE9PSBjb2RlKSB7XG4gICAgICBlc2NhcGVkID0gdHJ1ZTtcbiAgICAgIGNvZGUgPSBvdXQ7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFsYW5nKSB7XG4gICAgcmV0dXJuICc8cHJlPjxjb2RlPidcbiAgICAgICsgKGVzY2FwZWQgPyBjb2RlIDogZXNjYXBlKGNvZGUsIHRydWUpKVxuICAgICAgKyAnXFxuPC9jb2RlPjwvcHJlPic7XG4gIH1cblxuICByZXR1cm4gJzxwcmU+PGNvZGUgY2xhc3M9XCInXG4gICAgKyB0aGlzLm9wdGlvbnMubGFuZ1ByZWZpeFxuICAgICsgZXNjYXBlKGxhbmcsIHRydWUpXG4gICAgKyAnXCI+J1xuICAgICsgKGVzY2FwZWQgPyBjb2RlIDogZXNjYXBlKGNvZGUsIHRydWUpKVxuICAgICsgJ1xcbjwvY29kZT48L3ByZT5cXG4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLmJsb2NrcXVvdGUgPSBmdW5jdGlvbihxdW90ZSkge1xuICByZXR1cm4gJzxibG9ja3F1b3RlPlxcbicgKyBxdW90ZSArICc8L2Jsb2NrcXVvdGU+XFxuJztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5odG1sID0gZnVuY3Rpb24oaHRtbCkge1xuICByZXR1cm4gaHRtbDtcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5oZWFkaW5nID0gZnVuY3Rpb24odGV4dCwgbGV2ZWwsIHJhdykge1xuICByZXR1cm4gJzxoJ1xuICAgICsgbGV2ZWxcbiAgICArICcgaWQ9XCInXG4gICAgKyB0aGlzLm9wdGlvbnMuaGVhZGVyUHJlZml4XG4gICAgKyByYXcudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9bXlxcd10rL2csICctJylcbiAgICArICdcIj4nXG4gICAgKyB0ZXh0XG4gICAgKyAnPC9oJ1xuICAgICsgbGV2ZWxcbiAgICArICc+XFxuJztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5ociA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5vcHRpb25zLnhodG1sID8gJzxoci8+XFxuJyA6ICc8aHI+XFxuJztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5saXN0ID0gZnVuY3Rpb24oYm9keSwgb3JkZXJlZCkge1xuICB2YXIgdHlwZSA9IG9yZGVyZWQgPyAnb2wnIDogJ3VsJztcbiAgcmV0dXJuICc8JyArIHR5cGUgKyAnPlxcbicgKyBib2R5ICsgJzwvJyArIHR5cGUgKyAnPlxcbic7XG59O1xuXG5SZW5kZXJlci5wcm90b3R5cGUubGlzdGl0ZW0gPSBmdW5jdGlvbih0ZXh0KSB7XG4gIHJldHVybiAnPGxpPicgKyB0ZXh0ICsgJzwvbGk+XFxuJztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5wYXJhZ3JhcGggPSBmdW5jdGlvbih0ZXh0KSB7XG4gIHJldHVybiAnPHA+JyArIHRleHQgKyAnPC9wPlxcbic7XG59O1xuXG5SZW5kZXJlci5wcm90b3R5cGUudGFibGUgPSBmdW5jdGlvbihoZWFkZXIsIGJvZHkpIHtcbiAgcmV0dXJuICc8dGFibGU+XFxuJ1xuICAgICsgJzx0aGVhZD5cXG4nXG4gICAgKyBoZWFkZXJcbiAgICArICc8L3RoZWFkPlxcbidcbiAgICArICc8dGJvZHk+XFxuJ1xuICAgICsgYm9keVxuICAgICsgJzwvdGJvZHk+XFxuJ1xuICAgICsgJzwvdGFibGU+XFxuJztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS50YWJsZXJvdyA9IGZ1bmN0aW9uKGNvbnRlbnQpIHtcbiAgcmV0dXJuICc8dHI+XFxuJyArIGNvbnRlbnQgKyAnPC90cj5cXG4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLnRhYmxlY2VsbCA9IGZ1bmN0aW9uKGNvbnRlbnQsIGZsYWdzKSB7XG4gIHZhciB0eXBlID0gZmxhZ3MuaGVhZGVyID8gJ3RoJyA6ICd0ZCc7XG4gIHZhciB0YWcgPSBmbGFncy5hbGlnblxuICAgID8gJzwnICsgdHlwZSArICcgc3R5bGU9XCJ0ZXh0LWFsaWduOicgKyBmbGFncy5hbGlnbiArICdcIj4nXG4gICAgOiAnPCcgKyB0eXBlICsgJz4nO1xuICByZXR1cm4gdGFnICsgY29udGVudCArICc8LycgKyB0eXBlICsgJz5cXG4nO1xufTtcblxuLy8gc3BhbiBsZXZlbCByZW5kZXJlclxuUmVuZGVyZXIucHJvdG90eXBlLnN0cm9uZyA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgcmV0dXJuICc8c3Ryb25nPicgKyB0ZXh0ICsgJzwvc3Ryb25nPic7XG59O1xuXG5SZW5kZXJlci5wcm90b3R5cGUuZW0gPSBmdW5jdGlvbih0ZXh0KSB7XG4gIHJldHVybiAnPGVtPicgKyB0ZXh0ICsgJzwvZW0+Jztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5jb2Rlc3BhbiA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgcmV0dXJuICc8Y29kZT4nICsgdGV4dCArICc8L2NvZGU+Jztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5iciA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5vcHRpb25zLnhodG1sID8gJzxici8+JyA6ICc8YnI+Jztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5kZWwgPSBmdW5jdGlvbih0ZXh0KSB7XG4gIHJldHVybiAnPGRlbD4nICsgdGV4dCArICc8L2RlbD4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLmxpbmsgPSBmdW5jdGlvbihocmVmLCB0aXRsZSwgdGV4dCkge1xuICBpZiAodGhpcy5vcHRpb25zLnNhbml0aXplKSB7XG4gICAgdHJ5IHtcbiAgICAgIHZhciBwcm90ID0gZGVjb2RlVVJJQ29tcG9uZW50KHVuZXNjYXBlKGhyZWYpKVxuICAgICAgICAucmVwbGFjZSgvW15cXHc6XS9nLCAnJylcbiAgICAgICAgLnRvTG93ZXJDYXNlKCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIHRleHQ7XG4gICAgfVxuICAgIGlmIChwcm90LmluZGV4T2YoJ2phdmFzY3JpcHQ6JykgPT09IDAgfHwgcHJvdC5pbmRleE9mKCd2YnNjcmlwdDonKSA9PT0gMCB8fCBwcm90LmluZGV4T2YoJ2RhdGE6JykgPT09IDApIHtcbiAgICAgIHJldHVybiB0ZXh0O1xuICAgIH1cbiAgfVxuICBpZiAodGhpcy5vcHRpb25zLmJhc2VVcmwgJiYgIW9yaWdpbkluZGVwZW5kZW50VXJsLnRlc3QoaHJlZikpIHtcbiAgICBocmVmID0gcmVzb2x2ZVVybCh0aGlzLm9wdGlvbnMuYmFzZVVybCwgaHJlZik7XG4gIH1cbiAgdmFyIG91dCA9ICc8YSBocmVmPVwiJyArIGhyZWYgKyAnXCInO1xuICBpZiAodGl0bGUpIHtcbiAgICBvdXQgKz0gJyB0aXRsZT1cIicgKyB0aXRsZSArICdcIic7XG4gIH1cbiAgb3V0ICs9ICc+JyArIHRleHQgKyAnPC9hPic7XG4gIHJldHVybiBvdXQ7XG59O1xuXG5SZW5kZXJlci5wcm90b3R5cGUuaW1hZ2UgPSBmdW5jdGlvbihocmVmLCB0aXRsZSwgdGV4dCkge1xuICBpZiAodGhpcy5vcHRpb25zLmJhc2VVcmwgJiYgIW9yaWdpbkluZGVwZW5kZW50VXJsLnRlc3QoaHJlZikpIHtcbiAgICBocmVmID0gcmVzb2x2ZVVybCh0aGlzLm9wdGlvbnMuYmFzZVVybCwgaHJlZik7XG4gIH1cbiAgdmFyIG91dCA9ICc8aW1nIHNyYz1cIicgKyBocmVmICsgJ1wiIGFsdD1cIicgKyB0ZXh0ICsgJ1wiJztcbiAgaWYgKHRpdGxlKSB7XG4gICAgb3V0ICs9ICcgdGl0bGU9XCInICsgdGl0bGUgKyAnXCInO1xuICB9XG4gIG91dCArPSB0aGlzLm9wdGlvbnMueGh0bWwgPyAnLz4nIDogJz4nO1xuICByZXR1cm4gb3V0O1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLnRleHQgPSBmdW5jdGlvbih0ZXh0KSB7XG4gIHJldHVybiB0ZXh0O1xufTtcblxuLyoqXG4gKiBQYXJzaW5nICYgQ29tcGlsaW5nXG4gKi9cblxuZnVuY3Rpb24gUGFyc2VyKG9wdGlvbnMpIHtcbiAgdGhpcy50b2tlbnMgPSBbXTtcbiAgdGhpcy50b2tlbiA9IG51bGw7XG4gIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgfHwgbWFya2VkLmRlZmF1bHRzO1xuICB0aGlzLm9wdGlvbnMucmVuZGVyZXIgPSB0aGlzLm9wdGlvbnMucmVuZGVyZXIgfHwgbmV3IFJlbmRlcmVyO1xuICB0aGlzLnJlbmRlcmVyID0gdGhpcy5vcHRpb25zLnJlbmRlcmVyO1xuICB0aGlzLnJlbmRlcmVyLm9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG59XG5cbi8qKlxuICogU3RhdGljIFBhcnNlIE1ldGhvZFxuICovXG5cblBhcnNlci5wYXJzZSA9IGZ1bmN0aW9uKHNyYywgb3B0aW9ucywgcmVuZGVyZXIpIHtcbiAgdmFyIHBhcnNlciA9IG5ldyBQYXJzZXIob3B0aW9ucywgcmVuZGVyZXIpO1xuICByZXR1cm4gcGFyc2VyLnBhcnNlKHNyYyk7XG59O1xuXG4vKipcbiAqIFBhcnNlIExvb3BcbiAqL1xuXG5QYXJzZXIucHJvdG90eXBlLnBhcnNlID0gZnVuY3Rpb24oc3JjKSB7XG4gIHRoaXMuaW5saW5lID0gbmV3IElubGluZUxleGVyKHNyYy5saW5rcywgdGhpcy5vcHRpb25zLCB0aGlzLnJlbmRlcmVyKTtcbiAgdGhpcy50b2tlbnMgPSBzcmMucmV2ZXJzZSgpO1xuXG4gIHZhciBvdXQgPSAnJztcbiAgd2hpbGUgKHRoaXMubmV4dCgpKSB7XG4gICAgb3V0ICs9IHRoaXMudG9rKCk7XG4gIH1cblxuICByZXR1cm4gb3V0O1xufTtcblxuLyoqXG4gKiBOZXh0IFRva2VuXG4gKi9cblxuUGFyc2VyLnByb3RvdHlwZS5uZXh0ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLnRva2VuID0gdGhpcy50b2tlbnMucG9wKCk7XG59O1xuXG4vKipcbiAqIFByZXZpZXcgTmV4dCBUb2tlblxuICovXG5cblBhcnNlci5wcm90b3R5cGUucGVlayA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy50b2tlbnNbdGhpcy50b2tlbnMubGVuZ3RoIC0gMV0gfHwgMDtcbn07XG5cbi8qKlxuICogUGFyc2UgVGV4dCBUb2tlbnNcbiAqL1xuXG5QYXJzZXIucHJvdG90eXBlLnBhcnNlVGV4dCA9IGZ1bmN0aW9uKCkge1xuICB2YXIgYm9keSA9IHRoaXMudG9rZW4udGV4dDtcblxuICB3aGlsZSAodGhpcy5wZWVrKCkudHlwZSA9PT0gJ3RleHQnKSB7XG4gICAgYm9keSArPSAnXFxuJyArIHRoaXMubmV4dCgpLnRleHQ7XG4gIH1cblxuICByZXR1cm4gdGhpcy5pbmxpbmUub3V0cHV0KGJvZHkpO1xufTtcblxuLyoqXG4gKiBQYXJzZSBDdXJyZW50IFRva2VuXG4gKi9cblxuUGFyc2VyLnByb3RvdHlwZS50b2sgPSBmdW5jdGlvbigpIHtcbiAgc3dpdGNoICh0aGlzLnRva2VuLnR5cGUpIHtcbiAgICBjYXNlICdzcGFjZSc6IHtcbiAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgY2FzZSAnaHInOiB7XG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5ocigpO1xuICAgIH1cbiAgICBjYXNlICdoZWFkaW5nJzoge1xuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIuaGVhZGluZyhcbiAgICAgICAgdGhpcy5pbmxpbmUub3V0cHV0KHRoaXMudG9rZW4udGV4dCksXG4gICAgICAgIHRoaXMudG9rZW4uZGVwdGgsXG4gICAgICAgIHRoaXMudG9rZW4udGV4dCk7XG4gICAgfVxuICAgIGNhc2UgJ2NvZGUnOiB7XG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5jb2RlKHRoaXMudG9rZW4udGV4dCxcbiAgICAgICAgdGhpcy50b2tlbi5sYW5nLFxuICAgICAgICB0aGlzLnRva2VuLmVzY2FwZWQpO1xuICAgIH1cbiAgICBjYXNlICd0YWJsZSc6IHtcbiAgICAgIHZhciBoZWFkZXIgPSAnJ1xuICAgICAgICAsIGJvZHkgPSAnJ1xuICAgICAgICAsIGlcbiAgICAgICAgLCByb3dcbiAgICAgICAgLCBjZWxsXG4gICAgICAgICwgZmxhZ3NcbiAgICAgICAgLCBqO1xuXG4gICAgICAvLyBoZWFkZXJcbiAgICAgIGNlbGwgPSAnJztcbiAgICAgIGZvciAoaSA9IDA7IGkgPCB0aGlzLnRva2VuLmhlYWRlci5sZW5ndGg7IGkrKykge1xuICAgICAgICBmbGFncyA9IHsgaGVhZGVyOiB0cnVlLCBhbGlnbjogdGhpcy50b2tlbi5hbGlnbltpXSB9O1xuICAgICAgICBjZWxsICs9IHRoaXMucmVuZGVyZXIudGFibGVjZWxsKFxuICAgICAgICAgIHRoaXMuaW5saW5lLm91dHB1dCh0aGlzLnRva2VuLmhlYWRlcltpXSksXG4gICAgICAgICAgeyBoZWFkZXI6IHRydWUsIGFsaWduOiB0aGlzLnRva2VuLmFsaWduW2ldIH1cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIGhlYWRlciArPSB0aGlzLnJlbmRlcmVyLnRhYmxlcm93KGNlbGwpO1xuXG4gICAgICBmb3IgKGkgPSAwOyBpIDwgdGhpcy50b2tlbi5jZWxscy5sZW5ndGg7IGkrKykge1xuICAgICAgICByb3cgPSB0aGlzLnRva2VuLmNlbGxzW2ldO1xuXG4gICAgICAgIGNlbGwgPSAnJztcbiAgICAgICAgZm9yIChqID0gMDsgaiA8IHJvdy5sZW5ndGg7IGorKykge1xuICAgICAgICAgIGNlbGwgKz0gdGhpcy5yZW5kZXJlci50YWJsZWNlbGwoXG4gICAgICAgICAgICB0aGlzLmlubGluZS5vdXRwdXQocm93W2pdKSxcbiAgICAgICAgICAgIHsgaGVhZGVyOiBmYWxzZSwgYWxpZ246IHRoaXMudG9rZW4uYWxpZ25bal0gfVxuICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICBib2R5ICs9IHRoaXMucmVuZGVyZXIudGFibGVyb3coY2VsbCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci50YWJsZShoZWFkZXIsIGJvZHkpO1xuICAgIH1cbiAgICBjYXNlICdibG9ja3F1b3RlX3N0YXJ0Jzoge1xuICAgICAgdmFyIGJvZHkgPSAnJztcblxuICAgICAgd2hpbGUgKHRoaXMubmV4dCgpLnR5cGUgIT09ICdibG9ja3F1b3RlX2VuZCcpIHtcbiAgICAgICAgYm9keSArPSB0aGlzLnRvaygpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5ibG9ja3F1b3RlKGJvZHkpO1xuICAgIH1cbiAgICBjYXNlICdsaXN0X3N0YXJ0Jzoge1xuICAgICAgdmFyIGJvZHkgPSAnJ1xuICAgICAgICAsIG9yZGVyZWQgPSB0aGlzLnRva2VuLm9yZGVyZWQ7XG5cbiAgICAgIHdoaWxlICh0aGlzLm5leHQoKS50eXBlICE9PSAnbGlzdF9lbmQnKSB7XG4gICAgICAgIGJvZHkgKz0gdGhpcy50b2soKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIubGlzdChib2R5LCBvcmRlcmVkKTtcbiAgICB9XG4gICAgY2FzZSAnbGlzdF9pdGVtX3N0YXJ0Jzoge1xuICAgICAgdmFyIGJvZHkgPSAnJztcblxuICAgICAgd2hpbGUgKHRoaXMubmV4dCgpLnR5cGUgIT09ICdsaXN0X2l0ZW1fZW5kJykge1xuICAgICAgICBib2R5ICs9IHRoaXMudG9rZW4udHlwZSA9PT0gJ3RleHQnXG4gICAgICAgICAgPyB0aGlzLnBhcnNlVGV4dCgpXG4gICAgICAgICAgOiB0aGlzLnRvaygpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5saXN0aXRlbShib2R5KTtcbiAgICB9XG4gICAgY2FzZSAnbG9vc2VfaXRlbV9zdGFydCc6IHtcbiAgICAgIHZhciBib2R5ID0gJyc7XG5cbiAgICAgIHdoaWxlICh0aGlzLm5leHQoKS50eXBlICE9PSAnbGlzdF9pdGVtX2VuZCcpIHtcbiAgICAgICAgYm9keSArPSB0aGlzLnRvaygpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5saXN0aXRlbShib2R5KTtcbiAgICB9XG4gICAgY2FzZSAnaHRtbCc6IHtcbiAgICAgIHZhciBodG1sID0gIXRoaXMudG9rZW4ucHJlICYmICF0aGlzLm9wdGlvbnMucGVkYW50aWNcbiAgICAgICAgPyB0aGlzLmlubGluZS5vdXRwdXQodGhpcy50b2tlbi50ZXh0KVxuICAgICAgICA6IHRoaXMudG9rZW4udGV4dDtcbiAgICAgIHJldHVybiB0aGlzLnJlbmRlcmVyLmh0bWwoaHRtbCk7XG4gICAgfVxuICAgIGNhc2UgJ3BhcmFncmFwaCc6IHtcbiAgICAgIHJldHVybiB0aGlzLnJlbmRlcmVyLnBhcmFncmFwaCh0aGlzLmlubGluZS5vdXRwdXQodGhpcy50b2tlbi50ZXh0KSk7XG4gICAgfVxuICAgIGNhc2UgJ3RleHQnOiB7XG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5wYXJhZ3JhcGgodGhpcy5wYXJzZVRleHQoKSk7XG4gICAgfVxuICB9XG59O1xuXG4vKipcbiAqIEhlbHBlcnNcbiAqL1xuXG5mdW5jdGlvbiBlc2NhcGUoaHRtbCwgZW5jb2RlKSB7XG4gIHJldHVybiBodG1sXG4gICAgLnJlcGxhY2UoIWVuY29kZSA/IC8mKD8hIz9cXHcrOykvZyA6IC8mL2csICcmYW1wOycpXG4gICAgLnJlcGxhY2UoLzwvZywgJyZsdDsnKVxuICAgIC5yZXBsYWNlKC8+L2csICcmZ3Q7JylcbiAgICAucmVwbGFjZSgvXCIvZywgJyZxdW90OycpXG4gICAgLnJlcGxhY2UoLycvZywgJyYjMzk7Jyk7XG59XG5cbmZ1bmN0aW9uIHVuZXNjYXBlKGh0bWwpIHtcblx0Ly8gZXhwbGljaXRseSBtYXRjaCBkZWNpbWFsLCBoZXgsIGFuZCBuYW1lZCBIVE1MIGVudGl0aWVzXG4gIHJldHVybiBodG1sLnJlcGxhY2UoLyYoIyg/OlxcZCspfCg/OiN4WzAtOUEtRmEtZl0rKXwoPzpcXHcrKSk7Py9pZywgZnVuY3Rpb24oXywgbikge1xuICAgIG4gPSBuLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKG4gPT09ICdjb2xvbicpIHJldHVybiAnOic7XG4gICAgaWYgKG4uY2hhckF0KDApID09PSAnIycpIHtcbiAgICAgIHJldHVybiBuLmNoYXJBdCgxKSA9PT0gJ3gnXG4gICAgICAgID8gU3RyaW5nLmZyb21DaGFyQ29kZShwYXJzZUludChuLnN1YnN0cmluZygyKSwgMTYpKVxuICAgICAgICA6IFN0cmluZy5mcm9tQ2hhckNvZGUoK24uc3Vic3RyaW5nKDEpKTtcbiAgICB9XG4gICAgcmV0dXJuICcnO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZShyZWdleCwgb3B0KSB7XG4gIHJlZ2V4ID0gcmVnZXguc291cmNlO1xuICBvcHQgPSBvcHQgfHwgJyc7XG4gIHJldHVybiBmdW5jdGlvbiBzZWxmKG5hbWUsIHZhbCkge1xuICAgIGlmICghbmFtZSkgcmV0dXJuIG5ldyBSZWdFeHAocmVnZXgsIG9wdCk7XG4gICAgdmFsID0gdmFsLnNvdXJjZSB8fCB2YWw7XG4gICAgdmFsID0gdmFsLnJlcGxhY2UoLyhefFteXFxbXSlcXF4vZywgJyQxJyk7XG4gICAgcmVnZXggPSByZWdleC5yZXBsYWNlKG5hbWUsIHZhbCk7XG4gICAgcmV0dXJuIHNlbGY7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVVcmwoYmFzZSwgaHJlZikge1xuICBpZiAoIWJhc2VVcmxzWycgJyArIGJhc2VdKSB7XG4gICAgLy8gd2UgY2FuIGlnbm9yZSBldmVyeXRoaW5nIGluIGJhc2UgYWZ0ZXIgdGhlIGxhc3Qgc2xhc2ggb2YgaXRzIHBhdGggY29tcG9uZW50LFxuICAgIC8vIGJ1dCB3ZSBtaWdodCBuZWVkIHRvIGFkZCBfdGhhdF9cbiAgICAvLyBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzk4NiNzZWN0aW9uLTNcbiAgICBpZiAoL15bXjpdKzpcXC8qW14vXSokLy50ZXN0KGJhc2UpKSB7XG4gICAgICBiYXNlVXJsc1snICcgKyBiYXNlXSA9IGJhc2UgKyAnLyc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJhc2VVcmxzWycgJyArIGJhc2VdID0gYmFzZS5yZXBsYWNlKC9bXi9dKiQvLCAnJyk7XG4gICAgfVxuICB9XG4gIGJhc2UgPSBiYXNlVXJsc1snICcgKyBiYXNlXTtcblxuICBpZiAoaHJlZi5zbGljZSgwLCAyKSA9PT0gJy8vJykge1xuICAgIHJldHVybiBiYXNlLnJlcGxhY2UoLzpbXFxzXFxTXSovLCAnOicpICsgaHJlZjtcbiAgfSBlbHNlIGlmIChocmVmLmNoYXJBdCgwKSA9PT0gJy8nKSB7XG4gICAgcmV0dXJuIGJhc2UucmVwbGFjZSgvKDpcXC8qW14vXSopW1xcc1xcU10qLywgJyQxJykgKyBocmVmO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBiYXNlICsgaHJlZjtcbiAgfVxufVxudmFyIGJhc2VVcmxzID0ge307XG52YXIgb3JpZ2luSW5kZXBlbmRlbnRVcmwgPSAvXiR8XlthLXpdW2EtejAtOSsuLV0qOnxeWz8jXS9pO1xuXG5mdW5jdGlvbiBub29wKCkge31cbm5vb3AuZXhlYyA9IG5vb3A7XG5cbmZ1bmN0aW9uIG1lcmdlKG9iaikge1xuICB2YXIgaSA9IDFcbiAgICAsIHRhcmdldFxuICAgICwga2V5O1xuXG4gIGZvciAoOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdGFyZ2V0ID0gYXJndW1lbnRzW2ldO1xuICAgIGZvciAoa2V5IGluIHRhcmdldCkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0YXJnZXQsIGtleSkpIHtcbiAgICAgICAgb2JqW2tleV0gPSB0YXJnZXRba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5cbi8qKlxuICogTWFya2VkXG4gKi9cblxuZnVuY3Rpb24gbWFya2VkKHNyYywgb3B0LCBjYWxsYmFjaykge1xuICBpZiAoY2FsbGJhY2sgfHwgdHlwZW9mIG9wdCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGlmICghY2FsbGJhY2spIHtcbiAgICAgIGNhbGxiYWNrID0gb3B0O1xuICAgICAgb3B0ID0gbnVsbDtcbiAgICB9XG5cbiAgICBvcHQgPSBtZXJnZSh7fSwgbWFya2VkLmRlZmF1bHRzLCBvcHQgfHwge30pO1xuXG4gICAgdmFyIGhpZ2hsaWdodCA9IG9wdC5oaWdobGlnaHRcbiAgICAgICwgdG9rZW5zXG4gICAgICAsIHBlbmRpbmdcbiAgICAgICwgaSA9IDA7XG5cbiAgICB0cnkge1xuICAgICAgdG9rZW5zID0gTGV4ZXIubGV4KHNyYywgb3B0KVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBjYWxsYmFjayhlKTtcbiAgICB9XG5cbiAgICBwZW5kaW5nID0gdG9rZW5zLmxlbmd0aDtcblxuICAgIHZhciBkb25lID0gZnVuY3Rpb24oZXJyKSB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIG9wdC5oaWdobGlnaHQgPSBoaWdobGlnaHQ7XG4gICAgICAgIHJldHVybiBjYWxsYmFjayhlcnIpO1xuICAgICAgfVxuXG4gICAgICB2YXIgb3V0O1xuXG4gICAgICB0cnkge1xuICAgICAgICBvdXQgPSBQYXJzZXIucGFyc2UodG9rZW5zLCBvcHQpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBlcnIgPSBlO1xuICAgICAgfVxuXG4gICAgICBvcHQuaGlnaGxpZ2h0ID0gaGlnaGxpZ2h0O1xuXG4gICAgICByZXR1cm4gZXJyXG4gICAgICAgID8gY2FsbGJhY2soZXJyKVxuICAgICAgICA6IGNhbGxiYWNrKG51bGwsIG91dCk7XG4gICAgfTtcblxuICAgIGlmICghaGlnaGxpZ2h0IHx8IGhpZ2hsaWdodC5sZW5ndGggPCAzKSB7XG4gICAgICByZXR1cm4gZG9uZSgpO1xuICAgIH1cblxuICAgIGRlbGV0ZSBvcHQuaGlnaGxpZ2h0O1xuXG4gICAgaWYgKCFwZW5kaW5nKSByZXR1cm4gZG9uZSgpO1xuXG4gICAgZm9yICg7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIChmdW5jdGlvbih0b2tlbikge1xuICAgICAgICBpZiAodG9rZW4udHlwZSAhPT0gJ2NvZGUnKSB7XG4gICAgICAgICAgcmV0dXJuIC0tcGVuZGluZyB8fCBkb25lKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGhpZ2hsaWdodCh0b2tlbi50ZXh0LCB0b2tlbi5sYW5nLCBmdW5jdGlvbihlcnIsIGNvZGUpIHtcbiAgICAgICAgICBpZiAoZXJyKSByZXR1cm4gZG9uZShlcnIpO1xuICAgICAgICAgIGlmIChjb2RlID09IG51bGwgfHwgY29kZSA9PT0gdG9rZW4udGV4dCkge1xuICAgICAgICAgICAgcmV0dXJuIC0tcGVuZGluZyB8fCBkb25lKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRva2VuLnRleHQgPSBjb2RlO1xuICAgICAgICAgIHRva2VuLmVzY2FwZWQgPSB0cnVlO1xuICAgICAgICAgIC0tcGVuZGluZyB8fCBkb25lKCk7XG4gICAgICAgIH0pO1xuICAgICAgfSkodG9rZW5zW2ldKTtcbiAgICB9XG5cbiAgICByZXR1cm47XG4gIH1cbiAgdHJ5IHtcbiAgICBpZiAob3B0KSBvcHQgPSBtZXJnZSh7fSwgbWFya2VkLmRlZmF1bHRzLCBvcHQpO1xuICAgIHJldHVybiBQYXJzZXIucGFyc2UoTGV4ZXIubGV4KHNyYywgb3B0KSwgb3B0KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGUubWVzc2FnZSArPSAnXFxuUGxlYXNlIHJlcG9ydCB0aGlzIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS9jaGpqL21hcmtlZC4nO1xuICAgIGlmICgob3B0IHx8IG1hcmtlZC5kZWZhdWx0cykuc2lsZW50KSB7XG4gICAgICByZXR1cm4gJzxwPkFuIGVycm9yIG9jY3VycmVkOjwvcD48cHJlPidcbiAgICAgICAgKyBlc2NhcGUoZS5tZXNzYWdlICsgJycsIHRydWUpXG4gICAgICAgICsgJzwvcHJlPic7XG4gICAgfVxuICAgIHRocm93IGU7XG4gIH1cbn1cblxuLyoqXG4gKiBPcHRpb25zXG4gKi9cblxubWFya2VkLm9wdGlvbnMgPVxubWFya2VkLnNldE9wdGlvbnMgPSBmdW5jdGlvbihvcHQpIHtcbiAgbWVyZ2UobWFya2VkLmRlZmF1bHRzLCBvcHQpO1xuICByZXR1cm4gbWFya2VkO1xufTtcblxubWFya2VkLmRlZmF1bHRzID0ge1xuICBnZm06IHRydWUsXG4gIHRhYmxlczogdHJ1ZSxcbiAgYnJlYWtzOiBmYWxzZSxcbiAgcGVkYW50aWM6IGZhbHNlLFxuICBzYW5pdGl6ZTogZmFsc2UsXG4gIHNhbml0aXplcjogbnVsbCxcbiAgbWFuZ2xlOiB0cnVlLFxuICBzbWFydExpc3RzOiBmYWxzZSxcbiAgc2lsZW50OiBmYWxzZSxcbiAgaGlnaGxpZ2h0OiBudWxsLFxuICBsYW5nUHJlZml4OiAnbGFuZy0nLFxuICBzbWFydHlwYW50czogZmFsc2UsXG4gIGhlYWRlclByZWZpeDogJycsXG4gIHJlbmRlcmVyOiBuZXcgUmVuZGVyZXIsXG4gIHhodG1sOiBmYWxzZSxcbiAgYmFzZVVybDogbnVsbFxufTtcblxuLyoqXG4gKiBFeHBvc2VcbiAqL1xuXG5tYXJrZWQuUGFyc2VyID0gUGFyc2VyO1xubWFya2VkLnBhcnNlciA9IFBhcnNlci5wYXJzZTtcblxubWFya2VkLlJlbmRlcmVyID0gUmVuZGVyZXI7XG5cbm1hcmtlZC5MZXhlciA9IExleGVyO1xubWFya2VkLmxleGVyID0gTGV4ZXIubGV4O1xuXG5tYXJrZWQuSW5saW5lTGV4ZXIgPSBJbmxpbmVMZXhlcjtcbm1hcmtlZC5pbmxpbmVMZXhlciA9IElubGluZUxleGVyLm91dHB1dDtcblxubWFya2VkLnBhcnNlID0gbWFya2VkO1xuXG5pZiAodHJ1ZSkge1xuICBtb2R1bGUuZXhwb3J0cyA9IG1hcmtlZDtcbn0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XG4gIGRlZmluZShmdW5jdGlvbigpIHsgcmV0dXJuIG1hcmtlZDsgfSk7XG59IGVsc2Uge1xuICB0aGlzLm1hcmtlZCA9IG1hcmtlZDtcbn1cblxufSkuY2FsbChmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMgfHwgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gd2luZG93IDogZ2xvYmFsKTtcbn0oKSk7XG5cbi8qIFdFQlBBQ0sgVkFSIElOSkVDVElPTiAqL30uY2FsbChleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpKSlcblxuLyoqKi8gfSlcbi8qKioqKiovIF0pO1xufSk7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGRlbW8uanMiLCIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbiBcdFx0XHR9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAyMSk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjay9ib290c3RyYXAgODhjYjY1OTlkM2ZiZTBjZDJmMjciLCJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9lbXB0eUZ1bmN0aW9uLmpzXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW1wdHlPYmplY3QgPSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgT2JqZWN0LmZyZWV6ZShlbXB0eU9iamVjdCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlPYmplY3Q7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlPYmplY3QuanNcbi8vIG1vZHVsZSBpZCA9IDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XHJcbn0gY2F0Y2goZSkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXHJcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcclxuXHRcdGcgPSB3aW5kb3c7XHJcbn1cclxuXHJcbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cclxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3NcclxuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAod2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanNcbi8vIG1vZHVsZSBpZCA9IDVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjIuMFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIG09cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1yZXF1aXJlKFwiZmJqcy9saWIvZW1wdHlPYmplY3RcIikscD1yZXF1aXJlKFwiZmJqcy9saWIvZW1wdHlGdW5jdGlvblwiKSxxPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbFtcImZvclwiXSxyPXE/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyx0PXE/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuY2FsbFwiKTo2MDEwNCx1PXE/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QucmV0dXJuXCIpOjYwMTA1LHY9cT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsdz1xP1N5bWJvbFtcImZvclwiXShcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO1xuZnVuY3Rpb24geShhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGU9XCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgaHR0cDovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnRcXHgzZFwiK2EsYz0wO2M8YjtjKyspZSs9XCJcXHgyNmFyZ3NbXVxceDNkXCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjKzFdKTtiPUVycm9yKGUrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtiLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCI7Yi5mcmFtZXNUb1BvcD0xO3Rocm93IGI7fVxudmFyIHo9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319O2Z1bmN0aW9uIEEoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9bjt0aGlzLnVwZGF0ZXI9ZXx8en1BLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0EucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7XCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YT95KFwiODVcIik6dm9pZCAwO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07QS5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBCKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPW47dGhpcy51cGRhdGVyPWV8fHp9ZnVuY3Rpb24gQygpe31DLnByb3RvdHlwZT1BLnByb3RvdHlwZTt2YXIgRD1CLnByb3RvdHlwZT1uZXcgQztELmNvbnN0cnVjdG9yPUI7bShELEEucHJvdG90eXBlKTtELmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO2Z1bmN0aW9uIEUoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9bjt0aGlzLnVwZGF0ZXI9ZXx8en12YXIgRj1FLnByb3RvdHlwZT1uZXcgQztGLmNvbnN0cnVjdG9yPUU7bShGLEEucHJvdG90eXBlKTtGLnVuc3RhYmxlX2lzQXN5bmNSZWFjdENvbXBvbmVudD0hMDtGLnJlbmRlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLnByb3BzLmNoaWxkcmVufTt2YXIgRz17Y3VycmVudDpudWxsfSxIPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksST17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gSihhLGIsZSl7dmFyIGMsZD17fSxnPW51bGwsaz1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihrPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilILmNhbGwoYixjKSYmIUkuaGFzT3duUHJvcGVydHkoYykmJihkW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGYpe2Zvcih2YXIgaD1BcnJheShmKSxsPTA7bDxmO2wrKyloW2xdPWFyZ3VtZW50c1tsKzJdO2QuY2hpbGRyZW49aH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZFtjXSYmKGRbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnIsdHlwZTphLGtleTpnLHJlZjprLHByb3BzOmQsX293bmVyOkcuY3VycmVudH19ZnVuY3Rpb24gSyhhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cn1cbmZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCJcXHgzZFwiOlwiXFx4M2QwXCIsXCI6XCI6XCJcXHgzZDJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIEw9L1xcLysvZyxNPVtdO2Z1bmN0aW9uIE4oYSxiLGUsYyl7aWYoTS5sZW5ndGgpe3ZhciBkPU0ucG9wKCk7ZC5yZXN1bHQ9YTtkLmtleVByZWZpeD1iO2QuZnVuYz1lO2QuY29udGV4dD1jO2QuY291bnQ9MDtyZXR1cm4gZH1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzplLGNvbnRleHQ6Yyxjb3VudDowfX1mdW5jdGlvbiBPKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+TS5sZW5ndGgmJk0ucHVzaChhKX1cbmZ1bmN0aW9uIFAoYSxiLGUsYyl7dmFyIGQ9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWR8fFwiYm9vbGVhblwiPT09ZClhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChkKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHI6Y2FzZSB0OmNhc2UgdTpjYXNlIHY6Zz0hMH19aWYoZylyZXR1cm4gZShjLGEsXCJcIj09PWI/XCIuXCIrUShhLDApOmIpLDE7Zz0wO2I9XCJcIj09PWI/XCIuXCI6YitcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgaz0wO2s8YS5sZW5ndGg7aysrKXtkPWFba107dmFyIGY9YitRKGQsayk7Zys9UChkLGYsZSxjKX1lbHNlIGlmKG51bGw9PT1hfHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGE/Zj1udWxsOihmPXgmJmFbeF18fGFbXCJAQGl0ZXJhdG9yXCJdLGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGY/ZjpudWxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1cbmYuY2FsbChhKSxrPTA7IShkPWEubmV4dCgpKS5kb25lOylkPWQudmFsdWUsZj1iK1EoZCxrKyspLGcrPVAoZCxmLGUsYyk7ZWxzZVwib2JqZWN0XCI9PT1kJiYoZT1cIlwiK2EseShcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PWU/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6ZSxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gUShhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShhLmtleSk6Yi50b1N0cmluZygzNil9ZnVuY3Rpb24gUihhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBTKGEsYixlKXt2YXIgYz1hLnJlc3VsdCxkPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1QoYSxjLGUscC50aGF0UmV0dXJuc0FyZ3VtZW50KTpudWxsIT1hJiYoSyhhKSYmKGI9ZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoTCxcIiRcXHgyNi9cIikrXCIvXCIpK2UsYT17JCR0eXBlb2Y6cix0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9KSxjLnB1c2goYSkpfWZ1bmN0aW9uIFQoYSxiLGUsYyxkKXt2YXIgZz1cIlwiO251bGwhPWUmJihnPShcIlwiK2UpLnJlcGxhY2UoTCxcIiRcXHgyNi9cIikrXCIvXCIpO2I9TihiLGcsYyxkKTtudWxsPT1hfHxQKGEsXCJcIixTLGIpO08oYil9XG52YXIgVT17Q2hpbGRyZW46e21hcDpmdW5jdGlvbihhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgYz1bXTtUKGEsYyxudWxsLGIsZSk7cmV0dXJuIGN9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGUpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1OKG51bGwsbnVsbCxiLGUpO251bGw9PWF8fFAoYSxcIlwiLFIsYik7TyhiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIG51bGw9PWE/MDpQKGEsXCJcIixwLnRoYXRSZXR1cm5zTnVsbCxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtUKGEsYixudWxsLHAudGhhdFJldHVybnNBcmd1bWVudCk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7SyhhKT92b2lkIDA6eShcIjE0M1wiKTtyZXR1cm4gYX19LENvbXBvbmVudDpBLFB1cmVDb21wb25lbnQ6Qix1bnN0YWJsZV9Bc3luY0NvbXBvbmVudDpFLEZyYWdtZW50OncsY3JlYXRlRWxlbWVudDpKLGNsb25lRWxlbWVudDpmdW5jdGlvbihhLGIsZSl7dmFyIGM9bSh7fSxhLnByb3BzKSxcbmQ9YS5rZXksZz1hLnJlZixrPWEuX293bmVyO2lmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoZz1iLnJlZixrPUcuY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihkPVwiXCIrYi5rZXkpO2lmKGEudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyl2YXIgZj1hLnR5cGUuZGVmYXVsdFByb3BzO2ZvcihoIGluIGIpSC5jYWxsKGIsaCkmJiFJLmhhc093blByb3BlcnR5KGgpJiYoY1toXT12b2lkIDA9PT1iW2hdJiZ2b2lkIDAhPT1mP2ZbaF06YltoXSl9dmFyIGg9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1oKWMuY2hpbGRyZW49ZTtlbHNlIGlmKDE8aCl7Zj1BcnJheShoKTtmb3IodmFyIGw9MDtsPGg7bCsrKWZbbF09YXJndW1lbnRzW2wrMl07Yy5jaGlsZHJlbj1mfXJldHVybnskJHR5cGVvZjpyLHR5cGU6YS50eXBlLGtleTpkLHJlZjpnLHByb3BzOmMsX293bmVyOmt9fSxjcmVhdGVGYWN0b3J5OmZ1bmN0aW9uKGEpe3ZhciBiPUouYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifSxcbmlzVmFsaWRFbGVtZW50OkssdmVyc2lvbjpcIjE2LjIuMFwiLF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntSZWFjdEN1cnJlbnRPd25lcjpHLGFzc2lnbjptfX0sVj1PYmplY3QuZnJlZXplKHtkZWZhdWx0OlV9KSxXPVYmJlV8fFY7bW9kdWxlLmV4cG9ydHM9V1tcImRlZmF1bHRcIl0/V1tcImRlZmF1bHRcIl06VztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuLy8gbW9kdWxlIGlkID0gNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMi4wXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLGw9cmVxdWlyZShcImZianMvbGliL0V4ZWN1dGlvbkVudmlyb25tZW50XCIpLEI9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksQz1yZXF1aXJlKFwiZmJqcy9saWIvZW1wdHlGdW5jdGlvblwiKSxiYT1yZXF1aXJlKFwiZmJqcy9saWIvRXZlbnRMaXN0ZW5lclwiKSxkYT1yZXF1aXJlKFwiZmJqcy9saWIvZ2V0QWN0aXZlRWxlbWVudFwiKSxlYT1yZXF1aXJlKFwiZmJqcy9saWIvc2hhbGxvd0VxdWFsXCIpLGZhPXJlcXVpcmUoXCJmYmpzL2xpYi9jb250YWluc05vZGVcIiksaWE9cmVxdWlyZShcImZianMvbGliL2ZvY3VzTm9kZVwiKSxEPXJlcXVpcmUoXCJmYmpzL2xpYi9lbXB0eU9iamVjdFwiKTtcbmZ1bmN0aW9uIEUoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxjPVwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IGh0dHA6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50XFx4M2RcIithLGQ9MDtkPGI7ZCsrKWMrPVwiXFx4MjZhcmdzW11cXHgzZFwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbZCsxXSk7Yj1FcnJvcihjK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7Yi5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwiO2IuZnJhbWVzVG9Qb3A9MTt0aHJvdyBiO31hYT92b2lkIDA6RShcIjIyN1wiKTtcbnZhciBvYT17Y2hpbGRyZW46ITAsZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6ITAsZGVmYXVsdFZhbHVlOiEwLGRlZmF1bHRDaGVja2VkOiEwLGlubmVySFRNTDohMCxzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmc6ITAsc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nOiEwLHN0eWxlOiEwfTtmdW5jdGlvbiBwYShhLGIpe3JldHVybihhJmIpPT09Yn1cbnZhciB0YT17TVVTVF9VU0VfUFJPUEVSVFk6MSxIQVNfQk9PTEVBTl9WQUxVRTo0LEhBU19OVU1FUklDX1ZBTFVFOjgsSEFTX1BPU0lUSVZFX05VTUVSSUNfVkFMVUU6MjQsSEFTX09WRVJMT0FERURfQk9PTEVBTl9WQUxVRTozMixIQVNfU1RSSU5HX0JPT0xFQU5fVkFMVUU6NjQsaW5qZWN0RE9NUHJvcGVydHlDb25maWc6ZnVuY3Rpb24oYSl7dmFyIGI9dGEsYz1hLlByb3BlcnRpZXN8fHt9LGQ9YS5ET01BdHRyaWJ1dGVOYW1lc3BhY2VzfHx7fSxlPWEuRE9NQXR0cmlidXRlTmFtZXN8fHt9O2E9YS5ET01NdXRhdGlvbk1ldGhvZHN8fHt9O2Zvcih2YXIgZiBpbiBjKXt1YS5oYXNPd25Qcm9wZXJ0eShmKT9FKFwiNDhcIixmKTp2b2lkIDA7dmFyIGc9Zi50b0xvd2VyQ2FzZSgpLGg9Y1tmXTtnPXthdHRyaWJ1dGVOYW1lOmcsYXR0cmlidXRlTmFtZXNwYWNlOm51bGwscHJvcGVydHlOYW1lOmYsbXV0YXRpb25NZXRob2Q6bnVsbCxtdXN0VXNlUHJvcGVydHk6cGEoaCxiLk1VU1RfVVNFX1BST1BFUlRZKSxcbmhhc0Jvb2xlYW5WYWx1ZTpwYShoLGIuSEFTX0JPT0xFQU5fVkFMVUUpLGhhc051bWVyaWNWYWx1ZTpwYShoLGIuSEFTX05VTUVSSUNfVkFMVUUpLGhhc1Bvc2l0aXZlTnVtZXJpY1ZhbHVlOnBhKGgsYi5IQVNfUE9TSVRJVkVfTlVNRVJJQ19WQUxVRSksaGFzT3ZlcmxvYWRlZEJvb2xlYW5WYWx1ZTpwYShoLGIuSEFTX09WRVJMT0FERURfQk9PTEVBTl9WQUxVRSksaGFzU3RyaW5nQm9vbGVhblZhbHVlOnBhKGgsYi5IQVNfU1RSSU5HX0JPT0xFQU5fVkFMVUUpfTsxPj1nLmhhc0Jvb2xlYW5WYWx1ZStnLmhhc051bWVyaWNWYWx1ZStnLmhhc092ZXJsb2FkZWRCb29sZWFuVmFsdWU/dm9pZCAwOkUoXCI1MFwiLGYpO2UuaGFzT3duUHJvcGVydHkoZikmJihnLmF0dHJpYnV0ZU5hbWU9ZVtmXSk7ZC5oYXNPd25Qcm9wZXJ0eShmKSYmKGcuYXR0cmlidXRlTmFtZXNwYWNlPWRbZl0pO2EuaGFzT3duUHJvcGVydHkoZikmJihnLm11dGF0aW9uTWV0aG9kPWFbZl0pO3VhW2ZdPWd9fX0sdWE9e307XG5mdW5jdGlvbiB2YShhLGIpe2lmKG9hLmhhc093blByb3BlcnR5KGEpfHwyPGEubGVuZ3RoJiYoXCJvXCI9PT1hWzBdfHxcIk9cIj09PWFbMF0pJiYoXCJuXCI9PT1hWzFdfHxcIk5cIj09PWFbMV0pKXJldHVybiExO2lmKG51bGw9PT1iKXJldHVybiEwO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImJvb2xlYW5cIjpyZXR1cm4gb2EuaGFzT3duUHJvcGVydHkoYSk/YT0hMDooYj13YShhKSk/YT1iLmhhc0Jvb2xlYW5WYWx1ZXx8Yi5oYXNTdHJpbmdCb29sZWFuVmFsdWV8fGIuaGFzT3ZlcmxvYWRlZEJvb2xlYW5WYWx1ZTooYT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KSxhPVwiZGF0YS1cIj09PWF8fFwiYXJpYS1cIj09PWEpLGE7Y2FzZSBcInVuZGVmaW5lZFwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm9iamVjdFwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIHdhKGEpe3JldHVybiB1YS5oYXNPd25Qcm9wZXJ0eShhKT91YVthXTpudWxsfVxudmFyIHhhPXRhLHlhPXhhLk1VU1RfVVNFX1BST1BFUlRZLEs9eGEuSEFTX0JPT0xFQU5fVkFMVUUsemE9eGEuSEFTX05VTUVSSUNfVkFMVUUsQWE9eGEuSEFTX1BPU0lUSVZFX05VTUVSSUNfVkFMVUUsQmE9eGEuSEFTX09WRVJMT0FERURfQk9PTEVBTl9WQUxVRSxDYT14YS5IQVNfU1RSSU5HX0JPT0xFQU5fVkFMVUUsRGE9e1Byb3BlcnRpZXM6e2FsbG93RnVsbFNjcmVlbjpLLGFzeW5jOkssYXV0b0ZvY3VzOkssYXV0b1BsYXk6SyxjYXB0dXJlOkJhLGNoZWNrZWQ6eWF8Syxjb2xzOkFhLGNvbnRlbnRFZGl0YWJsZTpDYSxjb250cm9sczpLLFwiZGVmYXVsdFwiOkssZGVmZXI6SyxkaXNhYmxlZDpLLGRvd25sb2FkOkJhLGRyYWdnYWJsZTpDYSxmb3JtTm9WYWxpZGF0ZTpLLGhpZGRlbjpLLGxvb3A6SyxtdWx0aXBsZTp5YXxLLG11dGVkOnlhfEssbm9WYWxpZGF0ZTpLLG9wZW46SyxwbGF5c0lubGluZTpLLHJlYWRPbmx5OksscmVxdWlyZWQ6SyxyZXZlcnNlZDpLLHJvd3M6QWEscm93U3Bhbjp6YSxcbnNjb3BlZDpLLHNlYW1sZXNzOkssc2VsZWN0ZWQ6eWF8SyxzaXplOkFhLHN0YXJ0OnphLHNwYW46QWEsc3BlbGxDaGVjazpDYSxzdHlsZTowLHRhYkluZGV4OjAsaXRlbVNjb3BlOkssYWNjZXB0Q2hhcnNldDowLGNsYXNzTmFtZTowLGh0bWxGb3I6MCxodHRwRXF1aXY6MCx2YWx1ZTpDYX0sRE9NQXR0cmlidXRlTmFtZXM6e2FjY2VwdENoYXJzZXQ6XCJhY2NlcHQtY2hhcnNldFwiLGNsYXNzTmFtZTpcImNsYXNzXCIsaHRtbEZvcjpcImZvclwiLGh0dHBFcXVpdjpcImh0dHAtZXF1aXZcIn0sRE9NTXV0YXRpb25NZXRob2RzOnt2YWx1ZTpmdW5jdGlvbihhLGIpe2lmKG51bGw9PWIpcmV0dXJuIGEucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7XCJudW1iZXJcIiE9PWEudHlwZXx8ITE9PT1hLmhhc0F0dHJpYnV0ZShcInZhbHVlXCIpP2Euc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK2IpOmEudmFsaWRpdHkmJiFhLnZhbGlkaXR5LmJhZElucHV0JiZhLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PWEmJlxuYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrYil9fX0sRWE9eGEuSEFTX1NUUklOR19CT09MRUFOX1ZBTFVFLE09e3hsaW5rOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLHhtbDpcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwifSxHYT17UHJvcGVydGllczp7YXV0b1JldmVyc2U6RWEsZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZDpFYSxwcmVzZXJ2ZUFscGhhOkVhfSxET01BdHRyaWJ1dGVOYW1lczp7YXV0b1JldmVyc2U6XCJhdXRvUmV2ZXJzZVwiLGV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWQ6XCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIscHJlc2VydmVBbHBoYTpcInByZXNlcnZlQWxwaGFcIn0sRE9NQXR0cmlidXRlTmFtZXNwYWNlczp7eGxpbmtBY3R1YXRlOk0ueGxpbmsseGxpbmtBcmNyb2xlOk0ueGxpbmsseGxpbmtIcmVmOk0ueGxpbmsseGxpbmtSb2xlOk0ueGxpbmsseGxpbmtTaG93Ok0ueGxpbmsseGxpbmtUaXRsZTpNLnhsaW5rLHhsaW5rVHlwZTpNLnhsaW5rLFxueG1sQmFzZTpNLnhtbCx4bWxMYW5nOk0ueG1sLHhtbFNwYWNlOk0ueG1sfX0sSGE9L1tcXC1cXDpdKFthLXpdKS9nO2Z1bmN0aW9uIElhKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHgtaGVpZ2h0IHhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpocmVmIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlIHhtbDpiYXNlIHhtbG5zOnhsaW5rIHhtbDpsYW5nIHhtbDpzcGFjZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShIYSxcbklhKTtHYS5Qcm9wZXJ0aWVzW2JdPTA7R2EuRE9NQXR0cmlidXRlTmFtZXNbYl09YX0pO3hhLmluamVjdERPTVByb3BlcnR5Q29uZmlnKERhKTt4YS5pbmplY3RET01Qcm9wZXJ0eUNvbmZpZyhHYSk7XG52YXIgUD17X2NhdWdodEVycm9yOm51bGwsX2hhc0NhdWdodEVycm9yOiExLF9yZXRocm93RXJyb3I6bnVsbCxfaGFzUmV0aHJvd0Vycm9yOiExLGluamVjdGlvbjp7aW5qZWN0RXJyb3JVdGlsczpmdW5jdGlvbihhKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYS5pbnZva2VHdWFyZGVkQ2FsbGJhY2s/RShcIjE5N1wiKTp2b2lkIDA7SmE9YS5pbnZva2VHdWFyZGVkQ2FsbGJhY2t9fSxpbnZva2VHdWFyZGVkQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyxoLGspe0phLmFwcGx5KFAsYXJndW1lbnRzKX0saW52b2tlR3VhcmRlZENhbGxiYWNrQW5kQ2F0Y2hGaXJzdEVycm9yOmZ1bmN0aW9uKGEsYixjLGQsZSxmLGcsaCxrKXtQLmludm9rZUd1YXJkZWRDYWxsYmFjay5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoUC5oYXNDYXVnaHRFcnJvcigpKXt2YXIgcT1QLmNsZWFyQ2F1Z2h0RXJyb3IoKTtQLl9oYXNSZXRocm93RXJyb3J8fChQLl9oYXNSZXRocm93RXJyb3I9ITAsUC5fcmV0aHJvd0Vycm9yPVxucSl9fSxyZXRocm93Q2F1Z2h0RXJyb3I6ZnVuY3Rpb24oKXtyZXR1cm4gS2EuYXBwbHkoUCxhcmd1bWVudHMpfSxoYXNDYXVnaHRFcnJvcjpmdW5jdGlvbigpe3JldHVybiBQLl9oYXNDYXVnaHRFcnJvcn0sY2xlYXJDYXVnaHRFcnJvcjpmdW5jdGlvbigpe2lmKFAuX2hhc0NhdWdodEVycm9yKXt2YXIgYT1QLl9jYXVnaHRFcnJvcjtQLl9jYXVnaHRFcnJvcj1udWxsO1AuX2hhc0NhdWdodEVycm9yPSExO3JldHVybiBhfUUoXCIxOThcIil9fTtmdW5jdGlvbiBKYShhLGIsYyxkLGUsZixnLGgsayl7UC5faGFzQ2F1Z2h0RXJyb3I9ITE7UC5fY2F1Z2h0RXJyb3I9bnVsbDt2YXIgcT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxxKX1jYXRjaCh2KXtQLl9jYXVnaHRFcnJvcj12LFAuX2hhc0NhdWdodEVycm9yPSEwfX1cbmZ1bmN0aW9uIEthKCl7aWYoUC5faGFzUmV0aHJvd0Vycm9yKXt2YXIgYT1QLl9yZXRocm93RXJyb3I7UC5fcmV0aHJvd0Vycm9yPW51bGw7UC5faGFzUmV0aHJvd0Vycm9yPSExO3Rocm93IGE7fX12YXIgTGE9bnVsbCxNYT17fTtcbmZ1bmN0aW9uIE5hKCl7aWYoTGEpZm9yKHZhciBhIGluIE1hKXt2YXIgYj1NYVthXSxjPUxhLmluZGV4T2YoYSk7LTE8Yz92b2lkIDA6RShcIjk2XCIsYSk7aWYoIU9hW2NdKXtiLmV4dHJhY3RFdmVudHM/dm9pZCAwOkUoXCI5N1wiLGEpO09hW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7UGEuaGFzT3duUHJvcGVydHkoaCk/RShcIjk5XCIsaCk6dm9pZCAwO1BhW2hdPWY7dmFyIGs9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihrKXtmb3IoZSBpbiBrKWsuaGFzT3duUHJvcGVydHkoZSkmJlFhKGtbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyhRYShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2U/dm9pZCAwOkUoXCI5OFwiLGQsYSl9fX19XG5mdW5jdGlvbiBRYShhLGIsYyl7UmFbYV0/RShcIjEwMFwiLGEpOnZvaWQgMDtSYVthXT1iO1NhW2FdPWIuZXZlbnRUeXBlc1tjXS5kZXBlbmRlbmNpZXN9dmFyIE9hPVtdLFBhPXt9LFJhPXt9LFNhPXt9O2Z1bmN0aW9uIFRhKGEpe0xhP0UoXCIxMDFcIik6dm9pZCAwO0xhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpO05hKCl9ZnVuY3Rpb24gVWEoYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107TWEuaGFzT3duUHJvcGVydHkoYykmJk1hW2NdPT09ZHx8KE1hW2NdP0UoXCIxMDJcIixjKTp2b2lkIDAsTWFbY109ZCxiPSEwKX1iJiZOYSgpfVxudmFyIFZhPU9iamVjdC5mcmVlemUoe3BsdWdpbnM6T2EsZXZlbnROYW1lRGlzcGF0Y2hDb25maWdzOlBhLHJlZ2lzdHJhdGlvbk5hbWVNb2R1bGVzOlJhLHJlZ2lzdHJhdGlvbk5hbWVEZXBlbmRlbmNpZXM6U2EscG9zc2libGVSZWdpc3RyYXRpb25OYW1lczpudWxsLGluamVjdEV2ZW50UGx1Z2luT3JkZXI6VGEsaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lOlVhfSksV2E9bnVsbCxYYT1udWxsLFlhPW51bGw7ZnVuY3Rpb24gWmEoYSxiLGMsZCl7Yj1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD1ZYShkKTtQLmludm9rZUd1YXJkZWRDYWxsYmFja0FuZENhdGNoRmlyc3RFcnJvcihiLGMsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfVxuZnVuY3Rpb24gJGEoYSxiKXtudWxsPT1iP0UoXCIzMFwiKTp2b2lkIDA7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfWZ1bmN0aW9uIGFiKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciBiYj1udWxsO1xuZnVuY3Rpb24gY2IoYSxiKXtpZihhKXt2YXIgYz1hLl9kaXNwYXRjaExpc3RlbmVycyxkPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYykpZm9yKHZhciBlPTA7ZTxjLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtlKyspWmEoYSxiLGNbZV0sZFtlXSk7ZWxzZSBjJiZaYShhLGIsYyxkKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1mdW5jdGlvbiBkYihhKXtyZXR1cm4gY2IoYSwhMCl9ZnVuY3Rpb24gZ2IoYSl7cmV0dXJuIGNiKGEsITEpfXZhciBoYj17aW5qZWN0RXZlbnRQbHVnaW5PcmRlcjpUYSxpbmplY3RFdmVudFBsdWdpbnNCeU5hbWU6VWF9O1xuZnVuY3Rpb24gaWIoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZighYylyZXR1cm4gbnVsbDt2YXIgZD1XYShjKTtpZighZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtjJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz9FKFwiMjMxXCIsYix0eXBlb2YgYyk6dm9pZCAwO1xucmV0dXJuIGN9ZnVuY3Rpb24gamIoYSxiLGMsZCl7Zm9yKHZhciBlLGY9MDtmPE9hLmxlbmd0aDtmKyspe3ZhciBnPU9hW2ZdO2cmJihnPWcuZXh0cmFjdEV2ZW50cyhhLGIsYyxkKSkmJihlPSRhKGUsZykpfXJldHVybiBlfWZ1bmN0aW9uIGtiKGEpe2EmJihiYj0kYShiYixhKSl9ZnVuY3Rpb24gbGIoYSl7dmFyIGI9YmI7YmI9bnVsbDtiJiYoYT9hYihiLGRiKTphYihiLGdiKSxiYj9FKFwiOTVcIik6dm9pZCAwLFAucmV0aHJvd0NhdWdodEVycm9yKCkpfXZhciBtYj1PYmplY3QuZnJlZXplKHtpbmplY3Rpb246aGIsZ2V0TGlzdGVuZXI6aWIsZXh0cmFjdEV2ZW50czpqYixlbnF1ZXVlRXZlbnRzOmtiLHByb2Nlc3NFdmVudFF1ZXVlOmxifSksbmI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksUT1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK25iLG9iPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrbmI7XG5mdW5jdGlvbiBwYihhKXtpZihhW1FdKXJldHVybiBhW1FdO2Zvcih2YXIgYj1bXTshYVtRXTspaWYoYi5wdXNoKGEpLGEucGFyZW50Tm9kZSlhPWEucGFyZW50Tm9kZTtlbHNlIHJldHVybiBudWxsO3ZhciBjPXZvaWQgMCxkPWFbUV07aWYoNT09PWQudGFnfHw2PT09ZC50YWcpcmV0dXJuIGQ7Zm9yKDthJiYoZD1hW1FdKTthPWIucG9wKCkpYz1kO3JldHVybiBjfWZ1bmN0aW9uIHFiKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTtFKFwiMzNcIil9ZnVuY3Rpb24gcmIoYSl7cmV0dXJuIGFbb2JdfHxudWxsfVxudmFyIHNiPU9iamVjdC5mcmVlemUoe3ByZWNhY2hlRmliZXJOb2RlOmZ1bmN0aW9uKGEsYil7YltRXT1hfSxnZXRDbG9zZXN0SW5zdGFuY2VGcm9tTm9kZTpwYixnZXRJbnN0YW5jZUZyb21Ob2RlOmZ1bmN0aW9uKGEpe2E9YVtRXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWc/bnVsbDphfSxnZXROb2RlRnJvbUluc3RhbmNlOnFiLGdldEZpYmVyQ3VycmVudFByb3BzRnJvbU5vZGU6cmIsdXBkYXRlRmliZXJQcm9wczpmdW5jdGlvbihhLGIpe2Fbb2JdPWJ9fSk7ZnVuY3Rpb24gdGIoYSl7ZG8gYT1hW1wicmV0dXJuXCJdO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfWZ1bmN0aW9uIHViKGEsYixjKXtmb3IodmFyIGQ9W107YTspZC5wdXNoKGEpLGE9dGIoYSk7Zm9yKGE9ZC5sZW5ndGg7MDxhLS07KWIoZFthXSxcImNhcHR1cmVkXCIsYyk7Zm9yKGE9MDthPGQubGVuZ3RoO2ErKyliKGRbYV0sXCJidWJibGVkXCIsYyl9XG5mdW5jdGlvbiB2YihhLGIsYyl7aWYoYj1pYihhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPSRhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPSRhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfWZ1bmN0aW9uIHdiKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMmJnViKGEuX3RhcmdldEluc3QsdmIsYSl9ZnVuY3Rpb24geGIoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7dmFyIGI9YS5fdGFyZ2V0SW5zdDtiPWI/dGIoYik6bnVsbDt1YihiLHZiLGEpfX1cbmZ1bmN0aW9uIHliKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPWliKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz0kYShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz0kYShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gemIoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZ5YihhLl90YXJnZXRJbnN0LG51bGwsYSl9ZnVuY3Rpb24gQWIoYSl7YWIoYSx3Yil9XG5mdW5jdGlvbiBCYihhLGIsYyxkKXtpZihjJiZkKWE6e3ZhciBlPWM7Zm9yKHZhciBmPWQsZz0wLGg9ZTtoO2g9dGIoaCkpZysrO2g9MDtmb3IodmFyIGs9ZjtrO2s9dGIoaykpaCsrO2Zvcig7MDxnLWg7KWU9dGIoZSksZy0tO2Zvcig7MDxoLWc7KWY9dGIoZiksaC0tO2Zvcig7Zy0tOyl7aWYoZT09PWZ8fGU9PT1mLmFsdGVybmF0ZSlicmVhayBhO2U9dGIoZSk7Zj10YihmKX1lPW51bGx9ZWxzZSBlPW51bGw7Zj1lO2ZvcihlPVtdO2MmJmMhPT1mOyl7Zz1jLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PWYpYnJlYWs7ZS5wdXNoKGMpO2M9dGIoYyl9Zm9yKGM9W107ZCYmZCE9PWY7KXtnPWQuYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09ZilicmVhaztjLnB1c2goZCk7ZD10YihkKX1mb3IoZD0wO2Q8ZS5sZW5ndGg7ZCsrKXliKGVbZF0sXCJidWJibGVkXCIsYSk7Zm9yKGE9Yy5sZW5ndGg7MDxhLS07KXliKGNbYV0sXCJjYXB0dXJlZFwiLGIpfVxudmFyIENiPU9iamVjdC5mcmVlemUoe2FjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXM6QWIsYWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlc1NraXBUYXJnZXQ6ZnVuY3Rpb24oYSl7YWIoYSx4Yil9LGFjY3VtdWxhdGVFbnRlckxlYXZlRGlzcGF0Y2hlczpCYixhY2N1bXVsYXRlRGlyZWN0RGlzcGF0Y2hlczpmdW5jdGlvbihhKXthYihhLHpiKX19KSxEYj1udWxsO2Z1bmN0aW9uIEViKCl7IURiJiZsLmNhblVzZURPTSYmKERiPVwidGV4dENvbnRlbnRcImluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudD9cInRleHRDb250ZW50XCI6XCJpbm5lclRleHRcIik7cmV0dXJuIERifXZhciBTPXtfcm9vdDpudWxsLF9zdGFydFRleHQ6bnVsbCxfZmFsbGJhY2tUZXh0Om51bGx9O1xuZnVuY3Rpb24gRmIoKXtpZihTLl9mYWxsYmFja1RleHQpcmV0dXJuIFMuX2ZhbGxiYWNrVGV4dDt2YXIgYSxiPVMuX3N0YXJ0VGV4dCxjPWIubGVuZ3RoLGQsZT1HYigpLGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7Uy5fZmFsbGJhY2tUZXh0PWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCk7cmV0dXJuIFMuX2ZhbGxiYWNrVGV4dH1mdW5jdGlvbiBHYigpe3JldHVyblwidmFsdWVcImluIFMuX3Jvb3Q/Uy5fcm9vdC52YWx1ZTpTLl9yb290W0ViKCldfVxudmFyIEhiPVwiZGlzcGF0Y2hDb25maWcgX3RhcmdldEluc3QgbmF0aXZlRXZlbnQgaXNEZWZhdWx0UHJldmVudGVkIGlzUHJvcGFnYXRpb25TdG9wcGVkIF9kaXNwYXRjaExpc3RlbmVycyBfZGlzcGF0Y2hJbnN0YW5jZXNcIi5zcGxpdChcIiBcIiksSWI9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OkMudGhhdFJldHVybnNOdWxsLGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG5mdW5jdGlvbiBUKGEsYixjLGQpe3RoaXMuZGlzcGF0Y2hDb25maWc9YTt0aGlzLl90YXJnZXRJbnN0PWI7dGhpcy5uYXRpdmVFdmVudD1jO2E9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2U7Zm9yKHZhciBlIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShlKSYmKChiPWFbZV0pP3RoaXNbZV09YihjKTpcInRhcmdldFwiPT09ZT90aGlzLnRhcmdldD1kOnRoaXNbZV09Y1tlXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWMuZGVmYXVsdFByZXZlbnRlZD9jLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1jLnJldHVyblZhbHVlKT9DLnRoYXRSZXR1cm5zVHJ1ZTpDLnRoYXRSZXR1cm5zRmFsc2U7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1DLnRoYXRSZXR1cm5zRmFsc2U7cmV0dXJuIHRoaXN9XG5CKFQucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9Qy50aGF0UmV0dXJuc1RydWUpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9Qy50aGF0UmV0dXJuc1RydWUpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9Qy50aGF0UmV0dXJuc1RydWV9LGlzUGVyc2lzdGVudDpDLnRoYXRSZXR1cm5zRmFsc2UsXG5kZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsYjtmb3IoYiBpbiBhKXRoaXNbYl09bnVsbDtmb3IoYT0wO2E8SGIubGVuZ3RoO2ErKyl0aGlzW0hiW2FdXT1udWxsfX0pO1QuSW50ZXJmYWNlPUliO1QuYXVnbWVudENsYXNzPWZ1bmN0aW9uKGEsYil7ZnVuY3Rpb24gYygpe31jLnByb3RvdHlwZT10aGlzLnByb3RvdHlwZTt2YXIgZD1uZXcgYztCKGQsYS5wcm90b3R5cGUpO2EucHJvdG90eXBlPWQ7YS5wcm90b3R5cGUuY29uc3RydWN0b3I9YTthLkludGVyZmFjZT1CKHt9LHRoaXMuSW50ZXJmYWNlLGIpO2EuYXVnbWVudENsYXNzPXRoaXMuYXVnbWVudENsYXNzO0piKGEpfTtKYihUKTtmdW5jdGlvbiBLYihhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1cbmZ1bmN0aW9uIExiKGEpe2EgaW5zdGFuY2VvZiB0aGlzP3ZvaWQgMDpFKFwiMjIzXCIpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1mdW5jdGlvbiBKYihhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1LYjthLnJlbGVhc2U9TGJ9ZnVuY3Rpb24gTWIoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfVQuYXVnbWVudENsYXNzKE1iLHtkYXRhOm51bGx9KTtmdW5jdGlvbiBOYihhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9VC5hdWdtZW50Q2xhc3MoTmIse2RhdGE6bnVsbH0pO3ZhciBQYj1bOSwxMywyNywzMl0sVmI9bC5jYW5Vc2VET00mJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LFdiPW51bGw7bC5jYW5Vc2VET00mJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKFdiPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7dmFyIFhiO1xuaWYoWGI9bC5jYW5Vc2VET00mJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFXYil7dmFyIFliPXdpbmRvdy5vcGVyYTtYYj0hKFwib2JqZWN0XCI9PT10eXBlb2YgWWImJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBZYi52ZXJzaW9uJiYxMj49cGFyc2VJbnQoWWIudmVyc2lvbigpLDEwKSl9XG52YXIgWmI9WGIsJGI9bC5jYW5Vc2VET00mJighVmJ8fFdiJiY4PFdiJiYxMT49V2IpLGFjPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLGJjPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1widG9wQ29tcG9zaXRpb25FbmRcIixcInRvcEtleVByZXNzXCIsXCJ0b3BUZXh0SW5wdXRcIixcInRvcFBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJ0b3BCbHVyIHRvcENvbXBvc2l0aW9uRW5kIHRvcEtleURvd24gdG9wS2V5UHJlc3MgdG9wS2V5VXAgdG9wTW91c2VEb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcInRvcEJsdXIgdG9wQ29tcG9zaXRpb25TdGFydCB0b3BLZXlEb3duIHRvcEtleVByZXNzIHRvcEtleVVwIHRvcE1vdXNlRG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwidG9wQmx1ciB0b3BDb21wb3NpdGlvblVwZGF0ZSB0b3BLZXlEb3duIHRvcEtleVByZXNzIHRvcEtleVVwIHRvcE1vdXNlRG93blwiLnNwbGl0KFwiIFwiKX19LGNjPSExO1xuZnVuY3Rpb24gZGMoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcInRvcEtleVVwXCI6cmV0dXJuLTEhPT1QYi5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcInRvcEtleURvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJ0b3BLZXlQcmVzc1wiOmNhc2UgXCJ0b3BNb3VzZURvd25cIjpjYXNlIFwidG9wQmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIGVjKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIGZjPSExO2Z1bmN0aW9uIGdjKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJ0b3BDb21wb3NpdGlvbkVuZFwiOnJldHVybiBlYyhiKTtjYXNlIFwidG9wS2V5UHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7Y2M9ITA7cmV0dXJuIGFjO2Nhc2UgXCJ0b3BUZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PWFjJiZjYz9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBoYyhhLGIpe2lmKGZjKXJldHVyblwidG9wQ29tcG9zaXRpb25FbmRcIj09PWF8fCFWYiYmZGMoYSxiKT8oYT1GYigpLFMuX3Jvb3Q9bnVsbCxTLl9zdGFydFRleHQ9bnVsbCxTLl9mYWxsYmFja1RleHQ9bnVsbCxmYz0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwidG9wUGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwidG9wS2V5UHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwidG9wQ29tcG9zaXRpb25FbmRcIjpyZXR1cm4gJGI/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgaWM9e2V2ZW50VHlwZXM6YmMsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZTtpZihWYiliOntzd2l0Y2goYSl7Y2FzZSBcInRvcENvbXBvc2l0aW9uU3RhcnRcIjp2YXIgZj1iYy5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcInRvcENvbXBvc2l0aW9uRW5kXCI6Zj1iYy5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJ0b3BDb21wb3NpdGlvblVwZGF0ZVwiOmY9YmMuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1mPXZvaWQgMH1lbHNlIGZjP2RjKGEsYykmJihmPWJjLmNvbXBvc2l0aW9uRW5kKTpcInRvcEtleURvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGY9YmMuY29tcG9zaXRpb25TdGFydCk7Zj8oJGImJihmY3x8ZiE9PWJjLmNvbXBvc2l0aW9uU3RhcnQ/Zj09PWJjLmNvbXBvc2l0aW9uRW5kJiZmYyYmKGU9RmIoKSk6KFMuX3Jvb3Q9ZCxTLl9zdGFydFRleHQ9R2IoKSxmYz0hMCkpLGY9TWIuZ2V0UG9vbGVkKGYsYixjLGQpLGU/Zi5kYXRhPVxuZTooZT1lYyhjKSxudWxsIT09ZSYmKGYuZGF0YT1lKSksQWIoZiksZT1mKTplPW51bGw7KGE9WmI/Z2MoYSxjKTpoYyhhLGMpKT8oYj1OYi5nZXRQb29sZWQoYmMuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLEFiKGIpKTpiPW51bGw7cmV0dXJuW2UsYl19fSxqYz1udWxsLGtjPW51bGwsbGM9bnVsbDtmdW5jdGlvbiBtYyhhKXtpZihhPVhhKGEpKXtqYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGpjLnJlc3RvcmVDb250cm9sbGVkU3RhdGU/dm9pZCAwOkUoXCIxOTRcIik7dmFyIGI9V2EoYS5zdGF0ZU5vZGUpO2pjLnJlc3RvcmVDb250cm9sbGVkU3RhdGUoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX12YXIgbmM9e2luamVjdEZpYmVyQ29udHJvbGxlZEhvc3RDb21wb25lbnQ6ZnVuY3Rpb24oYSl7amM9YX19O2Z1bmN0aW9uIG9jKGEpe2tjP2xjP2xjLnB1c2goYSk6bGM9W2FdOmtjPWF9XG5mdW5jdGlvbiBwYygpe2lmKGtjKXt2YXIgYT1rYyxiPWxjO2xjPWtjPW51bGw7bWMoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKW1jKGJbYV0pfX12YXIgcWM9T2JqZWN0LmZyZWV6ZSh7aW5qZWN0aW9uOm5jLGVucXVldWVTdGF0ZVJlc3RvcmU6b2MscmVzdG9yZVN0YXRlSWZOZWVkZWQ6cGN9KTtmdW5jdGlvbiByYyhhLGIpe3JldHVybiBhKGIpfXZhciBzYz0hMTtmdW5jdGlvbiB0YyhhLGIpe2lmKHNjKXJldHVybiByYyhhLGIpO3NjPSEwO3RyeXtyZXR1cm4gcmMoYSxiKX1maW5hbGx5e3NjPSExLHBjKCl9fXZhciB1Yz17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtcbmZ1bmN0aW9uIHZjKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhdWNbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfWZ1bmN0aW9uIHdjKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX12YXIgeGM7bC5jYW5Vc2VET00mJih4Yz1kb2N1bWVudC5pbXBsZW1lbnRhdGlvbiYmZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uaGFzRmVhdHVyZSYmITAhPT1kb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5oYXNGZWF0dXJlKFwiXCIsXCJcIikpO1xuZnVuY3Rpb24geWMoYSxiKXtpZighbC5jYW5Vc2VET018fGImJiEoXCJhZGRFdmVudExpc3RlbmVyXCJpbiBkb2N1bWVudCkpcmV0dXJuITE7Yj1cIm9uXCIrYTt2YXIgYz1iIGluIGRvY3VtZW50O2N8fChjPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYy5zZXRBdHRyaWJ1dGUoYixcInJldHVybjtcIiksYz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY1tiXSk7IWMmJnhjJiZcIndoZWVsXCI9PT1hJiYoYz1kb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5oYXNGZWF0dXJlKFwiRXZlbnRzLndoZWVsXCIsXCIzLjBcIikpO3JldHVybiBjfWZ1bmN0aW9uIHpjKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBBYyhhKXt2YXIgYj16YyhhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldClyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGUsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBjLmdldC5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Yy5zZXQuY2FsbCh0aGlzLGEpfX0pLHtnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPW51bGw7ZGVsZXRlIGFbYl19fX1cbmZ1bmN0aW9uIEJjKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1BYyhhKSl9ZnVuY3Rpb24gQ2MoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPXpjKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9dmFyIERjPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJ0b3BCbHVyIHRvcENoYW5nZSB0b3BDbGljayB0b3BGb2N1cyB0b3BJbnB1dCB0b3BLZXlEb3duIHRvcEtleVVwIHRvcFNlbGVjdGlvbkNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O1xuZnVuY3Rpb24gRWMoYSxiLGMpe2E9VC5nZXRQb29sZWQoRGMuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtvYyhjKTtBYihhKTtyZXR1cm4gYX12YXIgRmM9bnVsbCxHYz1udWxsO2Z1bmN0aW9uIEhjKGEpe2tiKGEpO2xiKCExKX1mdW5jdGlvbiBJYyhhKXt2YXIgYj1xYihhKTtpZihDYyhiKSlyZXR1cm4gYX1mdW5jdGlvbiBKYyhhLGIpe2lmKFwidG9wQ2hhbmdlXCI9PT1hKXJldHVybiBifXZhciBLYz0hMTtsLmNhblVzZURPTSYmKEtjPXljKFwiaW5wdXRcIikmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSkpO2Z1bmN0aW9uIExjKCl7RmMmJihGYy5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixNYyksR2M9RmM9bnVsbCl9ZnVuY3Rpb24gTWMoYSl7XCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJkljKEdjKSYmKGE9RWMoR2MsYSx3YyhhKSksdGMoSGMsYSkpfVxuZnVuY3Rpb24gTmMoYSxiLGMpe1widG9wRm9jdXNcIj09PWE/KExjKCksRmM9YixHYz1jLEZjLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLE1jKSk6XCJ0b3BCbHVyXCI9PT1hJiZMYygpfWZ1bmN0aW9uIE9jKGEpe2lmKFwidG9wU2VsZWN0aW9uQ2hhbmdlXCI9PT1hfHxcInRvcEtleVVwXCI9PT1hfHxcInRvcEtleURvd25cIj09PWEpcmV0dXJuIEljKEdjKX1mdW5jdGlvbiBQYyhhLGIpe2lmKFwidG9wQ2xpY2tcIj09PWEpcmV0dXJuIEljKGIpfWZ1bmN0aW9uICRjKGEsYil7aWYoXCJ0b3BJbnB1dFwiPT09YXx8XCJ0b3BDaGFuZ2VcIj09PWEpcmV0dXJuIEljKGIpfVxudmFyIGFkPXtldmVudFR5cGVzOkRjLF9pc0lucHV0RXZlbnRTdXBwb3J0ZWQ6S2MsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iP3FiKGIpOndpbmRvdyxmPWUubm9kZU5hbWUmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09Znx8XCJpbnB1dFwiPT09ZiYmXCJmaWxlXCI9PT1lLnR5cGUpdmFyIGc9SmM7ZWxzZSBpZih2YyhlKSlpZihLYylnPSRjO2Vsc2V7Zz1PYzt2YXIgaD1OY31lbHNlIGY9ZS5ub2RlTmFtZSwhZnx8XCJpbnB1dFwiIT09Zi50b0xvd2VyQ2FzZSgpfHxcImNoZWNrYm94XCIhPT1lLnR5cGUmJlwicmFkaW9cIiE9PWUudHlwZXx8KGc9UGMpO2lmKGcmJihnPWcoYSxiKSkpcmV0dXJuIEVjKGcsYyxkKTtoJiZoKGEsZSxiKTtcInRvcEJsdXJcIj09PWEmJm51bGwhPWImJihhPWIuX3dyYXBwZXJTdGF0ZXx8ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiYoYT1cIlwiK2UudmFsdWUsZS5nZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiKSE9PVxuYSYmZS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLGEpKX19O2Z1bmN0aW9uIGJkKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1ULmF1Z21lbnRDbGFzcyhiZCx7dmlldzpudWxsLGRldGFpbDpudWxsfSk7dmFyIGNkPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBkZChhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPWNkW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gZWQoKXtyZXR1cm4gZGR9ZnVuY3Rpb24gZmQoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfVxuYmQuYXVnbWVudENsYXNzKGZkLHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOmVkLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfX0pO1xudmFyIGdkPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsZGVwZW5kZW5jaWVzOltcInRvcE1vdXNlT3V0XCIsXCJ0b3BNb3VzZU92ZXJcIl19LG1vdXNlTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlTGVhdmVcIixkZXBlbmRlbmNpZXM6W1widG9wTW91c2VPdXRcIixcInRvcE1vdXNlT3ZlclwiXX19LGhkPXtldmVudFR5cGVzOmdkLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7aWYoXCJ0b3BNb3VzZU92ZXJcIj09PWEmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHxcInRvcE1vdXNlT3V0XCIhPT1hJiZcInRvcE1vdXNlT3ZlclwiIT09YSlyZXR1cm4gbnVsbDt2YXIgZT1kLndpbmRvdz09PWQ/ZDooZT1kLm93bmVyRG9jdW1lbnQpP2UuZGVmYXVsdFZpZXd8fGUucGFyZW50V2luZG93OndpbmRvdztcInRvcE1vdXNlT3V0XCI9PT1hPyhhPWIsYj0oYj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50KT9wYihiKTpudWxsKTphPW51bGw7aWYoYT09PVxuYilyZXR1cm4gbnVsbDt2YXIgZj1udWxsPT1hP2U6cWIoYSk7ZT1udWxsPT1iP2U6cWIoYik7dmFyIGc9ZmQuZ2V0UG9vbGVkKGdkLm1vdXNlTGVhdmUsYSxjLGQpO2cudHlwZT1cIm1vdXNlbGVhdmVcIjtnLnRhcmdldD1mO2cucmVsYXRlZFRhcmdldD1lO2M9ZmQuZ2V0UG9vbGVkKGdkLm1vdXNlRW50ZXIsYixjLGQpO2MudHlwZT1cIm1vdXNlZW50ZXJcIjtjLnRhcmdldD1lO2MucmVsYXRlZFRhcmdldD1mO0JiKGcsYyxhLGIpO3JldHVybltnLGNdfX0saWQ9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQuUmVhY3RDdXJyZW50T3duZXI7ZnVuY3Rpb24gamQoYSl7YT1hLnR5cGU7cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBhP2E6XCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5kaXNwbGF5TmFtZXx8YS5uYW1lOm51bGx9XG5mdW5jdGlvbiBrZChhKXt2YXIgYj1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7YltcInJldHVyblwiXTspYj1iW1wicmV0dXJuXCJdO2Vsc2V7aWYoMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMTtmb3IoO2JbXCJyZXR1cm5cIl07KWlmKGI9YltcInJldHVyblwiXSwwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxfXJldHVybiAzPT09Yi50YWc/MjozfWZ1bmN0aW9uIGxkKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/Mj09PWtkKGEpOiExfWZ1bmN0aW9uIG1kKGEpezIhPT1rZChhKT9FKFwiMTg4XCIpOnZvaWQgMH1cbmZ1bmN0aW9uIG5kKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXJldHVybiBiPWtkKGEpLDM9PT1iP0UoXCIxODhcIik6dm9pZCAwLDE9PT1iP251bGw6YTtmb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Y1tcInJldHVyblwiXSxmPWU/ZS5hbHRlcm5hdGU6bnVsbDtpZighZXx8IWYpYnJlYWs7aWYoZS5jaGlsZD09PWYuY2hpbGQpe2Zvcih2YXIgZz1lLmNoaWxkO2c7KXtpZihnPT09YylyZXR1cm4gbWQoZSksYTtpZihnPT09ZClyZXR1cm4gbWQoZSksYjtnPWcuc2libGluZ31FKFwiMTg4XCIpfWlmKGNbXCJyZXR1cm5cIl0hPT1kW1wicmV0dXJuXCJdKWM9ZSxkPWY7ZWxzZXtnPSExO2Zvcih2YXIgaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31nP1xudm9pZCAwOkUoXCIxODlcIil9fWMuYWx0ZXJuYXRlIT09ZD9FKFwiMTkwXCIpOnZvaWQgMH0zIT09Yy50YWc/RShcIjE4OFwiKTp2b2lkIDA7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBvZChhKXthPW5kKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZFtcInJldHVyblwiXT1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiW1wicmV0dXJuXCJdfHxiW1wicmV0dXJuXCJdPT09YSlyZXR1cm4gbnVsbDtiPWJbXCJyZXR1cm5cIl19Yi5zaWJsaW5nW1wicmV0dXJuXCJdPWJbXCJyZXR1cm5cIl07Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gcGQoYSl7YT1uZChhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkJiY0IT09Yi50YWcpYi5jaGlsZFtcInJldHVyblwiXT1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiW1wicmV0dXJuXCJdfHxiW1wicmV0dXJuXCJdPT09YSlyZXR1cm4gbnVsbDtiPWJbXCJyZXR1cm5cIl19Yi5zaWJsaW5nW1wicmV0dXJuXCJdPWJbXCJyZXR1cm5cIl07Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfXZhciBxZD1bXTtcbmZ1bmN0aW9uIHJkKGEpe3ZhciBiPWEudGFyZ2V0SW5zdDtkb3tpZighYil7YS5hbmNlc3RvcnMucHVzaChiKTticmVha312YXIgYztmb3IoYz1iO2NbXCJyZXR1cm5cIl07KWM9Y1tcInJldHVyblwiXTtjPTMhPT1jLnRhZz9udWxsOmMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoIWMpYnJlYWs7YS5hbmNlc3RvcnMucHVzaChiKTtiPXBiKGMpfXdoaWxlKGIpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKWI9YS5hbmNlc3RvcnNbY10sc2QoYS50b3BMZXZlbFR5cGUsYixhLm5hdGl2ZUV2ZW50LHdjKGEubmF0aXZlRXZlbnQpKX12YXIgdGQ9ITAsc2Q9dm9pZCAwO2Z1bmN0aW9uIHVkKGEpe3RkPSEhYX1mdW5jdGlvbiBVKGEsYixjKXtyZXR1cm4gYz9iYS5saXN0ZW4oYyxiLHZkLmJpbmQobnVsbCxhKSk6bnVsbH1mdW5jdGlvbiB3ZChhLGIsYyl7cmV0dXJuIGM/YmEuY2FwdHVyZShjLGIsdmQuYmluZChudWxsLGEpKTpudWxsfVxuZnVuY3Rpb24gdmQoYSxiKXtpZih0ZCl7dmFyIGM9d2MoYik7Yz1wYihjKTtudWxsPT09Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBjLnRhZ3x8Mj09PWtkKGMpfHwoYz1udWxsKTtpZihxZC5sZW5ndGgpe3ZhciBkPXFkLnBvcCgpO2QudG9wTGV2ZWxUeXBlPWE7ZC5uYXRpdmVFdmVudD1iO2QudGFyZ2V0SW5zdD1jO2E9ZH1lbHNlIGE9e3RvcExldmVsVHlwZTphLG5hdGl2ZUV2ZW50OmIsdGFyZ2V0SW5zdDpjLGFuY2VzdG9yczpbXX07dHJ5e3RjKHJkLGEpfWZpbmFsbHl7YS50b3BMZXZlbFR5cGU9bnVsbCxhLm5hdGl2ZUV2ZW50PW51bGwsYS50YXJnZXRJbnN0PW51bGwsYS5hbmNlc3RvcnMubGVuZ3RoPTAsMTA+cWQubGVuZ3RoJiZxZC5wdXNoKGEpfX19XG52YXIgeGQ9T2JqZWN0LmZyZWV6ZSh7Z2V0IF9lbmFibGVkKCl7cmV0dXJuIHRkfSxnZXQgX2hhbmRsZVRvcExldmVsKCl7cmV0dXJuIHNkfSxzZXRIYW5kbGVUb3BMZXZlbDpmdW5jdGlvbihhKXtzZD1hfSxzZXRFbmFibGVkOnVkLGlzRW5hYmxlZDpmdW5jdGlvbigpe3JldHVybiB0ZH0sdHJhcEJ1YmJsZWRFdmVudDpVLHRyYXBDYXB0dXJlZEV2ZW50OndkLGRpc3BhdGNoRXZlbnQ6dmR9KTtmdW5jdGlvbiB5ZChhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO2NbXCJtc1wiK2FdPVwiTVNcIitiO2NbXCJPXCIrYV09XCJvXCIrYi50b0xvd2VyQ2FzZSgpO3JldHVybiBjfVxudmFyIHpkPXthbmltYXRpb25lbmQ6eWQoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246eWQoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDp5ZChcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDp5ZChcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LEFkPXt9LEJkPXt9O2wuY2FuVXNlRE9NJiYoQmQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgemQuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgemQuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgemQuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgemQudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtcbmZ1bmN0aW9uIENkKGEpe2lmKEFkW2FdKXJldHVybiBBZFthXTtpZighemRbYV0pcmV0dXJuIGE7dmFyIGI9emRbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gQmQpcmV0dXJuIEFkW2FdPWJbY107cmV0dXJuXCJcIn1cbnZhciBEZD17dG9wQWJvcnQ6XCJhYm9ydFwiLHRvcEFuaW1hdGlvbkVuZDpDZChcImFuaW1hdGlvbmVuZFwiKXx8XCJhbmltYXRpb25lbmRcIix0b3BBbmltYXRpb25JdGVyYXRpb246Q2QoXCJhbmltYXRpb25pdGVyYXRpb25cIil8fFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIsdG9wQW5pbWF0aW9uU3RhcnQ6Q2QoXCJhbmltYXRpb25zdGFydFwiKXx8XCJhbmltYXRpb25zdGFydFwiLHRvcEJsdXI6XCJibHVyXCIsdG9wQ2FuY2VsOlwiY2FuY2VsXCIsdG9wQ2FuUGxheTpcImNhbnBsYXlcIix0b3BDYW5QbGF5VGhyb3VnaDpcImNhbnBsYXl0aHJvdWdoXCIsdG9wQ2hhbmdlOlwiY2hhbmdlXCIsdG9wQ2xpY2s6XCJjbGlja1wiLHRvcENsb3NlOlwiY2xvc2VcIix0b3BDb21wb3NpdGlvbkVuZDpcImNvbXBvc2l0aW9uZW5kXCIsdG9wQ29tcG9zaXRpb25TdGFydDpcImNvbXBvc2l0aW9uc3RhcnRcIix0b3BDb21wb3NpdGlvblVwZGF0ZTpcImNvbXBvc2l0aW9udXBkYXRlXCIsdG9wQ29udGV4dE1lbnU6XCJjb250ZXh0bWVudVwiLHRvcENvcHk6XCJjb3B5XCIsXG50b3BDdXQ6XCJjdXRcIix0b3BEb3VibGVDbGljazpcImRibGNsaWNrXCIsdG9wRHJhZzpcImRyYWdcIix0b3BEcmFnRW5kOlwiZHJhZ2VuZFwiLHRvcERyYWdFbnRlcjpcImRyYWdlbnRlclwiLHRvcERyYWdFeGl0OlwiZHJhZ2V4aXRcIix0b3BEcmFnTGVhdmU6XCJkcmFnbGVhdmVcIix0b3BEcmFnT3ZlcjpcImRyYWdvdmVyXCIsdG9wRHJhZ1N0YXJ0OlwiZHJhZ3N0YXJ0XCIsdG9wRHJvcDpcImRyb3BcIix0b3BEdXJhdGlvbkNoYW5nZTpcImR1cmF0aW9uY2hhbmdlXCIsdG9wRW1wdGllZDpcImVtcHRpZWRcIix0b3BFbmNyeXB0ZWQ6XCJlbmNyeXB0ZWRcIix0b3BFbmRlZDpcImVuZGVkXCIsdG9wRXJyb3I6XCJlcnJvclwiLHRvcEZvY3VzOlwiZm9jdXNcIix0b3BJbnB1dDpcImlucHV0XCIsdG9wS2V5RG93bjpcImtleWRvd25cIix0b3BLZXlQcmVzczpcImtleXByZXNzXCIsdG9wS2V5VXA6XCJrZXl1cFwiLHRvcExvYWRlZERhdGE6XCJsb2FkZWRkYXRhXCIsdG9wTG9hZDpcImxvYWRcIix0b3BMb2FkZWRNZXRhZGF0YTpcImxvYWRlZG1ldGFkYXRhXCIsdG9wTG9hZFN0YXJ0OlwibG9hZHN0YXJ0XCIsXG50b3BNb3VzZURvd246XCJtb3VzZWRvd25cIix0b3BNb3VzZU1vdmU6XCJtb3VzZW1vdmVcIix0b3BNb3VzZU91dDpcIm1vdXNlb3V0XCIsdG9wTW91c2VPdmVyOlwibW91c2VvdmVyXCIsdG9wTW91c2VVcDpcIm1vdXNldXBcIix0b3BQYXN0ZTpcInBhc3RlXCIsdG9wUGF1c2U6XCJwYXVzZVwiLHRvcFBsYXk6XCJwbGF5XCIsdG9wUGxheWluZzpcInBsYXlpbmdcIix0b3BQcm9ncmVzczpcInByb2dyZXNzXCIsdG9wUmF0ZUNoYW5nZTpcInJhdGVjaGFuZ2VcIix0b3BTY3JvbGw6XCJzY3JvbGxcIix0b3BTZWVrZWQ6XCJzZWVrZWRcIix0b3BTZWVraW5nOlwic2Vla2luZ1wiLHRvcFNlbGVjdGlvbkNoYW5nZTpcInNlbGVjdGlvbmNoYW5nZVwiLHRvcFN0YWxsZWQ6XCJzdGFsbGVkXCIsdG9wU3VzcGVuZDpcInN1c3BlbmRcIix0b3BUZXh0SW5wdXQ6XCJ0ZXh0SW5wdXRcIix0b3BUaW1lVXBkYXRlOlwidGltZXVwZGF0ZVwiLHRvcFRvZ2dsZTpcInRvZ2dsZVwiLHRvcFRvdWNoQ2FuY2VsOlwidG91Y2hjYW5jZWxcIix0b3BUb3VjaEVuZDpcInRvdWNoZW5kXCIsdG9wVG91Y2hNb3ZlOlwidG91Y2htb3ZlXCIsXG50b3BUb3VjaFN0YXJ0OlwidG91Y2hzdGFydFwiLHRvcFRyYW5zaXRpb25FbmQ6Q2QoXCJ0cmFuc2l0aW9uZW5kXCIpfHxcInRyYW5zaXRpb25lbmRcIix0b3BWb2x1bWVDaGFuZ2U6XCJ2b2x1bWVjaGFuZ2VcIix0b3BXYWl0aW5nOlwid2FpdGluZ1wiLHRvcFdoZWVsOlwid2hlZWxcIn0sRWQ9e30sRmQ9MCxHZD1cIl9yZWFjdExpc3RlbmVyc0lEXCIrKFwiXCIrTWF0aC5yYW5kb20oKSkuc2xpY2UoMik7ZnVuY3Rpb24gSGQoYSl7T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGEsR2QpfHwoYVtHZF09RmQrKyxFZFthW0dkXV09e30pO3JldHVybiBFZFthW0dkXV19ZnVuY3Rpb24gSWQoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gSmQoYSxiKXt2YXIgYz1JZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1JZChjKX19ZnVuY3Rpb24gS2QoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmXCJ0ZXh0XCI9PT1hLnR5cGV8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxudmFyIExkPWwuY2FuVXNlRE9NJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsTWQ9e3NlbGVjdDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvblNlbGVjdFwiLGNhcHR1cmVkOlwib25TZWxlY3RDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcInRvcEJsdXIgdG9wQ29udGV4dE1lbnUgdG9wRm9jdXMgdG9wS2V5RG93biB0b3BLZXlVcCB0b3BNb3VzZURvd24gdG9wTW91c2VVcCB0b3BTZWxlY3Rpb25DaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxOZD1udWxsLE9kPW51bGwsUGQ9bnVsbCxRZD0hMTtcbmZ1bmN0aW9uIFJkKGEsYil7aWYoUWR8fG51bGw9PU5kfHxOZCE9PWRhKCkpcmV0dXJuIG51bGw7dmFyIGM9TmQ7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmS2QoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OndpbmRvdy5nZXRTZWxlY3Rpb24/KGM9d2luZG93LmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pOmM9dm9pZCAwO3JldHVybiBQZCYmZWEoUGQsYyk/bnVsbDooUGQ9YyxhPVQuZ2V0UG9vbGVkKE1kLnNlbGVjdCxPZCxhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PU5kLEFiKGEpLGEpfVxudmFyIFNkPXtldmVudFR5cGVzOk1kLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9ZC53aW5kb3c9PT1kP2QuZG9jdW1lbnQ6OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQsZjtpZighKGY9IWUpKXthOntlPUhkKGUpO2Y9U2Eub25TZWxlY3Q7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspe3ZhciBoPWZbZ107aWYoIWUuaGFzT3duUHJvcGVydHkoaCl8fCFlW2hdKXtlPSExO2JyZWFrIGF9fWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj9xYihiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJ0b3BGb2N1c1wiOmlmKHZjKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKU5kPWUsT2Q9YixQZD1udWxsO2JyZWFrO2Nhc2UgXCJ0b3BCbHVyXCI6UGQ9T2Q9TmQ9bnVsbDticmVhaztjYXNlIFwidG9wTW91c2VEb3duXCI6UWQ9ITA7YnJlYWs7Y2FzZSBcInRvcENvbnRleHRNZW51XCI6Y2FzZSBcInRvcE1vdXNlVXBcIjpyZXR1cm4gUWQ9ITEsUmQoYyxkKTtjYXNlIFwidG9wU2VsZWN0aW9uQ2hhbmdlXCI6aWYoTGQpYnJlYWs7XG5jYXNlIFwidG9wS2V5RG93blwiOmNhc2UgXCJ0b3BLZXlVcFwiOnJldHVybiBSZChjLGQpfXJldHVybiBudWxsfX07ZnVuY3Rpb24gVGQoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfVQuYXVnbWVudENsYXNzKFRkLHthbmltYXRpb25OYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KTtmdW5jdGlvbiBVZChhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9VC5hdWdtZW50Q2xhc3MoVWQse2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KTtmdW5jdGlvbiBWZChhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9YmQuYXVnbWVudENsYXNzKFZkLHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtcbmZ1bmN0aW9uIFdkKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfVxudmFyIFhkPXtFc2M6XCJFc2NhcGVcIixTcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxZZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIixcbjExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLDExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn07ZnVuY3Rpb24gWmQoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfVxuYmQuYXVnbWVudENsYXNzKFpkLHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPVhkW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPVdkKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9ZZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6ZWQsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP1dkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/V2QoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KTtmdW5jdGlvbiAkZChhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9ZmQuYXVnbWVudENsYXNzKCRkLHtkYXRhVHJhbnNmZXI6bnVsbH0pO2Z1bmN0aW9uIGFlKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1iZC5hdWdtZW50Q2xhc3MoYWUse3RvdWNoZXM6bnVsbCx0YXJnZXRUb3VjaGVzOm51bGwsY2hhbmdlZFRvdWNoZXM6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTplZH0pO2Z1bmN0aW9uIGJlKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1ULmF1Z21lbnRDbGFzcyhiZSx7cHJvcGVydHlOYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KTtcbmZ1bmN0aW9uIGNlKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1mZC5hdWdtZW50Q2xhc3MoY2Use2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpbiBhPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSk7dmFyIGRlPXt9LGVlPXt9O1xuXCJhYm9ydCBhbmltYXRpb25FbmQgYW5pbWF0aW9uSXRlcmF0aW9uIGFuaW1hdGlvblN0YXJ0IGJsdXIgY2FuY2VsIGNhblBsYXkgY2FuUGxheVRocm91Z2ggY2xpY2sgY2xvc2UgY29udGV4dE1lbnUgY29weSBjdXQgZG91YmxlQ2xpY2sgZHJhZyBkcmFnRW5kIGRyYWdFbnRlciBkcmFnRXhpdCBkcmFnTGVhdmUgZHJhZ092ZXIgZHJhZ1N0YXJ0IGRyb3AgZHVyYXRpb25DaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgZm9jdXMgaW5wdXQgaW52YWxpZCBrZXlEb3duIGtleVByZXNzIGtleVVwIGxvYWQgbG9hZGVkRGF0YSBsb2FkZWRNZXRhZGF0YSBsb2FkU3RhcnQgbW91c2VEb3duIG1vdXNlTW92ZSBtb3VzZU91dCBtb3VzZU92ZXIgbW91c2VVcCBwYXN0ZSBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZUNoYW5nZSByZXNldCBzY3JvbGwgc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdWJtaXQgc3VzcGVuZCB0aW1lVXBkYXRlIHRvZ2dsZSB0b3VjaENhbmNlbCB0b3VjaEVuZCB0b3VjaE1vdmUgdG91Y2hTdGFydCB0cmFuc2l0aW9uRW5kIHZvbHVtZUNoYW5nZSB3YWl0aW5nIHdoZWVsXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXS50b1VwcGVyQ2FzZSgpK1xuYS5zbGljZSgxKSxjPVwib25cIitiO2I9XCJ0b3BcIitiO2M9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmMsY2FwdHVyZWQ6YytcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltiXX07ZGVbYV09YztlZVtiXT1jfSk7XG52YXIgZmU9e2V2ZW50VHlwZXM6ZGUsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1lZVthXTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcInRvcEtleVByZXNzXCI6aWYoMD09PVdkKGMpKXJldHVybiBudWxsO2Nhc2UgXCJ0b3BLZXlEb3duXCI6Y2FzZSBcInRvcEtleVVwXCI6YT1aZDticmVhaztjYXNlIFwidG9wQmx1clwiOmNhc2UgXCJ0b3BGb2N1c1wiOmE9VmQ7YnJlYWs7Y2FzZSBcInRvcENsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJ0b3BEb3VibGVDbGlja1wiOmNhc2UgXCJ0b3BNb3VzZURvd25cIjpjYXNlIFwidG9wTW91c2VNb3ZlXCI6Y2FzZSBcInRvcE1vdXNlVXBcIjpjYXNlIFwidG9wTW91c2VPdXRcIjpjYXNlIFwidG9wTW91c2VPdmVyXCI6Y2FzZSBcInRvcENvbnRleHRNZW51XCI6YT1mZDticmVhaztjYXNlIFwidG9wRHJhZ1wiOmNhc2UgXCJ0b3BEcmFnRW5kXCI6Y2FzZSBcInRvcERyYWdFbnRlclwiOmNhc2UgXCJ0b3BEcmFnRXhpdFwiOmNhc2UgXCJ0b3BEcmFnTGVhdmVcIjpjYXNlIFwidG9wRHJhZ092ZXJcIjpjYXNlIFwidG9wRHJhZ1N0YXJ0XCI6Y2FzZSBcInRvcERyb3BcIjphPVxuJGQ7YnJlYWs7Y2FzZSBcInRvcFRvdWNoQ2FuY2VsXCI6Y2FzZSBcInRvcFRvdWNoRW5kXCI6Y2FzZSBcInRvcFRvdWNoTW92ZVwiOmNhc2UgXCJ0b3BUb3VjaFN0YXJ0XCI6YT1hZTticmVhaztjYXNlIFwidG9wQW5pbWF0aW9uRW5kXCI6Y2FzZSBcInRvcEFuaW1hdGlvbkl0ZXJhdGlvblwiOmNhc2UgXCJ0b3BBbmltYXRpb25TdGFydFwiOmE9VGQ7YnJlYWs7Y2FzZSBcInRvcFRyYW5zaXRpb25FbmRcIjphPWJlO2JyZWFrO2Nhc2UgXCJ0b3BTY3JvbGxcIjphPWJkO2JyZWFrO2Nhc2UgXCJ0b3BXaGVlbFwiOmE9Y2U7YnJlYWs7Y2FzZSBcInRvcENvcHlcIjpjYXNlIFwidG9wQ3V0XCI6Y2FzZSBcInRvcFBhc3RlXCI6YT1VZDticmVhaztkZWZhdWx0OmE9VH1iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO0FiKGIpO3JldHVybiBifX07c2Q9ZnVuY3Rpb24oYSxiLGMsZCl7YT1qYihhLGIsYyxkKTtrYihhKTtsYighMSl9O2hiLmluamVjdEV2ZW50UGx1Z2luT3JkZXIoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBUYXBFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7XG5XYT1zYi5nZXRGaWJlckN1cnJlbnRQcm9wc0Zyb21Ob2RlO1hhPXNiLmdldEluc3RhbmNlRnJvbU5vZGU7WWE9c2IuZ2V0Tm9kZUZyb21JbnN0YW5jZTtoYi5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUoe1NpbXBsZUV2ZW50UGx1Z2luOmZlLEVudGVyTGVhdmVFdmVudFBsdWdpbjpoZCxDaGFuZ2VFdmVudFBsdWdpbjphZCxTZWxlY3RFdmVudFBsdWdpbjpTZCxCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOmljfSk7dmFyIGdlPVtdLGhlPS0xO2Z1bmN0aW9uIFYoYSl7MD5oZXx8KGEuY3VycmVudD1nZVtoZV0sZ2VbaGVdPW51bGwsaGUtLSl9ZnVuY3Rpb24gVyhhLGIpe2hlKys7Z2VbaGVdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn1uZXcgU2V0O3ZhciBpZT17Y3VycmVudDpEfSxYPXtjdXJyZW50OiExfSxqZT1EO2Z1bmN0aW9uIGtlKGEpe3JldHVybiBsZShhKT9qZTppZS5jdXJyZW50fVxuZnVuY3Rpb24gbWUoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBEO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIGxlKGEpe3JldHVybiAyPT09YS50YWcmJm51bGwhPWEudHlwZS5jaGlsZENvbnRleHRUeXBlc31mdW5jdGlvbiBuZShhKXtsZShhKSYmKFYoWCxhKSxWKGllLGEpKX1cbmZ1bmN0aW9uIG9lKGEsYixjKXtudWxsIT1pZS5jdXJzb3I/RShcIjE2OFwiKTp2b2lkIDA7VyhpZSxiLGEpO1coWCxjLGEpfWZ1bmN0aW9uIHBlKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGUsZD1hLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBiO2M9Yy5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gYyllIGluIGQ/dm9pZCAwOkUoXCIxMDhcIixqZChhKXx8XCJVbmtub3duXCIsZSk7cmV0dXJuIEIoe30sYixjKX1mdW5jdGlvbiBxZShhKXtpZighbGUoYSkpcmV0dXJuITE7dmFyIGI9YS5zdGF0ZU5vZGU7Yj1iJiZiLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxEO2plPWllLmN1cnJlbnQ7VyhpZSxiLGEpO1coWCxYLmN1cnJlbnQsYSk7cmV0dXJuITB9XG5mdW5jdGlvbiByZShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2M/dm9pZCAwOkUoXCIxNjlcIik7aWYoYil7dmFyIGQ9cGUoYSxqZSk7Yy5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1kO1YoWCxhKTtWKGllLGEpO1coaWUsZCxhKX1lbHNlIFYoWCxhKTtXKFgsYixhKX1cbmZ1bmN0aW9uIFkoYSxiLGMpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yjt0aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9bnVsbDt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzW1wicmV0dXJuXCJdPW51bGw7dGhpcy5pbmRleD0wO3RoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz10aGlzLnBlbmRpbmdQcm9wcz10aGlzLnJlZj1udWxsO3RoaXMuaW50ZXJuYWxDb250ZXh0VGFnPWM7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1cbmZ1bmN0aW9uIHNlKGEsYixjKXt2YXIgZD1hLmFsdGVybmF0ZTtudWxsPT09ZD8oZD1uZXcgWShhLnRhZyxhLmtleSxhLmludGVybmFsQ29udGV4dFRhZyksZC50eXBlPWEudHlwZSxkLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxkLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWQpOihkLmVmZmVjdFRhZz0wLGQubmV4dEVmZmVjdD1udWxsLGQuZmlyc3RFZmZlY3Q9bnVsbCxkLmxhc3RFZmZlY3Q9bnVsbCk7ZC5leHBpcmF0aW9uVGltZT1jO2QucGVuZGluZ1Byb3BzPWI7ZC5jaGlsZD1hLmNoaWxkO2QubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7ZC5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtkLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7ZC5zaWJsaW5nPWEuc2libGluZztkLmluZGV4PWEuaW5kZXg7ZC5yZWY9YS5yZWY7cmV0dXJuIGR9XG5mdW5jdGlvbiB0ZShhLGIsYyl7dmFyIGQ9dm9pZCAwLGU9YS50eXBlLGY9YS5rZXk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/KGQ9ZS5wcm90b3R5cGUmJmUucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ/bmV3IFkoMixmLGIpOm5ldyBZKDAsZixiKSxkLnR5cGU9ZSxkLnBlbmRpbmdQcm9wcz1hLnByb3BzKTpcInN0cmluZ1wiPT09dHlwZW9mIGU/KGQ9bmV3IFkoNSxmLGIpLGQudHlwZT1lLGQucGVuZGluZ1Byb3BzPWEucHJvcHMpOlwib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwibnVtYmVyXCI9PT10eXBlb2YgZS50YWc/KGQ9ZSxkLnBlbmRpbmdQcm9wcz1hLnByb3BzKTpFKFwiMTMwXCIsbnVsbD09ZT9lOnR5cGVvZiBlLFwiXCIpO2QuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gZH1mdW5jdGlvbiB1ZShhLGIsYyxkKXtiPW5ldyBZKDEwLGQsYik7Yi5wZW5kaW5nUHJvcHM9YTtiLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGJ9XG5mdW5jdGlvbiB2ZShhLGIsYyl7Yj1uZXcgWSg2LG51bGwsYik7Yi5wZW5kaW5nUHJvcHM9YTtiLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGJ9ZnVuY3Rpb24gd2UoYSxiLGMpe2I9bmV3IFkoNyxhLmtleSxiKTtiLnR5cGU9YS5oYW5kbGVyO2IucGVuZGluZ1Byb3BzPWE7Yi5leHBpcmF0aW9uVGltZT1jO3JldHVybiBifWZ1bmN0aW9uIHhlKGEsYixjKXthPW5ldyBZKDksbnVsbCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24geWUoYSxiLGMpe2I9bmV3IFkoNCxhLmtleSxiKTtiLnBlbmRpbmdQcm9wcz1hLmNoaWxkcmVufHxbXTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifXZhciB6ZT1udWxsLEFlPW51bGw7XG5mdW5jdGlvbiBCZShhKXtyZXR1cm4gZnVuY3Rpb24oYil7dHJ5e3JldHVybiBhKGIpfWNhdGNoKGMpe319fWZ1bmN0aW9uIENlKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO3plPUJlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJSb290KGMsYSl9KTtBZT1CZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfSl9Y2F0Y2goZCl7fXJldHVybiEwfWZ1bmN0aW9uIERlKGEpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiB6ZSYmemUoYSl9ZnVuY3Rpb24gRWUoYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIEFlJiZBZShhKX1cbmZ1bmN0aW9uIEZlKGEpe3JldHVybntiYXNlU3RhdGU6YSxleHBpcmF0aW9uVGltZTowLGZpcnN0Om51bGwsbGFzdDpudWxsLGNhbGxiYWNrTGlzdDpudWxsLGhhc0ZvcmNlVXBkYXRlOiExLGlzSW5pdGlhbGl6ZWQ6ITF9fWZ1bmN0aW9uIEdlKGEsYil7bnVsbD09PWEubGFzdD9hLmZpcnN0PWEubGFzdD1iOihhLmxhc3QubmV4dD1iLGEubGFzdD1iKTtpZigwPT09YS5leHBpcmF0aW9uVGltZXx8YS5leHBpcmF0aW9uVGltZT5iLmV4cGlyYXRpb25UaW1lKWEuZXhwaXJhdGlvblRpbWU9Yi5leHBpcmF0aW9uVGltZX1cbmZ1bmN0aW9uIEhlKGEsYil7dmFyIGM9YS5hbHRlcm5hdGUsZD1hLnVwZGF0ZVF1ZXVlO251bGw9PT1kJiYoZD1hLnVwZGF0ZVF1ZXVlPUZlKG51bGwpKTtudWxsIT09Yz8oYT1jLnVwZGF0ZVF1ZXVlLG51bGw9PT1hJiYoYT1jLnVwZGF0ZVF1ZXVlPUZlKG51bGwpKSk6YT1udWxsO2E9YSE9PWQ/YTpudWxsO251bGw9PT1hP0dlKGQsYik6bnVsbD09PWQubGFzdHx8bnVsbD09PWEubGFzdD8oR2UoZCxiKSxHZShhLGIpKTooR2UoZCxiKSxhLmxhc3Q9Yil9ZnVuY3Rpb24gSWUoYSxiLGMsZCl7YT1hLnBhcnRpYWxTdGF0ZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoYixjLGQpOmF9XG5mdW5jdGlvbiBKZShhLGIsYyxkLGUsZil7bnVsbCE9PWEmJmEudXBkYXRlUXVldWU9PT1jJiYoYz1iLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6Yy5iYXNlU3RhdGUsZXhwaXJhdGlvblRpbWU6Yy5leHBpcmF0aW9uVGltZSxmaXJzdDpjLmZpcnN0LGxhc3Q6Yy5sYXN0LGlzSW5pdGlhbGl6ZWQ6Yy5pc0luaXRpYWxpemVkLGNhbGxiYWNrTGlzdDpudWxsLGhhc0ZvcmNlVXBkYXRlOiExfSk7Yy5leHBpcmF0aW9uVGltZT0wO2MuaXNJbml0aWFsaXplZD9hPWMuYmFzZVN0YXRlOihhPWMuYmFzZVN0YXRlPWIubWVtb2l6ZWRTdGF0ZSxjLmlzSW5pdGlhbGl6ZWQ9ITApO2Zvcih2YXIgZz0hMCxoPWMuZmlyc3Qsaz0hMTtudWxsIT09aDspe3ZhciBxPWguZXhwaXJhdGlvblRpbWU7aWYocT5mKXt2YXIgdj1jLmV4cGlyYXRpb25UaW1lO2lmKDA9PT12fHx2PnEpYy5leHBpcmF0aW9uVGltZT1xO2t8fChrPSEwLGMuYmFzZVN0YXRlPWEpfWVsc2V7a3x8KGMuZmlyc3Q9aC5uZXh0LG51bGw9PT1cbmMuZmlyc3QmJihjLmxhc3Q9bnVsbCkpO2lmKGguaXNSZXBsYWNlKWE9SWUoaCxkLGEsZSksZz0hMDtlbHNlIGlmKHE9SWUoaCxkLGEsZSkpYT1nP0Ioe30sYSxxKTpCKGEscSksZz0hMTtoLmlzRm9yY2VkJiYoYy5oYXNGb3JjZVVwZGF0ZT0hMCk7bnVsbCE9PWguY2FsbGJhY2smJihxPWMuY2FsbGJhY2tMaXN0LG51bGw9PT1xJiYocT1jLmNhbGxiYWNrTGlzdD1bXSkscS5wdXNoKGgpKX1oPWgubmV4dH1udWxsIT09Yy5jYWxsYmFja0xpc3Q/Yi5lZmZlY3RUYWd8PTMyOm51bGwhPT1jLmZpcnN0fHxjLmhhc0ZvcmNlVXBkYXRlfHwoYi51cGRhdGVRdWV1ZT1udWxsKTtrfHwoYy5iYXNlU3RhdGU9YSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBLZShhLGIpe3ZhciBjPWEuY2FsbGJhY2tMaXN0O2lmKG51bGwhPT1jKWZvcihhLmNhbGxiYWNrTGlzdD1udWxsLGE9MDthPGMubGVuZ3RoO2ErKyl7dmFyIGQ9Y1thXSxlPWQuY2FsbGJhY2s7ZC5jYWxsYmFjaz1udWxsO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBlP0UoXCIxOTFcIixlKTp2b2lkIDA7ZS5jYWxsKGIpfX1cbmZ1bmN0aW9uIExlKGEsYixjLGQpe2Z1bmN0aW9uIGUoYSxiKXtiLnVwZGF0ZXI9ZjthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxGaWJlcj1hfXZhciBmPXtpc01vdW50ZWQ6bGQsZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGMsZCxlKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtlPXZvaWQgMD09PWU/bnVsbDplO3ZhciBnPWIoYyk7SGUoYyx7ZXhwaXJhdGlvblRpbWU6ZyxwYXJ0aWFsU3RhdGU6ZCxjYWxsYmFjazplLGlzUmVwbGFjZTohMSxpc0ZvcmNlZDohMSxuZXh0Q2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9KTthKGMsZyl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYyxkLGUpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2U9dm9pZCAwPT09ZT9udWxsOmU7dmFyIGc9YihjKTtIZShjLHtleHBpcmF0aW9uVGltZTpnLHBhcnRpYWxTdGF0ZTpkLGNhbGxiYWNrOmUsaXNSZXBsYWNlOiEwLGlzRm9yY2VkOiExLG5leHRDYWxsYmFjazpudWxsLG5leHQ6bnVsbH0pO1xuYShjLGcpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYyxkKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBlPWIoYyk7SGUoYyx7ZXhwaXJhdGlvblRpbWU6ZSxwYXJ0aWFsU3RhdGU6bnVsbCxjYWxsYmFjazpkLGlzUmVwbGFjZTohMSxpc0ZvcmNlZDohMCxuZXh0Q2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9KTthKGMsZSl9fTtyZXR1cm57YWRvcHRDbGFzc0luc3RhbmNlOmUsY29uc3RydWN0Q2xhc3NJbnN0YW5jZTpmdW5jdGlvbihhLGIpe3ZhciBjPWEudHlwZSxkPWtlKGEpLGY9Mj09PWEudGFnJiZudWxsIT1hLnR5cGUuY29udGV4dFR5cGVzLGc9Zj9tZShhLGQpOkQ7Yj1uZXcgYyhiLGcpO2UoYSxiKTtmJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZCxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWcpO3JldHVybiBifSxtb3VudENsYXNzSW5zdGFuY2U6ZnVuY3Rpb24oYSxcbmIpe3ZhciBjPWEuYWx0ZXJuYXRlLGQ9YS5zdGF0ZU5vZGUsZT1kLnN0YXRlfHxudWxsLGc9YS5wZW5kaW5nUHJvcHM7Zz92b2lkIDA6RShcIjE1OFwiKTt2YXIgaD1rZShhKTtkLnByb3BzPWc7ZC5zdGF0ZT1hLm1lbW9pemVkU3RhdGU9ZTtkLnJlZnM9RDtkLmNvbnRleHQ9bWUoYSxoKTtudWxsIT1hLnR5cGUmJm51bGwhPWEudHlwZS5wcm90b3R5cGUmJiEwPT09YS50eXBlLnByb3RvdHlwZS51bnN0YWJsZV9pc0FzeW5jUmVhY3RDb21wb25lbnQmJihhLmludGVybmFsQ29udGV4dFRhZ3w9MSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50V2lsbE1vdW50JiYoZT1kLnN0YXRlLGQuY29tcG9uZW50V2lsbE1vdW50KCksZSE9PWQuc3RhdGUmJmYuZW5xdWV1ZVJlcGxhY2VTdGF0ZShkLGQuc3RhdGUsbnVsbCksZT1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1lJiYoZC5zdGF0ZT1KZShjLGEsZSxkLGcsYikpKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD1cbjQpfSx1cGRhdGVDbGFzc0luc3RhbmNlOmZ1bmN0aW9uKGEsYixlKXt2YXIgZz1iLnN0YXRlTm9kZTtnLnByb3BzPWIubWVtb2l6ZWRQcm9wcztnLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZTt2YXIgaD1iLm1lbW9pemVkUHJvcHMsaz1iLnBlbmRpbmdQcm9wcztrfHwoaz1oLG51bGw9PWs/RShcIjE1OVwiKTp2b2lkIDApO3ZhciB1PWcuY29udGV4dCx6PWtlKGIpO3o9bWUoYix6KTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHxoPT09ayYmdT09PXp8fCh1PWcuc3RhdGUsZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGsseiksZy5zdGF0ZSE9PXUmJmYuZW5xdWV1ZVJlcGxhY2VTdGF0ZShnLGcuc3RhdGUsbnVsbCkpO3U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWIudXBkYXRlUXVldWU/SmUoYSxiLGIudXBkYXRlUXVldWUsZyxrLGUpOnU7aWYoIShoIT09a3x8dSE9PWV8fFguY3VycmVudHx8bnVsbCE9PWIudXBkYXRlUXVldWUmJmIudXBkYXRlUXVldWUuaGFzRm9yY2VVcGRhdGUpKXJldHVyblwiZnVuY3Rpb25cIiE9PVxudHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZ1PT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLCExO3ZhciBHPWs7aWYobnVsbD09PWh8fG51bGwhPT1iLnVwZGF0ZVF1ZXVlJiZiLnVwZGF0ZVF1ZXVlLmhhc0ZvcmNlVXBkYXRlKUc9ITA7ZWxzZXt2YXIgST1iLnN0YXRlTm9kZSxMPWIudHlwZTtHPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBJLnNob3VsZENvbXBvbmVudFVwZGF0ZT9JLnNob3VsZENvbXBvbmVudFVwZGF0ZShHLGUseik6TC5wcm90b3R5cGUmJkwucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFlYShoLEcpfHwhZWEodSxlKTohMH1HPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoayxlLHopLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8XG5oPT09YS5tZW1vaXplZFByb3BzJiZ1PT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLGMoYixrKSxkKGIsZSkpO2cucHJvcHM9aztnLnN0YXRlPWU7Zy5jb250ZXh0PXo7cmV0dXJuIEd9fX12YXIgUWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sW1wiZm9yXCJdLFJlPVFlP1N5bWJvbFtcImZvclwiXShcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsU2U9UWU/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuY2FsbFwiKTo2MDEwNCxUZT1RZT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5yZXR1cm5cIik6NjAxMDUsVWU9UWU/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LFZlPVFlP1N5bWJvbFtcImZvclwiXShcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LFdlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtcbmZ1bmN0aW9uIFhlKGEpe2lmKG51bGw9PT1hfHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1XZSYmYVtXZV18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH12YXIgWWU9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFplKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbCE9PWMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjKXtpZihiLl9vd25lcil7Yj1iLl9vd25lcjt2YXIgZD12b2lkIDA7YiYmKDIhPT1iLnRhZz9FKFwiMTEwXCIpOnZvaWQgMCxkPWIuc3RhdGVOb2RlKTtkP3ZvaWQgMDpFKFwiMTQ3XCIsYyk7dmFyIGU9XCJcIitjO2lmKG51bGwhPT1hJiZudWxsIT09YS5yZWYmJmEucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBhLnJlZjthPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcz09PUQ/ZC5yZWZzPXt9OmQucmVmcztudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2EuX3N0cmluZ1JlZj1lO3JldHVybiBhfVwic3RyaW5nXCIhPT10eXBlb2YgYz9FKFwiMTQ4XCIpOnZvaWQgMDtiLl9vd25lcj92b2lkIDA6RShcIjE0OVwiLGMpfXJldHVybiBjfVxuZnVuY3Rpb24gJGUoYSxiKXtcInRleHRhcmVhXCIhPT1hLnR5cGUmJkUoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKX1cbmZ1bmN0aW9uIGFmKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiLGMpe2E9c2UoYSxiLGMpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj12ZShjLGEuaW50ZXJuYWxDb250ZXh0VGFnLGQpLGJbXCJyZXR1cm5cIl09YSxiO2I9ZShiLGMsZCk7YltcInJldHVyblwiXT1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIudHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyxkKSxkLnJlZj1aZShiLGMpLGRbXCJyZXR1cm5cIl09YSxkO2Q9dGUoYyxhLmludGVybmFsQ29udGV4dFRhZyxkKTtkLnJlZj1aZShiLGMpO2RbXCJyZXR1cm5cIl09YTtyZXR1cm4gZH1mdW5jdGlvbiBxKGEsYixjLGQpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9d2UoYyxhLmludGVybmFsQ29udGV4dFRhZyxkKSxiW1wicmV0dXJuXCJdPWEsYjtiPWUoYixjLGQpO1xuYltcInJldHVyblwiXT1hO3JldHVybiBifWZ1bmN0aW9uIHYoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDkhPT1iLnRhZylyZXR1cm4gYj14ZShjLGEuaW50ZXJuYWxDb250ZXh0VGFnLGQpLGIudHlwZT1jLnZhbHVlLGJbXCJyZXR1cm5cIl09YSxiO2I9ZShiLG51bGwsZCk7Yi50eXBlPWMudmFsdWU7YltcInJldHVyblwiXT1hO3JldHVybiBifWZ1bmN0aW9uIHkoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPXllKGMsYS5pbnRlcm5hbENvbnRleHRUYWcsZCksYltcInJldHVyblwiXT1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10sZCk7YltcInJldHVyblwiXT1hO3JldHVybiBifWZ1bmN0aW9uIHUoYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8MTAhPT1iLnRhZylyZXR1cm4gYj11ZShjLGEuaW50ZXJuYWxDb250ZXh0VGFnLFxuZCxmKSxiW1wicmV0dXJuXCJdPWEsYjtiPWUoYixjLGQpO2JbXCJyZXR1cm5cIl09YTtyZXR1cm4gYn1mdW5jdGlvbiB6KGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj12ZShcIlwiK2IsYS5pbnRlcm5hbENvbnRleHRUYWcsYyksYltcInJldHVyblwiXT1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgUmU6aWYoYi50eXBlPT09VmUpcmV0dXJuIGI9dWUoYi5wcm9wcy5jaGlsZHJlbixhLmludGVybmFsQ29udGV4dFRhZyxjLGIua2V5KSxiW1wicmV0dXJuXCJdPWEsYjtjPXRlKGIsYS5pbnRlcm5hbENvbnRleHRUYWcsYyk7Yy5yZWY9WmUobnVsbCxiKTtjW1wicmV0dXJuXCJdPWE7cmV0dXJuIGM7Y2FzZSBTZTpyZXR1cm4gYj13ZShiLGEuaW50ZXJuYWxDb250ZXh0VGFnLGMpLGJbXCJyZXR1cm5cIl09YSxiO2Nhc2UgVGU6cmV0dXJuIGM9eGUoYixhLmludGVybmFsQ29udGV4dFRhZyxcbmMpLGMudHlwZT1iLnZhbHVlLGNbXCJyZXR1cm5cIl09YSxjO2Nhc2UgVWU6cmV0dXJuIGI9eWUoYixhLmludGVybmFsQ29udGV4dFRhZyxjKSxiW1wicmV0dXJuXCJdPWEsYn1pZihZZShiKXx8WGUoYikpcmV0dXJuIGI9dWUoYixhLmludGVybmFsQ29udGV4dFRhZyxjLG51bGwpLGJbXCJyZXR1cm5cIl09YSxiOyRlKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gRyhhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBSZTpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PVZlP3UoYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSBTZTpyZXR1cm4gYy5rZXk9PT1lP3EoYSxiLGMsZCk6bnVsbDtjYXNlIFRlOnJldHVybiBudWxsPT09XG5lP3YoYSxiLGMsZCk6bnVsbDtjYXNlIFVlOnJldHVybiBjLmtleT09PWU/eShhLGIsYyxkKTpudWxsfWlmKFllKGMpfHxYZShjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDp1KGEsYixjLGQsbnVsbCk7JGUoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBJKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIFJlOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1WZT91KGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmsoYixhLGQsZSk7Y2FzZSBTZTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwscShiLGEsZCxlKTtjYXNlIFRlOnJldHVybiBhPWEuZ2V0KGMpfHxudWxsLHYoYixhLGQsZSk7Y2FzZSBVZTpyZXR1cm4gYT1cbmEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCx5KGIsYSxkLGUpfWlmKFllKGQpfHxYZShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCx1KGIsYSxkLGUsbnVsbCk7JGUoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBMKGUsZyxtLEEpe2Zvcih2YXIgaD1udWxsLHI9bnVsbCxuPWcsdz1nPTAsaz1udWxsO251bGwhPT1uJiZ3PG0ubGVuZ3RoO3crKyl7bi5pbmRleD53PyhrPW4sbj1udWxsKTprPW4uc2libGluZzt2YXIgeD1HKGUsbixtW3ddLEEpO2lmKG51bGw9PT14KXtudWxsPT09biYmKG49ayk7YnJlYWt9YSYmbiYmbnVsbD09PXguYWx0ZXJuYXRlJiZiKGUsbik7Zz1mKHgsZyx3KTtudWxsPT09cj9oPXg6ci5zaWJsaW5nPXg7cj14O249a31pZih3PT09bS5sZW5ndGgpcmV0dXJuIGMoZSxuKSxoO2lmKG51bGw9PT1uKXtmb3IoO3c8bS5sZW5ndGg7dysrKWlmKG49eihlLG1bd10sQSkpZz1mKG4sZyx3KSxudWxsPT09cj9oPW46ci5zaWJsaW5nPW4scj1uO3JldHVybiBofWZvcihuPVxuZChlLG4pO3c8bS5sZW5ndGg7dysrKWlmKGs9SShuLGUsdyxtW3ddLEEpKXtpZihhJiZudWxsIT09ay5hbHRlcm5hdGUpbltcImRlbGV0ZVwiXShudWxsPT09ay5rZXk/dzprLmtleSk7Zz1mKGssZyx3KTtudWxsPT09cj9oPWs6ci5zaWJsaW5nPWs7cj1rfWEmJm4uZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGh9ZnVuY3Rpb24gTihlLGcsbSxBKXt2YXIgaD1YZShtKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgaD9FKFwiMTUwXCIpOnZvaWQgMDttPWguY2FsbChtKTtudWxsPT1tP0UoXCIxNTFcIik6dm9pZCAwO2Zvcih2YXIgcj1oPW51bGwsbj1nLHc9Zz0wLGs9bnVsbCx4PW0ubmV4dCgpO251bGwhPT1uJiYheC5kb25lO3crKyx4PW0ubmV4dCgpKXtuLmluZGV4Pnc/KGs9bixuPW51bGwpOms9bi5zaWJsaW5nO3ZhciBKPUcoZSxuLHgudmFsdWUsQSk7aWYobnVsbD09PUope258fChuPWspO2JyZWFrfWEmJm4mJm51bGw9PT1KLmFsdGVybmF0ZSYmYihlLG4pO2c9ZihKLFxuZyx3KTtudWxsPT09cj9oPUo6ci5zaWJsaW5nPUo7cj1KO249a31pZih4LmRvbmUpcmV0dXJuIGMoZSxuKSxoO2lmKG51bGw9PT1uKXtmb3IoOyF4LmRvbmU7dysrLHg9bS5uZXh0KCkpeD16KGUseC52YWx1ZSxBKSxudWxsIT09eCYmKGc9Zih4LGcsdyksbnVsbD09PXI/aD14OnIuc2libGluZz14LHI9eCk7cmV0dXJuIGh9Zm9yKG49ZChlLG4pOyF4LmRvbmU7dysrLHg9bS5uZXh0KCkpaWYoeD1JKG4sZSx3LHgudmFsdWUsQSksbnVsbCE9PXgpe2lmKGEmJm51bGwhPT14LmFsdGVybmF0ZSluW1wiZGVsZXRlXCJdKG51bGw9PT14LmtleT93Ongua2V5KTtnPWYoeCxnLHcpO251bGw9PT1yP2g9eDpyLnNpYmxpbmc9eDtyPXh9YSYmbi5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gaH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09VmUmJm51bGw9PT1mLmtleSYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7XG52YXIgbT1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKG0pc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgUmU6YTp7dmFyIHI9Zi5rZXk7Zm9yKG09ZDtudWxsIT09bTspe2lmKG0ua2V5PT09cilpZigxMD09PW0udGFnP2YudHlwZT09PVZlOm0udHlwZT09PWYudHlwZSl7YyhhLG0uc2libGluZyk7ZD1lKG0sZi50eXBlPT09VmU/Zi5wcm9wcy5jaGlsZHJlbjpmLnByb3BzLGgpO2QucmVmPVplKG0sZik7ZFtcInJldHVyblwiXT1hO2E9ZDticmVhayBhfWVsc2V7YyhhLG0pO2JyZWFrfWVsc2UgYihhLG0pO209bS5zaWJsaW5nfWYudHlwZT09PVZlPyhkPXVlKGYucHJvcHMuY2hpbGRyZW4sYS5pbnRlcm5hbENvbnRleHRUYWcsaCxmLmtleSksZFtcInJldHVyblwiXT1hLGE9ZCk6KGg9dGUoZixhLmludGVybmFsQ29udGV4dFRhZyxoKSxoLnJlZj1aZShkLGYpLGhbXCJyZXR1cm5cIl09YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgU2U6YTp7Zm9yKG09Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PVxubSlpZig3PT09ZC50YWcpe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYsaCk7ZFtcInJldHVyblwiXT1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9d2UoZixhLmludGVybmFsQ29udGV4dFRhZyxoKTtkW1wicmV0dXJuXCJdPWE7YT1kfXJldHVybiBnKGEpO2Nhc2UgVGU6YTp7aWYobnVsbCE9PWQpaWYoOT09PWQudGFnKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxudWxsLGgpO2QudHlwZT1mLnZhbHVlO2RbXCJyZXR1cm5cIl09YTthPWQ7YnJlYWsgYX1lbHNlIGMoYSxkKTtkPXhlKGYsYS5pbnRlcm5hbENvbnRleHRUYWcsaCk7ZC50eXBlPWYudmFsdWU7ZFtcInJldHVyblwiXT1hO2E9ZH1yZXR1cm4gZyhhKTtjYXNlIFVlOmE6e2ZvcihtPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1tKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1cbmYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdLGgpO2RbXCJyZXR1cm5cIl09YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPXllKGYsYS5pbnRlcm5hbENvbnRleHRUYWcsaCk7ZFtcInJldHVyblwiXT1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZixoKSk6KGMoYSxkKSxkPXZlKGYsYS5pbnRlcm5hbENvbnRleHRUYWcsaCkpLGRbXCJyZXR1cm5cIl09YSxhPWQsZyhhKTtpZihZZShmKSlyZXR1cm4gTChhLGQsZixoKTtpZihYZShmKSlyZXR1cm4gTihhLGQsZixoKTttJiYkZShhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZilzd2l0Y2goYS50YWcpe2Nhc2UgMjpjYXNlIDE6aD1hLnR5cGUsRShcIjE1MlwiLGguZGlzcGxheU5hbWV8fFxuaC5uYW1lfHxcIkNvbXBvbmVudFwiKX1yZXR1cm4gYyhhLGQpfX12YXIgYmY9YWYoITApLGNmPWFmKCExKTtcbmZ1bmN0aW9uIGRmKGEsYixjLGQsZSl7ZnVuY3Rpb24gZihhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtiLmNoaWxkPW51bGw9PT1hP2NmKGIsbnVsbCxjLGQpOmJmKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIGcoYSxiKXt2YXIgYz1iLnJlZjtudWxsPT09Y3x8YSYmYS5yZWY9PT1jfHwoYi5lZmZlY3RUYWd8PTEyOCl9ZnVuY3Rpb24gaChhLGIsYyxkKXtnKGEsYik7aWYoIWMpcmV0dXJuIGQmJnJlKGIsITEpLHEoYSxiKTtjPWIuc3RhdGVOb2RlO2lkLmN1cnJlbnQ9Yjt2YXIgZT1jLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO2YoYSxiLGUpO2IubWVtb2l6ZWRTdGF0ZT1jLnN0YXRlO2IubWVtb2l6ZWRQcm9wcz1jLnByb3BzO2QmJnJlKGIsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIGsoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9vZShhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZvZShhLFxuYi5jb250ZXh0LCExKTtJKGEsYi5jb250YWluZXJJbmZvKX1mdW5jdGlvbiBxKGEsYil7bnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkP0UoXCIxNTNcIik6dm9pZCAwO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7dmFyIGM9c2UoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKTtiLmNoaWxkPWM7Zm9yKGNbXCJyZXR1cm5cIl09YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1zZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpLGNbXCJyZXR1cm5cIl09YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiB2KGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDM6ayhiKTticmVhaztjYXNlIDI6cWUoYik7YnJlYWs7Y2FzZSA0OkkoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKX1yZXR1cm4gbnVsbH12YXIgeT1hLnNob3VsZFNldFRleHRDb250ZW50LHU9YS51c2VTeW5jU2NoZWR1bGluZyx6PWEuc2hvdWxkRGVwcmlvcml0aXplU3VidHJlZSxcbkc9Yi5wdXNoSG9zdENvbnRleHQsST1iLnB1c2hIb3N0Q29udGFpbmVyLEw9Yy5lbnRlckh5ZHJhdGlvblN0YXRlLE49Yy5yZXNldEh5ZHJhdGlvblN0YXRlLEo9Yy50cnlUb0NsYWltTmV4dEh5ZHJhdGFibGVJbnN0YW5jZTthPUxlKGQsZSxmdW5jdGlvbihhLGIpe2EubWVtb2l6ZWRQcm9wcz1ifSxmdW5jdGlvbihhLGIpe2EubWVtb2l6ZWRTdGF0ZT1ifSk7dmFyIHc9YS5hZG9wdENsYXNzSW5zdGFuY2UsbT1hLmNvbnN0cnVjdENsYXNzSW5zdGFuY2UsQT1hLm1vdW50Q2xhc3NJbnN0YW5jZSxPYj1hLnVwZGF0ZUNsYXNzSW5zdGFuY2U7cmV0dXJue2JlZ2luV29yazpmdW5jdGlvbihhLGIsYyl7aWYoMD09PWIuZXhwaXJhdGlvblRpbWV8fGIuZXhwaXJhdGlvblRpbWU+YylyZXR1cm4gdihhLGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAwOm51bGwhPT1hP0UoXCIxNTVcIik6dm9pZCAwO3ZhciBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLHI9a2UoYik7cj1tZShiLHIpO2Q9ZChlLHIpO2IuZWZmZWN0VGFnfD1cbjE7XCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQucmVuZGVyPyhiLnRhZz0yLGU9cWUoYiksdyhiLGQpLEEoYixjKSxiPWgoYSxiLCEwLGUpKTooYi50YWc9MSxmKGEsYixkKSxiLm1lbW9pemVkUHJvcHM9ZSxiPWIuY2hpbGQpO3JldHVybiBiO2Nhc2UgMTphOntlPWIudHlwZTtjPWIucGVuZGluZ1Byb3BzO2Q9Yi5tZW1vaXplZFByb3BzO2lmKFguY3VycmVudCludWxsPT09YyYmKGM9ZCk7ZWxzZSBpZihudWxsPT09Y3x8ZD09PWMpe2I9cShhLGIpO2JyZWFrIGF9ZD1rZShiKTtkPW1lKGIsZCk7ZT1lKGMsZCk7Yi5lZmZlY3RUYWd8PTE7ZihhLGIsZSk7Yi5tZW1vaXplZFByb3BzPWM7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgMjpyZXR1cm4gZT1xZShiKSxkPXZvaWQgMCxudWxsPT09YT9iLnN0YXRlTm9kZT9FKFwiMTUzXCIpOihtKGIsYi5wZW5kaW5nUHJvcHMpLEEoYixjKSxkPSEwKTpkPU9iKGEsYixjKSxoKGEsYixkLGUpO2Nhc2UgMzpyZXR1cm4gayhiKSxcbmU9Yi51cGRhdGVRdWV1ZSxudWxsIT09ZT8oZD1iLm1lbW9pemVkU3RhdGUsZT1KZShhLGIsZSxudWxsLG51bGwsYyksZD09PWU/KE4oKSxiPXEoYSxiKSk6KGQ9ZS5lbGVtZW50LHI9Yi5zdGF0ZU5vZGUsKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZCkmJnIuaHlkcmF0ZSYmTChiKT8oYi5lZmZlY3RUYWd8PTIsYi5jaGlsZD1jZihiLG51bGwsZCxjKSk6KE4oKSxmKGEsYixkKSksYi5tZW1vaXplZFN0YXRlPWUsYj1iLmNoaWxkKSk6KE4oKSxiPXEoYSxiKSksYjtjYXNlIDU6RyhiKTtudWxsPT09YSYmSihiKTtlPWIudHlwZTt2YXIgbj1iLm1lbW9pemVkUHJvcHM7ZD1iLnBlbmRpbmdQcm9wcztudWxsPT09ZCYmKGQ9bixudWxsPT09ZD9FKFwiMTU0XCIpOnZvaWQgMCk7cj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbDtYLmN1cnJlbnR8fG51bGwhPT1kJiZuIT09ZD8obj1kLmNoaWxkcmVuLHkoZSxkKT9uPW51bGw6ciYmeShlLHIpJiYoYi5lZmZlY3RUYWd8PTE2KSxnKGEsYiksXG4yMTQ3NDgzNjQ3IT09YyYmIXUmJnooZSxkKT8oYi5leHBpcmF0aW9uVGltZT0yMTQ3NDgzNjQ3LGI9bnVsbCk6KGYoYSxiLG4pLGIubWVtb2l6ZWRQcm9wcz1kLGI9Yi5jaGlsZCkpOmI9cShhLGIpO3JldHVybiBiO2Nhc2UgNjpyZXR1cm4gbnVsbD09PWEmJkooYiksYT1iLnBlbmRpbmdQcm9wcyxudWxsPT09YSYmKGE9Yi5tZW1vaXplZFByb3BzKSxiLm1lbW9pemVkUHJvcHM9YSxudWxsO2Nhc2UgODpiLnRhZz03O2Nhc2UgNzplPWIucGVuZGluZ1Byb3BzO2lmKFguY3VycmVudCludWxsPT09ZSYmKGU9YSYmYS5tZW1vaXplZFByb3BzLG51bGw9PT1lP0UoXCIxNTRcIik6dm9pZCAwKTtlbHNlIGlmKG51bGw9PT1lfHxiLm1lbW9pemVkUHJvcHM9PT1lKWU9Yi5tZW1vaXplZFByb3BzO2Q9ZS5jaGlsZHJlbjtiLnN0YXRlTm9kZT1udWxsPT09YT9jZihiLGIuc3RhdGVOb2RlLGQsYyk6YmYoYixiLnN0YXRlTm9kZSxkLGMpO2IubWVtb2l6ZWRQcm9wcz1lO3JldHVybiBiLnN0YXRlTm9kZTtcbmNhc2UgOTpyZXR1cm4gbnVsbDtjYXNlIDQ6YTp7SShiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2U9Yi5wZW5kaW5nUHJvcHM7aWYoWC5jdXJyZW50KW51bGw9PT1lJiYoZT1hJiZhLm1lbW9pemVkUHJvcHMsbnVsbD09ZT9FKFwiMTU0XCIpOnZvaWQgMCk7ZWxzZSBpZihudWxsPT09ZXx8Yi5tZW1vaXplZFByb3BzPT09ZSl7Yj1xKGEsYik7YnJlYWsgYX1udWxsPT09YT9iLmNoaWxkPWJmKGIsbnVsbCxlLGMpOmYoYSxiLGUpO2IubWVtb2l6ZWRQcm9wcz1lO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDEwOmE6e2M9Yi5wZW5kaW5nUHJvcHM7aWYoWC5jdXJyZW50KW51bGw9PT1jJiYoYz1iLm1lbW9pemVkUHJvcHMpO2Vsc2UgaWYobnVsbD09PWN8fGIubWVtb2l6ZWRQcm9wcz09PWMpe2I9cShhLGIpO2JyZWFrIGF9ZihhLGIsYyk7Yi5tZW1vaXplZFByb3BzPWM7Yj1iLmNoaWxkfXJldHVybiBiO2RlZmF1bHQ6RShcIjE1NlwiKX19LGJlZ2luRmFpbGVkV29yazpmdW5jdGlvbihhLGIsXG5jKXtzd2l0Y2goYi50YWcpe2Nhc2UgMjpxZShiKTticmVhaztjYXNlIDM6ayhiKTticmVhaztkZWZhdWx0OkUoXCIxNTdcIil9Yi5lZmZlY3RUYWd8PTY0O251bGw9PT1hP2IuY2hpbGQ9bnVsbDpiLmNoaWxkIT09YS5jaGlsZCYmKGIuY2hpbGQ9YS5jaGlsZCk7aWYoMD09PWIuZXhwaXJhdGlvblRpbWV8fGIuZXhwaXJhdGlvblRpbWU+YylyZXR1cm4gdihhLGIpO2IuZmlyc3RFZmZlY3Q9bnVsbDtiLmxhc3RFZmZlY3Q9bnVsbDtiLmNoaWxkPW51bGw9PT1hP2NmKGIsbnVsbCxudWxsLGMpOmJmKGIsYS5jaGlsZCxudWxsLGMpOzI9PT1iLnRhZyYmKGE9Yi5zdGF0ZU5vZGUsYi5tZW1vaXplZFByb3BzPWEucHJvcHMsYi5tZW1vaXplZFN0YXRlPWEuc3RhdGUpO3JldHVybiBiLmNoaWxkfX19XG5mdW5jdGlvbiBlZihhLGIsYyl7ZnVuY3Rpb24gZChhKXthLmVmZmVjdFRhZ3w9NH12YXIgZT1hLmNyZWF0ZUluc3RhbmNlLGY9YS5jcmVhdGVUZXh0SW5zdGFuY2UsZz1hLmFwcGVuZEluaXRpYWxDaGlsZCxoPWEuZmluYWxpemVJbml0aWFsQ2hpbGRyZW4saz1hLnByZXBhcmVVcGRhdGUscT1hLnBlcnNpc3RlbmNlLHY9Yi5nZXRSb290SG9zdENvbnRhaW5lcix5PWIucG9wSG9zdENvbnRleHQsdT1iLmdldEhvc3RDb250ZXh0LHo9Yi5wb3BIb3N0Q29udGFpbmVyLEc9Yy5wcmVwYXJlVG9IeWRyYXRlSG9zdEluc3RhbmNlLEk9Yy5wcmVwYXJlVG9IeWRyYXRlSG9zdFRleHRJbnN0YW5jZSxMPWMucG9wSHlkcmF0aW9uU3RhdGUsTj12b2lkIDAsSj12b2lkIDAsdz12b2lkIDA7YS5tdXRhdGlvbj8oTj1mdW5jdGlvbigpe30sSj1mdW5jdGlvbihhLGIsYyl7KGIudXBkYXRlUXVldWU9YykmJmQoYil9LHc9ZnVuY3Rpb24oYSxiLGMsZSl7YyE9PWUmJmQoYil9KTpxP0UoXCIyMzVcIik6RShcIjIzNlwiKTtcbnJldHVybntjb21wbGV0ZVdvcms6ZnVuY3Rpb24oYSxiLGMpe3ZhciBtPWIucGVuZGluZ1Byb3BzO2lmKG51bGw9PT1tKW09Yi5tZW1vaXplZFByb3BzO2Vsc2UgaWYoMjE0NzQ4MzY0NyE9PWIuZXhwaXJhdGlvblRpbWV8fDIxNDc0ODM2NDc9PT1jKWIucGVuZGluZ1Byb3BzPW51bGw7c3dpdGNoKGIudGFnKXtjYXNlIDE6cmV0dXJuIG51bGw7Y2FzZSAyOnJldHVybiBuZShiKSxudWxsO2Nhc2UgMzp6KGIpO1YoWCxiKTtWKGllLGIpO209Yi5zdGF0ZU5vZGU7bS5wZW5kaW5nQ29udGV4dCYmKG0uY29udGV4dD1tLnBlbmRpbmdDb250ZXh0LG0ucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKUwoYiksYi5lZmZlY3RUYWcmPS0zO04oYik7cmV0dXJuIG51bGw7Y2FzZSA1OnkoYik7Yz12KCk7dmFyIEE9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSl7dmFyIHA9YS5tZW1vaXplZFByb3BzLHE9Yi5zdGF0ZU5vZGUseD11KCk7cT1cbmsocSxBLHAsbSxjLHgpO0ooYSxiLHEsQSxwLG0sYyk7YS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfWVsc2V7aWYoIW0pcmV0dXJuIG51bGw9PT1iLnN0YXRlTm9kZT9FKFwiMTY2XCIpOnZvaWQgMCxudWxsO2E9dSgpO2lmKEwoYikpRyhiLGMsYSkmJmQoYik7ZWxzZXthPWUoQSxtLGMsYSxiKTthOmZvcihwPWIuY2hpbGQ7bnVsbCE9PXA7KXtpZig1PT09cC50YWd8fDY9PT1wLnRhZylnKGEscC5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PXAudGFnJiZudWxsIT09cC5jaGlsZCl7cC5jaGlsZFtcInJldHVyblwiXT1wO3A9cC5jaGlsZDtjb250aW51ZX1pZihwPT09YilicmVhaztmb3IoO251bGw9PT1wLnNpYmxpbmc7KXtpZihudWxsPT09cFtcInJldHVyblwiXXx8cFtcInJldHVyblwiXT09PWIpYnJlYWsgYTtwPXBbXCJyZXR1cm5cIl19cC5zaWJsaW5nW1wicmV0dXJuXCJdPXBbXCJyZXR1cm5cIl07cD1wLnNpYmxpbmd9aChhLEEsbSxjKSYmZChiKTtiLnN0YXRlTm9kZT1hfW51bGwhPT1iLnJlZiYmXG4oYi5lZmZlY3RUYWd8PTEyOCl9cmV0dXJuIG51bGw7Y2FzZSA2OmlmKGEmJm51bGwhPWIuc3RhdGVOb2RlKXcoYSxiLGEubWVtb2l6ZWRQcm9wcyxtKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgbSlyZXR1cm4gbnVsbD09PWIuc3RhdGVOb2RlP0UoXCIxNjZcIik6dm9pZCAwLG51bGw7YT12KCk7Yz11KCk7TChiKT9JKGIpJiZkKGIpOmIuc3RhdGVOb2RlPWYobSxhLGMsYil9cmV0dXJuIG51bGw7Y2FzZSA3OihtPWIubWVtb2l6ZWRQcm9wcyk/dm9pZCAwOkUoXCIxNjVcIik7Yi50YWc9ODtBPVtdO2E6Zm9yKChwPWIuc3RhdGVOb2RlKSYmKHBbXCJyZXR1cm5cIl09Yik7bnVsbCE9PXA7KXtpZig1PT09cC50YWd8fDY9PT1wLnRhZ3x8ND09PXAudGFnKUUoXCIyNDdcIik7ZWxzZSBpZig5PT09cC50YWcpQS5wdXNoKHAudHlwZSk7ZWxzZSBpZihudWxsIT09cC5jaGlsZCl7cC5jaGlsZFtcInJldHVyblwiXT1wO3A9cC5jaGlsZDtjb250aW51ZX1mb3IoO251bGw9PT1wLnNpYmxpbmc7KXtpZihudWxsPT09XG5wW1wicmV0dXJuXCJdfHxwW1wicmV0dXJuXCJdPT09YilicmVhayBhO3A9cFtcInJldHVyblwiXX1wLnNpYmxpbmdbXCJyZXR1cm5cIl09cFtcInJldHVyblwiXTtwPXAuc2libGluZ31wPW0uaGFuZGxlcjttPXAobS5wcm9wcyxBKTtiLmNoaWxkPWJmKGIsbnVsbCE9PWE/YS5jaGlsZDpudWxsLG0sYyk7cmV0dXJuIGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBiLnRhZz03LG51bGw7Y2FzZSA5OnJldHVybiBudWxsO2Nhc2UgMTA6cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiB6KGIpLE4oYiksbnVsbDtjYXNlIDA6RShcIjE2N1wiKTtkZWZhdWx0OkUoXCIxNTZcIil9fX19XG5mdW5jdGlvbiBmZihhLGIpe2Z1bmN0aW9uIGMoYSl7dmFyIGM9YS5yZWY7aWYobnVsbCE9PWMpdHJ5e2MobnVsbCl9Y2F0Y2goQSl7YihhLEEpfX1mdW5jdGlvbiBkKGEpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBFZSYmRWUoYSk7c3dpdGNoKGEudGFnKXtjYXNlIDI6YyhhKTt2YXIgZD1hLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7ZC5wcm9wcz1hLm1lbW9pemVkUHJvcHMsZC5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsZC5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKEEpe2IoYSxBKX1icmVhaztjYXNlIDU6YyhhKTticmVhaztjYXNlIDc6ZShhLnN0YXRlTm9kZSk7YnJlYWs7Y2FzZSA0OmsmJmcoYSl9fWZ1bmN0aW9uIGUoYSl7Zm9yKHZhciBiPWE7OylpZihkKGIpLG51bGw9PT1iLmNoaWxkfHxrJiY0PT09Yi50YWcpe2lmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iW1wicmV0dXJuXCJdfHxcbmJbXCJyZXR1cm5cIl09PT1hKXJldHVybjtiPWJbXCJyZXR1cm5cIl19Yi5zaWJsaW5nW1wicmV0dXJuXCJdPWJbXCJyZXR1cm5cIl07Yj1iLnNpYmxpbmd9ZWxzZSBiLmNoaWxkW1wicmV0dXJuXCJdPWIsYj1iLmNoaWxkfWZ1bmN0aW9uIGYoYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9ZnVuY3Rpb24gZyhhKXtmb3IodmFyIGI9YSxjPSExLGY9dm9pZCAwLGc9dm9pZCAwOzspe2lmKCFjKXtjPWJbXCJyZXR1cm5cIl07YTpmb3IoOzspe251bGw9PT1jP0UoXCIxNjBcIik6dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmY9Yy5zdGF0ZU5vZGU7Zz0hMTticmVhayBhO2Nhc2UgMzpmPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhO2Nhc2UgNDpmPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhfWM9Y1tcInJldHVyblwiXX1jPSEwfWlmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKWUoYiksZz9KKGYsYi5zdGF0ZU5vZGUpOk4oZixiLnN0YXRlTm9kZSk7XG5lbHNlIGlmKDQ9PT1iLnRhZz9mPWIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86ZChiKSxudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZFtcInJldHVyblwiXT1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09YltcInJldHVyblwiXXx8YltcInJldHVyblwiXT09PWEpcmV0dXJuO2I9YltcInJldHVyblwiXTs0PT09Yi50YWcmJihjPSExKX1iLnNpYmxpbmdbXCJyZXR1cm5cIl09YltcInJldHVyblwiXTtiPWIuc2libGluZ319dmFyIGg9YS5nZXRQdWJsaWNJbnN0YW5jZSxrPWEubXV0YXRpb247YT1hLnBlcnNpc3RlbmNlO2t8fChhP0UoXCIyMzVcIik6RShcIjIzNlwiKSk7dmFyIHE9ay5jb21taXRNb3VudCx2PWsuY29tbWl0VXBkYXRlLHk9ay5yZXNldFRleHRDb250ZW50LHU9ay5jb21taXRUZXh0VXBkYXRlLHo9ay5hcHBlbmRDaGlsZCxHPWsuYXBwZW5kQ2hpbGRUb0NvbnRhaW5lcixJPWsuaW5zZXJ0QmVmb3JlLEw9ay5pbnNlcnRJbkNvbnRhaW5lckJlZm9yZSxcbk49ay5yZW1vdmVDaGlsZCxKPWsucmVtb3ZlQ2hpbGRGcm9tQ29udGFpbmVyO3JldHVybntjb21taXRSZXNldFRleHRDb250ZW50OmZ1bmN0aW9uKGEpe3koYS5zdGF0ZU5vZGUpfSxjb21taXRQbGFjZW1lbnQ6ZnVuY3Rpb24oYSl7YTp7Zm9yKHZhciBiPWFbXCJyZXR1cm5cIl07bnVsbCE9PWI7KXtpZihmKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iW1wicmV0dXJuXCJdfUUoXCIxNjBcIik7Yz12b2lkIDB9dmFyIGQ9Yj12b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6Yj1jLnN0YXRlTm9kZTtkPSExO2JyZWFrO2Nhc2UgMzpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDpFKFwiMTYxXCIpfWMuZWZmZWN0VGFnJjE2JiYoeShiKSxjLmVmZmVjdFRhZyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Y1tcInJldHVyblwiXXx8ZihjW1wicmV0dXJuXCJdKSl7Yz1cbm51bGw7YnJlYWsgYX1jPWNbXCJyZXR1cm5cIl19Yy5zaWJsaW5nW1wicmV0dXJuXCJdPWNbXCJyZXR1cm5cIl07Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmMiljb250aW51ZSBiO2lmKG51bGw9PT1jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGRbXCJyZXR1cm5cIl09YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1mb3IodmFyIGU9YTs7KXtpZig1PT09ZS50YWd8fDY9PT1lLnRhZyljP2Q/TChiLGUuc3RhdGVOb2RlLGMpOkkoYixlLnN0YXRlTm9kZSxjKTpkP0coYixlLnN0YXRlTm9kZSk6eihiLGUuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1lLnRhZyYmbnVsbCE9PWUuY2hpbGQpe2UuY2hpbGRbXCJyZXR1cm5cIl09ZTtlPWUuY2hpbGQ7Y29udGludWV9aWYoZT09PWEpYnJlYWs7Zm9yKDtudWxsPT09ZS5zaWJsaW5nOyl7aWYobnVsbD09PWVbXCJyZXR1cm5cIl18fGVbXCJyZXR1cm5cIl09PT1cbmEpcmV0dXJuO2U9ZVtcInJldHVyblwiXX1lLnNpYmxpbmdbXCJyZXR1cm5cIl09ZVtcInJldHVyblwiXTtlPWUuc2libGluZ319LGNvbW1pdERlbGV0aW9uOmZ1bmN0aW9uKGEpe2coYSk7YVtcInJldHVyblwiXT1udWxsO2EuY2hpbGQ9bnVsbDthLmFsdGVybmF0ZSYmKGEuYWx0ZXJuYXRlLmNoaWxkPW51bGwsYS5hbHRlcm5hdGVbXCJyZXR1cm5cIl09bnVsbCl9LGNvbW1pdFdvcms6ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMjpicmVhaztjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzO2E9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7dmFyIGU9Yi50eXBlLGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7bnVsbCE9PWYmJnYoYyxmLGUsYSxkLGIpfWJyZWFrO2Nhc2UgNjpudWxsPT09Yi5zdGF0ZU5vZGU/RShcIjE2MlwiKTp2b2lkIDA7Yz1iLm1lbW9pemVkUHJvcHM7dShiLnN0YXRlTm9kZSxudWxsIT09YT9hLm1lbW9pemVkUHJvcHM6XG5jLGMpO2JyZWFrO2Nhc2UgMzpicmVhaztkZWZhdWx0OkUoXCIxNjNcIil9fSxjb21taXRMaWZlQ3ljbGVzOmZ1bmN0aW9uKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDI6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYoYi5lZmZlY3RUYWcmNClpZihudWxsPT09YSljLnByb3BzPWIubWVtb2l6ZWRQcm9wcyxjLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZSxjLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgZD1hLm1lbW9pemVkUHJvcHM7YT1hLm1lbW9pemVkU3RhdGU7Yy5wcm9wcz1iLm1lbW9pemVkUHJvcHM7Yy5zdGF0ZT1iLm1lbW9pemVkU3RhdGU7Yy5jb21wb25lbnREaWRVcGRhdGUoZCxhKX1iPWIudXBkYXRlUXVldWU7bnVsbCE9PWImJktlKGIsYyk7YnJlYWs7Y2FzZSAzOmM9Yi51cGRhdGVRdWV1ZTtudWxsIT09YyYmS2UoYyxudWxsIT09Yi5jaGlsZD9iLmNoaWxkLnN0YXRlTm9kZTpudWxsKTticmVhaztjYXNlIDU6Yz1iLnN0YXRlTm9kZTtudWxsPT09YSYmYi5lZmZlY3RUYWcmNCYmcShjLFxuYi50eXBlLGIubWVtb2l6ZWRQcm9wcyxiKTticmVhaztjYXNlIDY6YnJlYWs7Y2FzZSA0OmJyZWFrO2RlZmF1bHQ6RShcIjE2M1wiKX19LGNvbW1pdEF0dGFjaFJlZjpmdW5jdGlvbihhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09Yil7dmFyIGM9YS5zdGF0ZU5vZGU7c3dpdGNoKGEudGFnKXtjYXNlIDU6YihoKGMpKTticmVhaztkZWZhdWx0OmIoYyl9fX0sY29tbWl0RGV0YWNoUmVmOmZ1bmN0aW9uKGEpe2E9YS5yZWY7bnVsbCE9PWEmJmEobnVsbCl9fX12YXIgZ2Y9e307XG5mdW5jdGlvbiBoZihhKXtmdW5jdGlvbiBiKGEpe2E9PT1nZj9FKFwiMTc0XCIpOnZvaWQgMDtyZXR1cm4gYX12YXIgYz1hLmdldENoaWxkSG9zdENvbnRleHQsZD1hLmdldFJvb3RIb3N0Q29udGV4dCxlPXtjdXJyZW50OmdmfSxmPXtjdXJyZW50OmdmfSxnPXtjdXJyZW50OmdmfTtyZXR1cm57Z2V0SG9zdENvbnRleHQ6ZnVuY3Rpb24oKXtyZXR1cm4gYihlLmN1cnJlbnQpfSxnZXRSb290SG9zdENvbnRhaW5lcjpmdW5jdGlvbigpe3JldHVybiBiKGcuY3VycmVudCl9LHBvcEhvc3RDb250YWluZXI6ZnVuY3Rpb24oYSl7VihlLGEpO1YoZixhKTtWKGcsYSl9LHBvcEhvc3RDb250ZXh0OmZ1bmN0aW9uKGEpe2YuY3VycmVudD09PWEmJihWKGUsYSksVihmLGEpKX0scHVzaEhvc3RDb250YWluZXI6ZnVuY3Rpb24oYSxiKXtXKGcsYixhKTtiPWQoYik7VyhmLGEsYSk7VyhlLGIsYSl9LHB1c2hIb3N0Q29udGV4dDpmdW5jdGlvbihhKXt2YXIgZD1iKGcuY3VycmVudCksaD1iKGUuY3VycmVudCk7XG5kPWMoaCxhLnR5cGUsZCk7aCE9PWQmJihXKGYsYSxhKSxXKGUsZCxhKSl9LHJlc2V0SG9zdENvbnRhaW5lcjpmdW5jdGlvbigpe2UuY3VycmVudD1nZjtnLmN1cnJlbnQ9Z2Z9fX1cbmZ1bmN0aW9uIGpmKGEpe2Z1bmN0aW9uIGIoYSxiKXt2YXIgYz1uZXcgWSg1LG51bGwsMCk7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Y1tcInJldHVyblwiXT1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31mdW5jdGlvbiBjKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6cmV0dXJuIGI9ZihiLGEudHlwZSxhLnBlbmRpbmdQcm9wcyksbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1nKGIsYS5wZW5kaW5nUHJvcHMpLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBkKGEpe2ZvcihhPWFbXCJyZXR1cm5cIl07bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnOylhPWFbXCJyZXR1cm5cIl07eT1hfXZhciBlPWEuc2hvdWxkU2V0VGV4dENvbnRlbnQ7XG5hPWEuaHlkcmF0aW9uO2lmKCFhKXJldHVybntlbnRlckh5ZHJhdGlvblN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuITF9LHJlc2V0SHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oKXt9LHRyeVRvQ2xhaW1OZXh0SHlkcmF0YWJsZUluc3RhbmNlOmZ1bmN0aW9uKCl7fSxwcmVwYXJlVG9IeWRyYXRlSG9zdEluc3RhbmNlOmZ1bmN0aW9uKCl7RShcIjE3NVwiKX0scHJlcGFyZVRvSHlkcmF0ZUhvc3RUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oKXtFKFwiMTc2XCIpfSxwb3BIeWRyYXRpb25TdGF0ZTpmdW5jdGlvbigpe3JldHVybiExfX07dmFyIGY9YS5jYW5IeWRyYXRlSW5zdGFuY2UsZz1hLmNhbkh5ZHJhdGVUZXh0SW5zdGFuY2UsaD1hLmdldE5leHRIeWRyYXRhYmxlU2libGluZyxrPWEuZ2V0Rmlyc3RIeWRyYXRhYmxlQ2hpbGQscT1hLmh5ZHJhdGVJbnN0YW5jZSx2PWEuaHlkcmF0ZVRleHRJbnN0YW5jZSx5PW51bGwsdT1udWxsLHo9ITE7cmV0dXJue2VudGVySHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oYSl7dT1cbmsoYS5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7eT1hO3JldHVybiB6PSEwfSxyZXNldEh5ZHJhdGlvblN0YXRlOmZ1bmN0aW9uKCl7dT15PW51bGw7ej0hMX0sdHJ5VG9DbGFpbU5leHRIeWRyYXRhYmxlSW5zdGFuY2U6ZnVuY3Rpb24oYSl7aWYoeil7dmFyIGQ9dTtpZihkKXtpZighYyhhLGQpKXtkPWgoZCk7aWYoIWR8fCFjKGEsZCkpe2EuZWZmZWN0VGFnfD0yO3o9ITE7eT1hO3JldHVybn1iKHksdSl9eT1hO3U9ayhkKX1lbHNlIGEuZWZmZWN0VGFnfD0yLHo9ITEseT1hfX0scHJlcGFyZVRvSHlkcmF0ZUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhLGIsYyl7Yj1xKGEuc3RhdGVOb2RlLGEudHlwZSxhLm1lbW9pemVkUHJvcHMsYixjLGEpO2EudXBkYXRlUXVldWU9YjtyZXR1cm4gbnVsbCE9PWI/ITA6ITF9LHByZXBhcmVUb0h5ZHJhdGVIb3N0VGV4dEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiB2KGEuc3RhdGVOb2RlLGEubWVtb2l6ZWRQcm9wcyxhKX0scG9wSHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oYSl7aWYoYSE9PVxueSlyZXR1cm4hMTtpZigheilyZXR1cm4gZChhKSx6PSEwLCExO3ZhciBjPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YyYmXCJib2R5XCIhPT1jJiYhZShjLGEubWVtb2l6ZWRQcm9wcykpZm9yKGM9dTtjOyliKGEsYyksYz1oKGMpO2QoYSk7dT15P2goYS5zdGF0ZU5vZGUpOm51bGw7cmV0dXJuITB9fX1cbmZ1bmN0aW9uIGtmKGEpe2Z1bmN0aW9uIGIoYSl7UWI9amE9ITA7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5jdXJyZW50PT09YT9FKFwiMTc3XCIpOnZvaWQgMDtiLmlzUmVhZHlGb3JDb21taXQ9ITE7aWQuY3VycmVudD1udWxsO2lmKDE8YS5lZmZlY3RUYWcpaWYobnVsbCE9PWEubGFzdEVmZmVjdCl7YS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YTt2YXIgYz1hLmZpcnN0RWZmZWN0fWVsc2UgYz1hO2Vsc2UgYz1hLmZpcnN0RWZmZWN0O3lnKCk7Zm9yKHQ9YztudWxsIT09dDspe3ZhciBkPSExLGU9dm9pZCAwO3RyeXtmb3IoO251bGwhPT10Oyl7dmFyIGY9dC5lZmZlY3RUYWc7ZiYxNiYmemcodCk7aWYoZiYxMjgpe3ZhciBnPXQuYWx0ZXJuYXRlO251bGwhPT1nJiZBZyhnKX1zd2l0Y2goZiYtMjQyKXtjYXNlIDI6TmUodCk7dC5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjpOZSh0KTt0LmVmZmVjdFRhZyY9LTM7T2UodC5hbHRlcm5hdGUsdCk7YnJlYWs7Y2FzZSA0Ok9lKHQuYWx0ZXJuYXRlLFxudCk7YnJlYWs7Y2FzZSA4OlNjPSEwLEJnKHQpLFNjPSExfXQ9dC5uZXh0RWZmZWN0fX1jYXRjaChUYyl7ZD0hMCxlPVRjfWQmJihudWxsPT09dD9FKFwiMTc4XCIpOnZvaWQgMCxoKHQsZSksbnVsbCE9PXQmJih0PXQubmV4dEVmZmVjdCkpfUNnKCk7Yi5jdXJyZW50PWE7Zm9yKHQ9YztudWxsIT09dDspe2M9ITE7ZD12b2lkIDA7dHJ5e2Zvcig7bnVsbCE9PXQ7KXt2YXIgaz10LmVmZmVjdFRhZztrJjM2JiZEZyh0LmFsdGVybmF0ZSx0KTtrJjEyOCYmRWcodCk7aWYoayY2NClzd2l0Y2goZT10LGY9dm9pZCAwLG51bGwhPT1SJiYoZj1SLmdldChlKSxSW1wiZGVsZXRlXCJdKGUpLG51bGw9PWYmJm51bGwhPT1lLmFsdGVybmF0ZSYmKGU9ZS5hbHRlcm5hdGUsZj1SLmdldChlKSxSW1wiZGVsZXRlXCJdKGUpKSksbnVsbD09Zj9FKFwiMTg0XCIpOnZvaWQgMCxlLnRhZyl7Y2FzZSAyOmUuc3RhdGVOb2RlLmNvbXBvbmVudERpZENhdGNoKGYuZXJyb3Ise2NvbXBvbmVudFN0YWNrOmYuY29tcG9uZW50U3RhY2t9KTtcbmJyZWFrO2Nhc2UgMzpudWxsPT09Y2EmJihjYT1mLmVycm9yKTticmVhaztkZWZhdWx0OkUoXCIxNTdcIil9dmFyIFFjPXQubmV4dEVmZmVjdDt0Lm5leHRFZmZlY3Q9bnVsbDt0PVFjfX1jYXRjaChUYyl7Yz0hMCxkPVRjfWMmJihudWxsPT09dD9FKFwiMTc4XCIpOnZvaWQgMCxoKHQsZCksbnVsbCE9PXQmJih0PXQubmV4dEVmZmVjdCkpfWphPVFiPSExO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBEZSYmRGUoYS5zdGF0ZU5vZGUpO2hhJiYoaGEuZm9yRWFjaChHKSxoYT1udWxsKTtudWxsIT09Y2EmJihhPWNhLGNhPW51bGwsT2IoYSkpO2I9Yi5jdXJyZW50LmV4cGlyYXRpb25UaW1lOzA9PT1iJiYocWE9Uj1udWxsKTtyZXR1cm4gYn1mdW5jdGlvbiBjKGEpe2Zvcig7Oyl7dmFyIGI9RmcoYS5hbHRlcm5hdGUsYSxIKSxjPWFbXCJyZXR1cm5cIl0sZD1hLnNpYmxpbmc7dmFyIGU9YTtpZigyMTQ3NDgzNjQ3PT09SHx8MjE0NzQ4MzY0NyE9PWUuZXhwaXJhdGlvblRpbWUpe2lmKDIhPT1lLnRhZyYmMyE9PVxuZS50YWcpdmFyIGY9MDtlbHNlIGY9ZS51cGRhdGVRdWV1ZSxmPW51bGw9PT1mPzA6Zi5leHBpcmF0aW9uVGltZTtmb3IodmFyIGc9ZS5jaGlsZDtudWxsIT09ZzspMCE9PWcuZXhwaXJhdGlvblRpbWUmJigwPT09Znx8Zj5nLmV4cGlyYXRpb25UaW1lKSYmKGY9Zy5leHBpcmF0aW9uVGltZSksZz1nLnNpYmxpbmc7ZS5leHBpcmF0aW9uVGltZT1mfWlmKG51bGwhPT1iKXJldHVybiBiO251bGwhPT1jJiYobnVsbD09PWMuZmlyc3RFZmZlY3QmJihjLmZpcnN0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLG51bGwhPT1hLmxhc3RFZmZlY3QmJihudWxsIT09Yy5sYXN0RWZmZWN0JiYoYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YS5maXJzdEVmZmVjdCksYy5sYXN0RWZmZWN0PWEubGFzdEVmZmVjdCksMTxhLmVmZmVjdFRhZyYmKG51bGwhPT1jLmxhc3RFZmZlY3Q/Yy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YTpjLmZpcnN0RWZmZWN0PWEsYy5sYXN0RWZmZWN0PWEpKTtpZihudWxsIT09ZClyZXR1cm4gZDtcbmlmKG51bGwhPT1jKWE9YztlbHNle2Euc3RhdGVOb2RlLmlzUmVhZHlGb3JDb21taXQ9ITA7YnJlYWt9fXJldHVybiBudWxsfWZ1bmN0aW9uIGQoYSl7dmFyIGI9cmcoYS5hbHRlcm5hdGUsYSxIKTtudWxsPT09YiYmKGI9YyhhKSk7aWQuY3VycmVudD1udWxsO3JldHVybiBifWZ1bmN0aW9uIGUoYSl7dmFyIGI9R2coYS5hbHRlcm5hdGUsYSxIKTtudWxsPT09YiYmKGI9YyhhKSk7aWQuY3VycmVudD1udWxsO3JldHVybiBifWZ1bmN0aW9uIGYoYSl7aWYobnVsbCE9PVIpe2lmKCEoMD09PUh8fEg+YSkpaWYoSDw9VWMpZm9yKDtudWxsIT09RjspRj1rKEYpP2UoRik6ZChGKTtlbHNlIGZvcig7bnVsbCE9PUYmJiFBKCk7KUY9ayhGKT9lKEYpOmQoRil9ZWxzZSBpZighKDA9PT1IfHxIPmEpKWlmKEg8PVVjKWZvcig7bnVsbCE9PUY7KUY9ZChGKTtlbHNlIGZvcig7bnVsbCE9PUYmJiFBKCk7KUY9ZChGKX1mdW5jdGlvbiBnKGEsYil7amE/RShcIjI0M1wiKTp2b2lkIDA7amE9ITA7YS5pc1JlYWR5Rm9yQ29tbWl0PVxuITE7aWYoYSE9PXJhfHxiIT09SHx8bnVsbD09PUYpe2Zvcig7LTE8aGU7KWdlW2hlXT1udWxsLGhlLS07amU9RDtpZS5jdXJyZW50PUQ7WC5jdXJyZW50PSExO3goKTtyYT1hO0g9YjtGPXNlKHJhLmN1cnJlbnQsbnVsbCxiKX12YXIgYz0hMSxkPW51bGw7dHJ5e2YoYil9Y2F0Y2goUmMpe2M9ITAsZD1SY31mb3IoO2M7KXtpZihlYil7Y2E9ZDticmVha312YXIgZz1GO2lmKG51bGw9PT1nKWViPSEwO2Vsc2V7dmFyIGs9aChnLGQpO251bGw9PT1rP0UoXCIxODNcIik6dm9pZCAwO2lmKCFlYil7dHJ5e2M9aztkPWI7Zm9yKGs9YztudWxsIT09Zzspe3N3aXRjaChnLnRhZyl7Y2FzZSAyOm5lKGcpO2JyZWFrO2Nhc2UgNTpxZyhnKTticmVhaztjYXNlIDM6cChnKTticmVhaztjYXNlIDQ6cChnKX1pZihnPT09a3x8Zy5hbHRlcm5hdGU9PT1rKWJyZWFrO2c9Z1tcInJldHVyblwiXX1GPWUoYyk7ZihkKX1jYXRjaChSYyl7Yz0hMDtkPVJjO2NvbnRpbnVlfWJyZWFrfX19Yj1jYTtlYj1qYT0hMTtjYT1cbm51bGw7bnVsbCE9PWImJk9iKGIpO3JldHVybiBhLmlzUmVhZHlGb3JDb21taXQ/YS5jdXJyZW50LmFsdGVybmF0ZTpudWxsfWZ1bmN0aW9uIGgoYSxiKXt2YXIgYz1pZC5jdXJyZW50PW51bGwsZD0hMSxlPSExLGY9bnVsbDtpZigzPT09YS50YWcpYz1hLHEoYSkmJihlYj0hMCk7ZWxzZSBmb3IodmFyIGc9YVtcInJldHVyblwiXTtudWxsIT09ZyYmbnVsbD09PWM7KXsyPT09Zy50YWc/XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuc3RhdGVOb2RlLmNvbXBvbmVudERpZENhdGNoJiYoZD0hMCxmPWpkKGcpLGM9ZyxlPSEwKTozPT09Zy50YWcmJihjPWcpO2lmKHEoZykpe2lmKFNjfHxudWxsIT09aGEmJihoYS5oYXMoZyl8fG51bGwhPT1nLmFsdGVybmF0ZSYmaGEuaGFzKGcuYWx0ZXJuYXRlKSkpcmV0dXJuIG51bGw7Yz1udWxsO2U9ITF9Zz1nW1wicmV0dXJuXCJdfWlmKG51bGwhPT1jKXtudWxsPT09cWEmJihxYT1uZXcgU2V0KTtxYS5hZGQoYyk7dmFyIGg9XCJcIjtnPWE7ZG97YTpzd2l0Y2goZy50YWcpe2Nhc2UgMDpjYXNlIDE6Y2FzZSAyOmNhc2UgNTp2YXIgaz1cbmcuX2RlYnVnT3duZXIsUWM9Zy5fZGVidWdTb3VyY2U7dmFyIG09amQoZyk7dmFyIG49bnVsbDtrJiYobj1qZChrKSk7az1RYzttPVwiXFxuICAgIGluIFwiKyhtfHxcIlVua25vd25cIikrKGs/XCIgKGF0IFwiK2suZmlsZU5hbWUucmVwbGFjZSgvXi4qW1xcXFxcXC9dLyxcIlwiKStcIjpcIitrLmxpbmVOdW1iZXIrXCIpXCI6bj9cIiAoY3JlYXRlZCBieSBcIituK1wiKVwiOlwiXCIpO2JyZWFrIGE7ZGVmYXVsdDptPVwiXCJ9aCs9bTtnPWdbXCJyZXR1cm5cIl19d2hpbGUoZyk7Zz1oO2E9amQoYSk7bnVsbD09PVImJihSPW5ldyBNYXApO2I9e2NvbXBvbmVudE5hbWU6YSxjb21wb25lbnRTdGFjazpnLGVycm9yOmIsZXJyb3JCb3VuZGFyeTpkP2Muc3RhdGVOb2RlOm51bGwsZXJyb3JCb3VuZGFyeUZvdW5kOmQsZXJyb3JCb3VuZGFyeU5hbWU6Zix3aWxsUmV0cnk6ZX07Ui5zZXQoYyxiKTt0cnl7dmFyIHA9Yi5lcnJvcjtwJiZwLnN1cHByZXNzUmVhY3RFcnJvckxvZ2dpbmd8fGNvbnNvbGUuZXJyb3IocCl9Y2F0Y2goVmMpe1ZjJiZcblZjLnN1cHByZXNzUmVhY3RFcnJvckxvZ2dpbmd8fGNvbnNvbGUuZXJyb3IoVmMpfVFiPyhudWxsPT09aGEmJihoYT1uZXcgU2V0KSxoYS5hZGQoYykpOkcoYyk7cmV0dXJuIGN9bnVsbD09PWNhJiYoY2E9Yik7cmV0dXJuIG51bGx9ZnVuY3Rpb24gayhhKXtyZXR1cm4gbnVsbCE9PVImJihSLmhhcyhhKXx8bnVsbCE9PWEuYWx0ZXJuYXRlJiZSLmhhcyhhLmFsdGVybmF0ZSkpfWZ1bmN0aW9uIHEoYSl7cmV0dXJuIG51bGwhPT1xYSYmKHFhLmhhcyhhKXx8bnVsbCE9PWEuYWx0ZXJuYXRlJiZxYS5oYXMoYS5hbHRlcm5hdGUpKX1mdW5jdGlvbiB2KCl7cmV0dXJuIDIwKigoKEkoKSsxMDApLzIwfDApKzEpfWZ1bmN0aW9uIHkoYSl7cmV0dXJuIDAhPT1rYT9rYTpqYT9RYj8xOkg6IUhnfHxhLmludGVybmFsQ29udGV4dFRhZyYxP3YoKToxfWZ1bmN0aW9uIHUoYSxiKXtyZXR1cm4geihhLGIsITEpfWZ1bmN0aW9uIHooYSxiKXtmb3IoO251bGwhPT1hOyl7aWYoMD09PWEuZXhwaXJhdGlvblRpbWV8fFxuYS5leHBpcmF0aW9uVGltZT5iKWEuZXhwaXJhdGlvblRpbWU9YjtudWxsIT09YS5hbHRlcm5hdGUmJigwPT09YS5hbHRlcm5hdGUuZXhwaXJhdGlvblRpbWV8fGEuYWx0ZXJuYXRlLmV4cGlyYXRpb25UaW1lPmIpJiYoYS5hbHRlcm5hdGUuZXhwaXJhdGlvblRpbWU9Yik7aWYobnVsbD09PWFbXCJyZXR1cm5cIl0paWYoMz09PWEudGFnKXt2YXIgYz1hLnN0YXRlTm9kZTshamEmJmM9PT1yYSYmYjxIJiYoRj1yYT1udWxsLEg9MCk7dmFyIGQ9YyxlPWI7UmI+SWcmJkUoXCIxODVcIik7aWYobnVsbD09PWQubmV4dFNjaGVkdWxlZFJvb3QpZC5yZW1haW5pbmdFeHBpcmF0aW9uVGltZT1lLG51bGw9PT1PPyhzYT1PPWQsZC5uZXh0U2NoZWR1bGVkUm9vdD1kKTooTz1PLm5leHRTY2hlZHVsZWRSb290PWQsTy5uZXh0U2NoZWR1bGVkUm9vdD1zYSk7ZWxzZXt2YXIgZj1kLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lO2lmKDA9PT1mfHxlPGYpZC5yZW1haW5pbmdFeHBpcmF0aW9uVGltZT1lfUZhfHwobGE/XG5TYiYmKG1hPWQsbmE9MSxtKG1hLG5hKSk6MT09PWU/dygxLG51bGwpOkwoZSkpOyFqYSYmYz09PXJhJiZiPEgmJihGPXJhPW51bGwsSD0wKX1lbHNlIGJyZWFrO2E9YVtcInJldHVyblwiXX19ZnVuY3Rpb24gRyhhKXt6KGEsMSwhMCl9ZnVuY3Rpb24gSSgpe3JldHVybiBVYz0oKFdjKCktUGUpLzEwfDApKzJ9ZnVuY3Rpb24gTChhKXtpZigwIT09VGIpe2lmKGE+VGIpcmV0dXJuO0pnKFhjKX12YXIgYj1XYygpLVBlO1RiPWE7WGM9S2coSix7dGltZW91dDoxMCooYS0yKS1ifSl9ZnVuY3Rpb24gTigpe3ZhciBhPTAsYj1udWxsO2lmKG51bGwhPT1PKWZvcih2YXIgYz1PLGQ9c2E7bnVsbCE9PWQ7KXt2YXIgZT1kLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lO2lmKDA9PT1lKXtudWxsPT09Y3x8bnVsbD09PU8/RShcIjI0NFwiKTp2b2lkIDA7aWYoZD09PWQubmV4dFNjaGVkdWxlZFJvb3Qpe3NhPU89ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgaWYoZD09PXNhKXNhPWU9ZC5uZXh0U2NoZWR1bGVkUm9vdCxcbk8ubmV4dFNjaGVkdWxlZFJvb3Q9ZSxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZWxzZSBpZihkPT09Tyl7Tz1jO08ubmV4dFNjaGVkdWxlZFJvb3Q9c2E7ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgYy5uZXh0U2NoZWR1bGVkUm9vdD1kLm5leHRTY2hlZHVsZWRSb290LGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtkPWMubmV4dFNjaGVkdWxlZFJvb3R9ZWxzZXtpZigwPT09YXx8ZTxhKWE9ZSxiPWQ7aWYoZD09PU8pYnJlYWs7Yz1kO2Q9ZC5uZXh0U2NoZWR1bGVkUm9vdH19Yz1tYTtudWxsIT09YyYmYz09PWI/UmIrKzpSYj0wO21hPWI7bmE9YX1mdW5jdGlvbiBKKGEpe3coMCxhKX1mdW5jdGlvbiB3KGEsYil7ZmI9Yjtmb3IoTigpO251bGwhPT1tYSYmMCE9PW5hJiYoMD09PWF8fG5hPD1hKSYmIVljOyltKG1hLG5hKSxOKCk7bnVsbCE9PWZiJiYoVGI9MCxYYz0tMSk7MCE9PW5hJiZMKG5hKTtmYj1udWxsO1ljPSExO1JiPTA7aWYoVWIpdGhyb3cgYT1aYyxaYz1cbm51bGwsVWI9ITEsYTt9ZnVuY3Rpb24gbShhLGMpe0ZhP0UoXCIyNDVcIik6dm9pZCAwO0ZhPSEwO2lmKGM8PUkoKSl7dmFyIGQ9YS5maW5pc2hlZFdvcms7bnVsbCE9PWQ/KGEuZmluaXNoZWRXb3JrPW51bGwsYS5yZW1haW5pbmdFeHBpcmF0aW9uVGltZT1iKGQpKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWcoYSxjKSxudWxsIT09ZCYmKGEucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9YihkKSkpfWVsc2UgZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZD8oYS5maW5pc2hlZFdvcms9bnVsbCxhLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWIoZCkpOihhLmZpbmlzaGVkV29yaz1udWxsLGQ9ZyhhLGMpLG51bGwhPT1kJiYoQSgpP2EuZmluaXNoZWRXb3JrPWQ6YS5yZW1haW5pbmdFeHBpcmF0aW9uVGltZT1iKGQpKSk7RmE9ITF9ZnVuY3Rpb24gQSgpe3JldHVybiBudWxsPT09ZmJ8fGZiLnRpbWVSZW1haW5pbmcoKT5MZz8hMTpZYz0hMH1mdW5jdGlvbiBPYihhKXtudWxsPT09bWE/RShcIjI0NlwiKTpcbnZvaWQgMDttYS5yZW1haW5pbmdFeHBpcmF0aW9uVGltZT0wO1VifHwoVWI9ITAsWmM9YSl9dmFyIHI9aGYoYSksbj1qZihhKSxwPXIucG9wSG9zdENvbnRhaW5lcixxZz1yLnBvcEhvc3RDb250ZXh0LHg9ci5yZXNldEhvc3RDb250YWluZXIsTWU9ZGYoYSxyLG4sdSx5KSxyZz1NZS5iZWdpbldvcmssR2c9TWUuYmVnaW5GYWlsZWRXb3JrLEZnPWVmKGEscixuKS5jb21wbGV0ZVdvcms7cj1mZihhLGgpO3ZhciB6Zz1yLmNvbW1pdFJlc2V0VGV4dENvbnRlbnQsTmU9ci5jb21taXRQbGFjZW1lbnQsQmc9ci5jb21taXREZWxldGlvbixPZT1yLmNvbW1pdFdvcmssRGc9ci5jb21taXRMaWZlQ3ljbGVzLEVnPXIuY29tbWl0QXR0YWNoUmVmLEFnPXIuY29tbWl0RGV0YWNoUmVmLFdjPWEubm93LEtnPWEuc2NoZWR1bGVEZWZlcnJlZENhbGxiYWNrLEpnPWEuY2FuY2VsRGVmZXJyZWRDYWxsYmFjayxIZz1hLnVzZVN5bmNTY2hlZHVsaW5nLHlnPWEucHJlcGFyZUZvckNvbW1pdCxDZz1hLnJlc2V0QWZ0ZXJDb21taXQsXG5QZT1XYygpLFVjPTIsa2E9MCxqYT0hMSxGPW51bGwscmE9bnVsbCxIPTAsdD1udWxsLFI9bnVsbCxxYT1udWxsLGhhPW51bGwsY2E9bnVsbCxlYj0hMSxRYj0hMSxTYz0hMSxzYT1udWxsLE89bnVsbCxUYj0wLFhjPS0xLEZhPSExLG1hPW51bGwsbmE9MCxZYz0hMSxVYj0hMSxaYz1udWxsLGZiPW51bGwsbGE9ITEsU2I9ITEsSWc9MUUzLFJiPTAsTGc9MTtyZXR1cm57Y29tcHV0ZUFzeW5jRXhwaXJhdGlvbjp2LGNvbXB1dGVFeHBpcmF0aW9uRm9yRmliZXI6eSxzY2hlZHVsZVdvcms6dSxiYXRjaGVkVXBkYXRlczpmdW5jdGlvbihhLGIpe3ZhciBjPWxhO2xhPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5eyhsYT1jKXx8RmF8fHcoMSxudWxsKX19LHVuYmF0Y2hlZFVwZGF0ZXM6ZnVuY3Rpb24oYSl7aWYobGEmJiFTYil7U2I9ITA7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtTYj0hMX19cmV0dXJuIGEoKX0sZmx1c2hTeW5jOmZ1bmN0aW9uKGEpe3ZhciBiPWxhO2xhPSEwO3RyeXthOnt2YXIgYz1cbmthO2thPTE7dHJ5e3ZhciBkPWEoKTticmVhayBhfWZpbmFsbHl7a2E9Y31kPXZvaWQgMH1yZXR1cm4gZH1maW5hbGx5e2xhPWIsRmE/RShcIjE4N1wiKTp2b2lkIDAsdygxLG51bGwpfX0sZGVmZXJyZWRVcGRhdGVzOmZ1bmN0aW9uKGEpe3ZhciBiPWthO2thPXYoKTt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e2thPWJ9fX19XG5mdW5jdGlvbiBsZihhKXtmdW5jdGlvbiBiKGEpe2E9b2QoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9dmFyIGM9YS5nZXRQdWJsaWNJbnN0YW5jZTthPWtmKGEpO3ZhciBkPWEuY29tcHV0ZUFzeW5jRXhwaXJhdGlvbixlPWEuY29tcHV0ZUV4cGlyYXRpb25Gb3JGaWJlcixmPWEuc2NoZWR1bGVXb3JrO3JldHVybntjcmVhdGVDb250YWluZXI6ZnVuY3Rpb24oYSxiKXt2YXIgYz1uZXcgWSgzLG51bGwsMCk7YT17Y3VycmVudDpjLGNvbnRhaW5lckluZm86YSxwZW5kaW5nQ2hpbGRyZW46bnVsbCxyZW1haW5pbmdFeHBpcmF0aW9uVGltZTowLGlzUmVhZHlGb3JDb21taXQ6ITEsZmluaXNoZWRXb3JrOm51bGwsY29udGV4dDpudWxsLHBlbmRpbmdDb250ZXh0Om51bGwsaHlkcmF0ZTpiLG5leHRTY2hlZHVsZWRSb290Om51bGx9O3JldHVybiBjLnN0YXRlTm9kZT1hfSx1cGRhdGVDb250YWluZXI6ZnVuY3Rpb24oYSxiLGMscSl7dmFyIGc9Yi5jdXJyZW50O2lmKGMpe2M9XG5jLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGg7Yjp7Mj09PWtkKGMpJiYyPT09Yy50YWc/dm9pZCAwOkUoXCIxNzBcIik7Zm9yKGg9YzszIT09aC50YWc7KXtpZihsZShoKSl7aD1oLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifShoPWhbXCJyZXR1cm5cIl0pP3ZvaWQgMDpFKFwiMTcxXCIpfWg9aC5zdGF0ZU5vZGUuY29udGV4dH1jPWxlKGMpP3BlKGMsaCk6aH1lbHNlIGM9RDtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPXE7Yj12b2lkIDA9PT1iP251bGw6YjtxPW51bGwhPWEmJm51bGwhPWEudHlwZSYmbnVsbCE9YS50eXBlLnByb3RvdHlwZSYmITA9PT1hLnR5cGUucHJvdG90eXBlLnVuc3RhYmxlX2lzQXN5bmNSZWFjdENvbXBvbmVudD9kKCk6ZShnKTtIZShnLHtleHBpcmF0aW9uVGltZTpxLHBhcnRpYWxTdGF0ZTp7ZWxlbWVudDphfSxjYWxsYmFjazpiLGlzUmVwbGFjZTohMSxpc0ZvcmNlZDohMSxcbm5leHRDYWxsYmFjazpudWxsLG5leHQ6bnVsbH0pO2YoZyxxKX0sYmF0Y2hlZFVwZGF0ZXM6YS5iYXRjaGVkVXBkYXRlcyx1bmJhdGNoZWRVcGRhdGVzOmEudW5iYXRjaGVkVXBkYXRlcyxkZWZlcnJlZFVwZGF0ZXM6YS5kZWZlcnJlZFVwZGF0ZXMsZmx1c2hTeW5jOmEuZmx1c2hTeW5jLGdldFB1YmxpY1Jvb3RJbnN0YW5jZTpmdW5jdGlvbihhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYyhhLmNoaWxkLnN0YXRlTm9kZSk7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fSxmaW5kSG9zdEluc3RhbmNlOmIsZmluZEhvc3RJbnN0YW5jZVdpdGhOb1BvcnRhbHM6ZnVuY3Rpb24oYSl7YT1wZChhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0saW5qZWN0SW50b0RldlRvb2xzOmZ1bmN0aW9uKGEpe3ZhciBjPWEuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U7cmV0dXJuIENlKEIoe30sXG5hLHtmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXtyZXR1cm4gYihhKX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGM/YyhhKTpudWxsfX0pKX19fXZhciBtZj1PYmplY3QuZnJlZXplKHtkZWZhdWx0OmxmfSksbmY9bWYmJmxmfHxtZixvZj1uZltcImRlZmF1bHRcIl0/bmZbXCJkZWZhdWx0XCJdOm5mO2Z1bmN0aW9uIHBmKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6VWUsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319dmFyIHFmPVwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cscmY9dm9pZCAwO3JmPXFmP2Z1bmN0aW9uKCl7cmV0dXJuIHBlcmZvcm1hbmNlLm5vdygpfTpmdW5jdGlvbigpe3JldHVybiBEYXRlLm5vdygpfTtcbnZhciBzZj12b2lkIDAsdGY9dm9pZCAwO1xuaWYobC5jYW5Vc2VET00paWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHJlcXVlc3RJZGxlQ2FsbGJhY2t8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjYW5jZWxJZGxlQ2FsbGJhY2spe3ZhciB1Zj1udWxsLHZmPSExLHdmPS0xLHhmPSExLHlmPTAsemY9MzMsQWY9MzMsQmY7QmY9cWY/e2RpZFRpbWVvdXQ6ITEsdGltZVJlbWFpbmluZzpmdW5jdGlvbigpe3ZhciBhPXlmLXBlcmZvcm1hbmNlLm5vdygpO3JldHVybiAwPGE/YTowfX06e2RpZFRpbWVvdXQ6ITEsdGltZVJlbWFpbmluZzpmdW5jdGlvbigpe3ZhciBhPXlmLURhdGUubm93KCk7cmV0dXJuIDA8YT9hOjB9fTt2YXIgQ2Y9XCJfX3JlYWN0SWRsZUNhbGxiYWNrJFwiK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLGZ1bmN0aW9uKGEpe2lmKGEuc291cmNlPT09d2luZG93JiZhLmRhdGE9PT1DZil7dmY9ITE7YT1yZigpO2lmKDA+PXlmLWEpaWYoLTEhPT13ZiYmd2Y8PVxuYSlCZi5kaWRUaW1lb3V0PSEwO2Vsc2V7eGZ8fCh4Zj0hMCxyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoRGYpKTtyZXR1cm59ZWxzZSBCZi5kaWRUaW1lb3V0PSExO3dmPS0xO2E9dWY7dWY9bnVsbDtudWxsIT09YSYmYShCZil9fSwhMSk7dmFyIERmPWZ1bmN0aW9uKGEpe3hmPSExO3ZhciBiPWEteWYrQWY7YjxBZiYmemY8QWY/KDg+YiYmKGI9OCksQWY9Yjx6Zj96ZjpiKTp6Zj1iO3lmPWErQWY7dmZ8fCh2Zj0hMCx3aW5kb3cucG9zdE1lc3NhZ2UoQ2YsXCIqXCIpKX07c2Y9ZnVuY3Rpb24oYSxiKXt1Zj1hO251bGwhPWImJlwibnVtYmVyXCI9PT10eXBlb2YgYi50aW1lb3V0JiYod2Y9cmYoKStiLnRpbWVvdXQpO3hmfHwoeGY9ITAscmVxdWVzdEFuaW1hdGlvbkZyYW1lKERmKSk7cmV0dXJuIDB9O3RmPWZ1bmN0aW9uKCl7dWY9bnVsbDt2Zj0hMTt3Zj0tMX19ZWxzZSBzZj13aW5kb3cucmVxdWVzdElkbGVDYWxsYmFjayx0Zj13aW5kb3cuY2FuY2VsSWRsZUNhbGxiYWNrO2Vsc2Ugc2Y9ZnVuY3Rpb24oYSl7cmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKXthKHt0aW1lUmVtYWluaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIEluZmluaXR5fX0pfSl9LFxudGY9ZnVuY3Rpb24oYSl7Y2xlYXJUaW1lb3V0KGEpfTt2YXIgRWY9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLEZmPXt9LEdmPXt9O1xuZnVuY3Rpb24gSGYoYSl7aWYoR2YuaGFzT3duUHJvcGVydHkoYSkpcmV0dXJuITA7aWYoRmYuaGFzT3duUHJvcGVydHkoYSkpcmV0dXJuITE7aWYoRWYudGVzdChhKSlyZXR1cm4gR2ZbYV09ITA7RmZbYV09ITA7cmV0dXJuITF9XG5mdW5jdGlvbiBJZihhLGIsYyl7dmFyIGQ9d2EoYik7aWYoZCYmdmEoYixjKSl7dmFyIGU9ZC5tdXRhdGlvbk1ldGhvZDtlP2UoYSxjKTpudWxsPT1jfHxkLmhhc0Jvb2xlYW5WYWx1ZSYmIWN8fGQuaGFzTnVtZXJpY1ZhbHVlJiZpc05hTihjKXx8ZC5oYXNQb3NpdGl2ZU51bWVyaWNWYWx1ZSYmMT5jfHxkLmhhc092ZXJsb2FkZWRCb29sZWFuVmFsdWUmJiExPT09Yz9KZihhLGIpOmQubXVzdFVzZVByb3BlcnR5P2FbZC5wcm9wZXJ0eU5hbWVdPWM6KGI9ZC5hdHRyaWJ1dGVOYW1lLChlPWQuYXR0cmlidXRlTmFtZXNwYWNlKT9hLnNldEF0dHJpYnV0ZU5TKGUsYixcIlwiK2MpOmQuaGFzQm9vbGVhblZhbHVlfHxkLmhhc092ZXJsb2FkZWRCb29sZWFuVmFsdWUmJiEwPT09Yz9hLnNldEF0dHJpYnV0ZShiLFwiXCIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSl9ZWxzZSBLZihhLGIsdmEoYixjKT9jOm51bGwpfVxuZnVuY3Rpb24gS2YoYSxiLGMpe0hmKGIpJiYobnVsbD09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpfWZ1bmN0aW9uIEpmKGEsYil7dmFyIGM9d2EoYik7Yz8oYj1jLm11dGF0aW9uTWV0aG9kKT9iKGEsdm9pZCAwKTpjLm11c3RVc2VQcm9wZXJ0eT9hW2MucHJvcGVydHlOYW1lXT1jLmhhc0Jvb2xlYW5WYWx1ZT8hMTpcIlwiOmEucmVtb3ZlQXR0cmlidXRlKGMuYXR0cmlidXRlTmFtZSk6YS5yZW1vdmVBdHRyaWJ1dGUoYil9XG5mdW5jdGlvbiBMZihhLGIpe3ZhciBjPWIudmFsdWUsZD1iLmNoZWNrZWQ7cmV0dXJuIEIoe3R5cGU6dm9pZCAwLHN0ZXA6dm9pZCAwLG1pbjp2b2lkIDAsbWF4OnZvaWQgMH0sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUsY2hlY2tlZDpudWxsIT1kP2Q6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9ZnVuY3Rpb24gTWYoYSxiKXt2YXIgYz1iLmRlZmF1bHRWYWx1ZTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOm51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZCxpbml0aWFsVmFsdWU6bnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19XG5mdW5jdGlvbiBOZihhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJklmKGEsXCJjaGVja2VkXCIsYil9ZnVuY3Rpb24gT2YoYSxiKXtOZihhLGIpO3ZhciBjPWIudmFsdWU7aWYobnVsbCE9YylpZigwPT09YyYmXCJcIj09PWEudmFsdWUpYS52YWx1ZT1cIjBcIjtlbHNlIGlmKFwibnVtYmVyXCI9PT1iLnR5cGUpe2lmKGI9cGFyc2VGbG9hdChhLnZhbHVlKXx8MCxjIT1ifHxjPT1iJiZhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIG51bGw9PWIudmFsdWUmJm51bGwhPWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYi5kZWZhdWx0VmFsdWUmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2IuZGVmYXVsdFZhbHVlKSxudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBQZihhLGIpe3N3aXRjaChiLnR5cGUpe2Nhc2UgXCJzdWJtaXRcIjpjYXNlIFwicmVzZXRcIjpicmVhaztjYXNlIFwiY29sb3JcIjpjYXNlIFwiZGF0ZVwiOmNhc2UgXCJkYXRldGltZVwiOmNhc2UgXCJkYXRldGltZS1sb2NhbFwiOmNhc2UgXCJtb250aFwiOmNhc2UgXCJ0aW1lXCI6Y2FzZSBcIndlZWtcIjphLnZhbHVlPVwiXCI7YS52YWx1ZT1hLmRlZmF1bHRWYWx1ZTticmVhaztkZWZhdWx0OmEudmFsdWU9YS52YWx1ZX1iPWEubmFtZTtcIlwiIT09YiYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSFhLmRlZmF1bHRDaGVja2VkO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7XCJcIiE9PWImJihhLm5hbWU9Yil9ZnVuY3Rpb24gUWYoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbD09YXx8XCJzdHJpbmdcIiE9PXR5cGVvZiBhJiZcIm51bWJlclwiIT09dHlwZW9mIGF8fChiKz1hKX0pO3JldHVybiBifVxuZnVuY3Rpb24gUmYoYSxiKXthPUIoe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1RZihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9ZnVuY3Rpb24gU2YoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK2M7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIFRmKGEsYil7dmFyIGM9Yi52YWx1ZTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpudWxsIT1jP2M6Yi5kZWZhdWx0VmFsdWUsd2FzTXVsdGlwbGU6ISFiLm11bHRpcGxlfX1mdW5jdGlvbiBVZihhLGIpe251bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/RShcIjkxXCIpOnZvaWQgMDtyZXR1cm4gQih7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBWZihhLGIpe3ZhciBjPWIudmFsdWU7bnVsbD09YyYmKGM9Yi5kZWZhdWx0VmFsdWUsYj1iLmNoaWxkcmVuLG51bGwhPWImJihudWxsIT1jP0UoXCI5MlwiKTp2b2lkIDAsQXJyYXkuaXNBcnJheShiKSYmKDE+PWIubGVuZ3RoP3ZvaWQgMDpFKFwiOTNcIiksYj1iWzBdKSxjPVwiXCIrYiksbnVsbD09YyYmKGM9XCJcIikpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOlwiXCIrY319XG5mdW5jdGlvbiBXZihhLGIpe3ZhciBjPWIudmFsdWU7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1iLmRlZmF1bHRWYWx1ZSYmKGEuZGVmYXVsdFZhbHVlPWIuZGVmYXVsdFZhbHVlKX1mdW5jdGlvbiBYZihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiYoYS52YWx1ZT1iKX12YXIgWWY9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gWmYoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiAkZihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/WmYoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgYWc9dm9pZCAwLGJnPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PVlmLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle2FnPWFnfHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2FnLmlubmVySFRNTD1cIlxceDNjc3ZnXFx4M2VcIitiK1wiXFx4M2Mvc3ZnXFx4M2VcIjtmb3IoYj1hZy5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBjZyhhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIGRnPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxmbG9vZE9wYWNpdHk6ITAsXG5zdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LGVnPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhkZykuZm9yRWFjaChmdW5jdGlvbihhKXtlZy5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO2RnW2JdPWRnW2FdfSl9KTtcbmZ1bmN0aW9uIGZnKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKTt2YXIgZT1jO3ZhciBmPWJbY107ZT1udWxsPT1mfHxcImJvb2xlYW5cIj09PXR5cGVvZiBmfHxcIlwiPT09Zj9cIlwiOmR8fFwibnVtYmVyXCIhPT10eXBlb2YgZnx8MD09PWZ8fGRnLmhhc093blByb3BlcnR5KGUpJiZkZ1tlXT8oXCJcIitmKS50cmltKCk6ZitcInB4XCI7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBnZz1CKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gaGcoYSxiLGMpe2ImJihnZ1thXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/RShcIjEzN1wiLGEsYygpKTp2b2lkIDApLG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJihudWxsIT1iLmNoaWxkcmVuP0UoXCI2MFwiKTp2b2lkIDAsXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTD92b2lkIDA6RShcIjYxXCIpKSxudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGU/RShcIjYyXCIsYygpKTp2b2lkIDApfVxuZnVuY3Rpb24gaWcoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fXZhciBqZz1ZZi5odG1sLGtnPUMudGhhdFJldHVybnMoXCJcIik7XG5mdW5jdGlvbiBsZyhhLGIpe2E9OT09PWEubm9kZVR5cGV8fDExPT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudDt2YXIgYz1IZChhKTtiPVNhW2JdO2Zvcih2YXIgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXt2YXIgZT1iW2RdO2MuaGFzT3duUHJvcGVydHkoZSkmJmNbZV18fChcInRvcFNjcm9sbFwiPT09ZT93ZChcInRvcFNjcm9sbFwiLFwic2Nyb2xsXCIsYSk6XCJ0b3BGb2N1c1wiPT09ZXx8XCJ0b3BCbHVyXCI9PT1lPyh3ZChcInRvcEZvY3VzXCIsXCJmb2N1c1wiLGEpLHdkKFwidG9wQmx1clwiLFwiYmx1clwiLGEpLGMudG9wQmx1cj0hMCxjLnRvcEZvY3VzPSEwKTpcInRvcENhbmNlbFwiPT09ZT8oeWMoXCJjYW5jZWxcIiwhMCkmJndkKFwidG9wQ2FuY2VsXCIsXCJjYW5jZWxcIixhKSxjLnRvcENhbmNlbD0hMCk6XCJ0b3BDbG9zZVwiPT09ZT8oeWMoXCJjbG9zZVwiLCEwKSYmd2QoXCJ0b3BDbG9zZVwiLFwiY2xvc2VcIixhKSxjLnRvcENsb3NlPSEwKTpEZC5oYXNPd25Qcm9wZXJ0eShlKSYmVShlLERkW2VdLGEpLGNbZV09ITApfX1cbnZhciBtZz17dG9wQWJvcnQ6XCJhYm9ydFwiLHRvcENhblBsYXk6XCJjYW5wbGF5XCIsdG9wQ2FuUGxheVRocm91Z2g6XCJjYW5wbGF5dGhyb3VnaFwiLHRvcER1cmF0aW9uQ2hhbmdlOlwiZHVyYXRpb25jaGFuZ2VcIix0b3BFbXB0aWVkOlwiZW1wdGllZFwiLHRvcEVuY3J5cHRlZDpcImVuY3J5cHRlZFwiLHRvcEVuZGVkOlwiZW5kZWRcIix0b3BFcnJvcjpcImVycm9yXCIsdG9wTG9hZGVkRGF0YTpcImxvYWRlZGRhdGFcIix0b3BMb2FkZWRNZXRhZGF0YTpcImxvYWRlZG1ldGFkYXRhXCIsdG9wTG9hZFN0YXJ0OlwibG9hZHN0YXJ0XCIsdG9wUGF1c2U6XCJwYXVzZVwiLHRvcFBsYXk6XCJwbGF5XCIsdG9wUGxheWluZzpcInBsYXlpbmdcIix0b3BQcm9ncmVzczpcInByb2dyZXNzXCIsdG9wUmF0ZUNoYW5nZTpcInJhdGVjaGFuZ2VcIix0b3BTZWVrZWQ6XCJzZWVrZWRcIix0b3BTZWVraW5nOlwic2Vla2luZ1wiLHRvcFN0YWxsZWQ6XCJzdGFsbGVkXCIsdG9wU3VzcGVuZDpcInN1c3BlbmRcIix0b3BUaW1lVXBkYXRlOlwidGltZXVwZGF0ZVwiLHRvcFZvbHVtZUNoYW5nZTpcInZvbHVtZWNoYW5nZVwiLFxudG9wV2FpdGluZzpcIndhaXRpbmdcIn07ZnVuY3Rpb24gbmcoYSxiLGMsZCl7Yz05PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDtkPT09amcmJihkPVpmKGEpKTtkPT09amc/XCJzY3JpcHRcIj09PWE/KGE9Yy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiXFx4M2NzY3JpcHRcXHgzZVxceDNjL3NjcmlwdFxceDNlXCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOmE9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzP2MuY3JlYXRlRWxlbWVudChhLHtpczpiLmlzfSk6Yy5jcmVhdGVFbGVtZW50KGEpOmE9Yy5jcmVhdGVFbGVtZW50TlMoZCxhKTtyZXR1cm4gYX1mdW5jdGlvbiBvZyhhLGIpe3JldHVybig5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoYSl9XG5mdW5jdGlvbiBwZyhhLGIsYyxkKXt2YXIgZT1pZyhiLGMpO3N3aXRjaChiKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOlUoXCJ0b3BMb2FkXCIsXCJsb2FkXCIsYSk7dmFyIGY9YzticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZiBpbiBtZyltZy5oYXNPd25Qcm9wZXJ0eShmKSYmVShmLG1nW2ZdLGEpO2Y9YzticmVhaztjYXNlIFwic291cmNlXCI6VShcInRvcEVycm9yXCIsXCJlcnJvclwiLGEpO2Y9YzticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6VShcInRvcEVycm9yXCIsXCJlcnJvclwiLGEpO1UoXCJ0b3BMb2FkXCIsXCJsb2FkXCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJmb3JtXCI6VShcInRvcFJlc2V0XCIsXCJyZXNldFwiLGEpO1UoXCJ0b3BTdWJtaXRcIixcInN1Ym1pdFwiLGEpO2Y9YzticmVhaztjYXNlIFwiZGV0YWlsc1wiOlUoXCJ0b3BUb2dnbGVcIixcInRvZ2dsZVwiLGEpO2Y9YzticmVhaztjYXNlIFwiaW5wdXRcIjpNZihhLGMpO2Y9TGYoYSxjKTtVKFwidG9wSW52YWxpZFwiLFwiaW52YWxpZFwiLGEpO1xubGcoZCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPVJmKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOlRmKGEsYyk7Zj1CKHt9LGMse3ZhbHVlOnZvaWQgMH0pO1UoXCJ0b3BJbnZhbGlkXCIsXCJpbnZhbGlkXCIsYSk7bGcoZCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZmKGEsYyk7Zj1VZihhLGMpO1UoXCJ0b3BJbnZhbGlkXCIsXCJpbnZhbGlkXCIsYSk7bGcoZCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6Zj1jfWhnKGIsZixrZyk7dmFyIGc9ZixoO2ZvcihoIGluIGcpaWYoZy5oYXNPd25Qcm9wZXJ0eShoKSl7dmFyIGs9Z1toXTtcInN0eWxlXCI9PT1oP2ZnKGEsayxrZyk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09aD8oaz1rP2suX19odG1sOnZvaWQgMCxudWxsIT1rJiZiZyhhLGspKTpcImNoaWxkcmVuXCI9PT1oP1wic3RyaW5nXCI9PT10eXBlb2Ygaz8oXCJ0ZXh0YXJlYVwiIT09Ynx8XCJcIiE9PWspJiZjZyhhLGspOlwibnVtYmVyXCI9PT10eXBlb2YgayYmY2coYSxcblwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1oJiZcImF1dG9Gb2N1c1wiIT09aCYmKFJhLmhhc093blByb3BlcnR5KGgpP251bGwhPWsmJmxnKGQsaCk6ZT9LZihhLGgsayk6bnVsbCE9ayYmSWYoYSxoLGspKX1zd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6QmMoYSk7UGYoYSxjKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpCYyhhKTtYZihhLGMpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1jLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsYy52YWx1ZSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFjLm11bHRpcGxlO2I9Yy52YWx1ZTtudWxsIT1iP1NmKGEsISFjLm11bHRpcGxlLGIsITEpOm51bGwhPWMuZGVmYXVsdFZhbHVlJiZTZihhLCEhYy5tdWx0aXBsZSxjLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoYS5vbmNsaWNrPVxuQyl9fVxuZnVuY3Rpb24gc2coYSxiLGMsZCxlKXt2YXIgZj1udWxsO3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpjPUxmKGEsYyk7ZD1MZihhLGQpO2Y9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmM9UmYoYSxjKTtkPVJmKGEsZCk7Zj1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Yz1CKHt9LGMse3ZhbHVlOnZvaWQgMH0pO2Q9Qih7fSxkLHt2YWx1ZTp2b2lkIDB9KTtmPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmM9VWYoYSxjKTtkPVVmKGEsZCk7Zj1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihhLm9uY2xpY2s9Qyl9aGcoYixkLGtnKTt2YXIgZyxoO2E9bnVsbDtmb3IoZyBpbiBjKWlmKCFkLmhhc093blByb3BlcnR5KGcpJiZjLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1jW2ddKWlmKFwic3R5bGVcIj09PWcpZm9yKGggaW4gYj1jW2ddLGIpYi5oYXNPd25Qcm9wZXJ0eShoKSYmKGF8fChhPXt9KSxhW2hdPVxuXCJcIik7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWcmJlwiY2hpbGRyZW5cIiE9PWcmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1nJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09ZyYmXCJhdXRvRm9jdXNcIiE9PWcmJihSYS5oYXNPd25Qcm9wZXJ0eShnKT9mfHwoZj1bXSk6KGY9Znx8W10pLnB1c2goZyxudWxsKSk7Zm9yKGcgaW4gZCl7dmFyIGs9ZFtnXTtiPW51bGwhPWM/Y1tnXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShnKSYmayE9PWImJihudWxsIT1rfHxudWxsIT1iKSlpZihcInN0eWxlXCI9PT1nKWlmKGIpe2ZvcihoIGluIGIpIWIuaGFzT3duUHJvcGVydHkoaCl8fGsmJmsuaGFzT3duUHJvcGVydHkoaCl8fChhfHwoYT17fSksYVtoXT1cIlwiKTtmb3IoaCBpbiBrKWsuaGFzT3duUHJvcGVydHkoaCkmJmJbaF0hPT1rW2hdJiYoYXx8KGE9e30pLGFbaF09a1toXSl9ZWxzZSBhfHwoZnx8KGY9W10pLGYucHVzaChnLGEpKSxhPWs7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PVxuZz8oaz1rP2suX19odG1sOnZvaWQgMCxiPWI/Yi5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJmIhPT1rJiYoZj1mfHxbXSkucHVzaChnLFwiXCIraykpOlwiY2hpbGRyZW5cIj09PWc/Yj09PWt8fFwic3RyaW5nXCIhPT10eXBlb2YgayYmXCJudW1iZXJcIiE9PXR5cGVvZiBrfHwoZj1mfHxbXSkucHVzaChnLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWcmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1nJiYoUmEuaGFzT3duUHJvcGVydHkoZyk/KG51bGwhPWsmJmxnKGUsZyksZnx8Yj09PWt8fChmPVtdKSk6KGY9Znx8W10pLnB1c2goZyxrKSl9YSYmKGY9Znx8W10pLnB1c2goXCJzdHlsZVwiLGEpO3JldHVybiBmfVxuZnVuY3Rpb24gdGcoYSxiLGMsZCxlKXtcImlucHV0XCI9PT1jJiZcInJhZGlvXCI9PT1lLnR5cGUmJm51bGwhPWUubmFtZSYmTmYoYSxlKTtpZyhjLGQpO2Q9aWcoYyxlKTtmb3IodmFyIGY9MDtmPGIubGVuZ3RoO2YrPTIpe3ZhciBnPWJbZl0saD1iW2YrMV07XCJzdHlsZVwiPT09Zz9mZyhhLGgsa2cpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/YmcoYSxoKTpcImNoaWxkcmVuXCI9PT1nP2NnKGEsaCk6ZD9udWxsIT1oP0tmKGEsZyxoKTphLnJlbW92ZUF0dHJpYnV0ZShnKTpudWxsIT1oP0lmKGEsZyxoKTpKZihhLGcpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpPZihhLGUpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOldmKGEsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU9dm9pZCAwLGI9YS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWUubXVsdGlwbGUsYz1lLnZhbHVlLG51bGwhPWM/U2YoYSxcbiEhZS5tdWx0aXBsZSxjLCExKTpiIT09ISFlLm11bHRpcGxlJiYobnVsbCE9ZS5kZWZhdWx0VmFsdWU/U2YoYSwhIWUubXVsdGlwbGUsZS5kZWZhdWx0VmFsdWUsITApOlNmKGEsISFlLm11bHRpcGxlLGUubXVsdGlwbGU/W106XCJcIiwhMSkpfX1cbmZ1bmN0aW9uIHVnKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6VShcInRvcExvYWRcIixcImxvYWRcIixhKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IodmFyIGYgaW4gbWcpbWcuaGFzT3duUHJvcGVydHkoZikmJlUoZixtZ1tmXSxhKTticmVhaztjYXNlIFwic291cmNlXCI6VShcInRvcEVycm9yXCIsXCJlcnJvclwiLGEpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpVKFwidG9wRXJyb3JcIixcImVycm9yXCIsYSk7VShcInRvcExvYWRcIixcImxvYWRcIixhKTticmVhaztjYXNlIFwiZm9ybVwiOlUoXCJ0b3BSZXNldFwiLFwicmVzZXRcIixhKTtVKFwidG9wU3VibWl0XCIsXCJzdWJtaXRcIixhKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOlUoXCJ0b3BUb2dnbGVcIixcInRvZ2dsZVwiLGEpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOk1mKGEsYyk7VShcInRvcEludmFsaWRcIixcImludmFsaWRcIixhKTtsZyhlLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOlRmKGEsYyk7XG5VKFwidG9wSW52YWxpZFwiLFwiaW52YWxpZFwiLGEpO2xnKGUsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWZihhLGMpLFUoXCJ0b3BJbnZhbGlkXCIsXCJpbnZhbGlkXCIsYSksbGcoZSxcIm9uQ2hhbmdlXCIpfWhnKGIsYyxrZyk7ZD1udWxsO2Zvcih2YXIgZyBpbiBjKWMuaGFzT3duUHJvcGVydHkoZykmJihmPWNbZ10sXCJjaGlsZHJlblwiPT09Zz9cInN0cmluZ1wiPT09dHlwZW9mIGY/YS50ZXh0Q29udGVudCE9PWYmJihkPVtcImNoaWxkcmVuXCIsZl0pOlwibnVtYmVyXCI9PT10eXBlb2YgZiYmYS50ZXh0Q29udGVudCE9PVwiXCIrZiYmKGQ9W1wiY2hpbGRyZW5cIixcIlwiK2ZdKTpSYS5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9ZiYmbGcoZSxnKSk7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOkJjKGEpO1BmKGEsYyk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6QmMoYSk7WGYoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGMub25DbGljayYmXG4oYS5vbmNsaWNrPUMpfXJldHVybiBkfWZ1bmN0aW9uIHZnKGEsYil7cmV0dXJuIGEubm9kZVZhbHVlIT09Yn1cbnZhciB3Zz1PYmplY3QuZnJlZXplKHtjcmVhdGVFbGVtZW50Om5nLGNyZWF0ZVRleHROb2RlOm9nLHNldEluaXRpYWxQcm9wZXJ0aWVzOnBnLGRpZmZQcm9wZXJ0aWVzOnNnLHVwZGF0ZVByb3BlcnRpZXM6dGcsZGlmZkh5ZHJhdGVkUHJvcGVydGllczp1ZyxkaWZmSHlkcmF0ZWRUZXh0OnZnLHdhcm5Gb3JVbm1hdGNoZWRUZXh0OmZ1bmN0aW9uKCl7fSx3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVFbGVtZW50OmZ1bmN0aW9uKCl7fSx3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVUZXh0OmZ1bmN0aW9uKCl7fSx3YXJuRm9ySW5zZXJ0ZWRIeWRyYXRlZEVsZW1lbnQ6ZnVuY3Rpb24oKXt9LHdhcm5Gb3JJbnNlcnRlZEh5ZHJhdGVkVGV4dDpmdW5jdGlvbigpe30scmVzdG9yZUNvbnRyb2xsZWRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOk9mKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1cbmMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWVcXHgzZFwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZVxceDNkXCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9cmIoZCk7ZT92b2lkIDA6RShcIjkwXCIpO0NjKGQpO09mKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjpXZihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmU2YoYSwhIWMubXVsdGlwbGUsYiwhMSl9fX0pO25jLmluamVjdEZpYmVyQ29udHJvbGxlZEhvc3RDb21wb25lbnQod2cpO3ZhciB4Zz1udWxsLE1nPW51bGw7ZnVuY3Rpb24gTmcoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfVxuZnVuY3Rpb24gT2coYSl7YT1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsO3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlfHwhYS5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSl9XG52YXIgWj1vZih7Z2V0Um9vdEhvc3RDb250ZXh0OmZ1bmN0aW9uKGEpe3ZhciBiPWEubm9kZVR5cGU7c3dpdGNoKGIpe2Nhc2UgOTpjYXNlIDExOmE9KGE9YS5kb2N1bWVudEVsZW1lbnQpP2EubmFtZXNwYWNlVVJJOiRmKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDpiPTg9PT1iP2EucGFyZW50Tm9kZTphLGE9Yi5uYW1lc3BhY2VVUkl8fG51bGwsYj1iLnRhZ05hbWUsYT0kZihhLGIpfXJldHVybiBhfSxnZXRDaGlsZEhvc3RDb250ZXh0OmZ1bmN0aW9uKGEsYil7cmV0dXJuICRmKGEsYil9LGdldFB1YmxpY0luc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBhfSxwcmVwYXJlRm9yQ29tbWl0OmZ1bmN0aW9uKCl7eGc9dGQ7dmFyIGE9ZGEoKTtpZihLZChhKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gYSl2YXIgYj17c3RhcnQ6YS5zZWxlY3Rpb25TdGFydCxlbmQ6YS5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7dmFyIGM9d2luZG93LmdldFNlbGVjdGlvbiYmd2luZG93LmdldFNlbGVjdGlvbigpO1xuaWYoYyYmMCE9PWMucmFuZ2VDb3VudCl7Yj1jLmFuY2hvck5vZGU7dmFyIGQ9Yy5hbmNob3JPZmZzZXQsZT1jLmZvY3VzTm9kZTtjPWMuZm9jdXNPZmZzZXQ7dHJ5e2Iubm9kZVR5cGUsZS5ub2RlVHlwZX1jYXRjaCh6KXtiPW51bGw7YnJlYWsgYX12YXIgZj0wLGc9LTEsaD0tMSxrPTAscT0wLHY9YSx5PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgdTs7KXt2IT09Ynx8MCE9PWQmJjMhPT12Lm5vZGVUeXBlfHwoZz1mK2QpO3YhPT1lfHwwIT09YyYmMyE9PXYubm9kZVR5cGV8fChoPWYrYyk7Mz09PXYubm9kZVR5cGUmJihmKz12Lm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0odT12LmZpcnN0Q2hpbGQpKWJyZWFrO3k9djt2PXV9Zm9yKDs7KXtpZih2PT09YSlicmVhayBiO3k9PT1iJiYrK2s9PT1kJiYoZz1mKTt5PT09ZSYmKytxPT09YyYmKGg9Zik7aWYobnVsbCE9PSh1PXYubmV4dFNpYmxpbmcpKWJyZWFrO3Y9eTt5PXYucGFyZW50Tm9kZX12PXV9Yj0tMT09PWd8fC0xPT09aD9udWxsOlxue3N0YXJ0OmcsZW5kOmh9fWVsc2UgYj1udWxsfWI9Ynx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgYj1udWxsO01nPXtmb2N1c2VkRWxlbTphLHNlbGVjdGlvblJhbmdlOmJ9O3VkKCExKX0scmVzZXRBZnRlckNvbW1pdDpmdW5jdGlvbigpe3ZhciBhPU1nLGI9ZGEoKSxjPWEuZm9jdXNlZEVsZW0sZD1hLnNlbGVjdGlvblJhbmdlO2lmKGIhPT1jJiZmYShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsYykpe2lmKEtkKGMpKWlmKGI9ZC5zdGFydCxhPWQuZW5kLHZvaWQgMD09PWEmJihhPWIpLFwic2VsZWN0aW9uU3RhcnRcImluIGMpYy5zZWxlY3Rpb25TdGFydD1iLGMuc2VsZWN0aW9uRW5kPU1hdGgubWluKGEsYy52YWx1ZS5sZW5ndGgpO2Vsc2UgaWYod2luZG93LmdldFNlbGVjdGlvbil7Yj13aW5kb3cuZ2V0U2VsZWN0aW9uKCk7dmFyIGU9Y1tFYigpXS5sZW5ndGg7YT1NYXRoLm1pbihkLnN0YXJ0LGUpO2Q9dm9pZCAwPT09ZC5lbmQ/YTpNYXRoLm1pbihkLmVuZCxlKTshYi5leHRlbmQmJmE+XG5kJiYoZT1kLGQ9YSxhPWUpO2U9SmQoYyxhKTt2YXIgZj1KZChjLGQpO2lmKGUmJmYmJigxIT09Yi5yYW5nZUNvdW50fHxiLmFuY2hvck5vZGUhPT1lLm5vZGV8fGIuYW5jaG9yT2Zmc2V0IT09ZS5vZmZzZXR8fGIuZm9jdXNOb2RlIT09Zi5ub2RlfHxiLmZvY3VzT2Zmc2V0IT09Zi5vZmZzZXQpKXt2YXIgZz1kb2N1bWVudC5jcmVhdGVSYW5nZSgpO2cuc2V0U3RhcnQoZS5ub2RlLGUub2Zmc2V0KTtiLnJlbW92ZUFsbFJhbmdlcygpO2E+ZD8oYi5hZGRSYW5nZShnKSxiLmV4dGVuZChmLm5vZGUsZi5vZmZzZXQpKTooZy5zZXRFbmQoZi5ub2RlLGYub2Zmc2V0KSxiLmFkZFJhbmdlKGcpKX19Yj1bXTtmb3IoYT1jO2E9YS5wYXJlbnROb2RlOykxPT09YS5ub2RlVHlwZSYmYi5wdXNoKHtlbGVtZW50OmEsbGVmdDphLnNjcm9sbExlZnQsdG9wOmEuc2Nyb2xsVG9wfSk7aWEoYyk7Zm9yKGM9MDtjPGIubGVuZ3RoO2MrKylhPWJbY10sYS5lbGVtZW50LnNjcm9sbExlZnQ9YS5sZWZ0LGEuZWxlbWVudC5zY3JvbGxUb3A9XG5hLnRvcH1NZz1udWxsO3VkKHhnKTt4Zz1udWxsfSxjcmVhdGVJbnN0YW5jZTpmdW5jdGlvbihhLGIsYyxkLGUpe2E9bmcoYSxiLGMsZCk7YVtRXT1lO2Fbb2JdPWI7cmV0dXJuIGF9LGFwcGVuZEluaXRpYWxDaGlsZDpmdW5jdGlvbihhLGIpe2EuYXBwZW5kQ2hpbGQoYil9LGZpbmFsaXplSW5pdGlhbENoaWxkcmVuOmZ1bmN0aW9uKGEsYixjLGQpe3BnKGEsYixjLGQpO2E6e3N3aXRjaChiKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOmE9ISFjLmF1dG9Gb2N1czticmVhayBhfWE9ITF9cmV0dXJuIGF9LHByZXBhcmVVcGRhdGU6ZnVuY3Rpb24oYSxiLGMsZCxlKXtyZXR1cm4gc2coYSxiLGMsZCxlKX0sc2hvdWxkU2V0VGV4dENvbnRlbnQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PVxudHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcInN0cmluZ1wiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfSxzaG91bGREZXByaW9yaXRpemVTdWJ0cmVlOmZ1bmN0aW9uKGEsYil7cmV0dXJuISFiLmhpZGRlbn0sY3JlYXRlVGV4dEluc3RhbmNlOmZ1bmN0aW9uKGEsYixjLGQpe2E9b2coYSxiKTthW1FdPWQ7cmV0dXJuIGF9LG5vdzpyZixtdXRhdGlvbjp7Y29tbWl0TW91bnQ6ZnVuY3Rpb24oYSl7YS5mb2N1cygpfSxjb21taXRVcGRhdGU6ZnVuY3Rpb24oYSxiLGMsZCxlKXthW29iXT1lO3RnKGEsYixjLGQsZSl9LHJlc2V0VGV4dENvbnRlbnQ6ZnVuY3Rpb24oYSl7YS50ZXh0Q29udGVudD1cIlwifSxjb21taXRUZXh0VXBkYXRlOmZ1bmN0aW9uKGEsYixjKXthLm5vZGVWYWx1ZT1jfSxhcHBlbmRDaGlsZDpmdW5jdGlvbihhLGIpe2EuYXBwZW5kQ2hpbGQoYil9LGFwcGVuZENoaWxkVG9Db250YWluZXI6ZnVuY3Rpb24oYSxcbmIpezg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYixhKTphLmFwcGVuZENoaWxkKGIpfSxpbnNlcnRCZWZvcmU6ZnVuY3Rpb24oYSxiLGMpe2EuaW5zZXJ0QmVmb3JlKGIsYyl9LGluc2VydEluQ29udGFpbmVyQmVmb3JlOmZ1bmN0aW9uKGEsYixjKXs4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGIsYyk6YS5pbnNlcnRCZWZvcmUoYixjKX0scmVtb3ZlQ2hpbGQ6ZnVuY3Rpb24oYSxiKXthLnJlbW92ZUNoaWxkKGIpfSxyZW1vdmVDaGlsZEZyb21Db250YWluZXI6ZnVuY3Rpb24oYSxiKXs4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYik6YS5yZW1vdmVDaGlsZChiKX19LGh5ZHJhdGlvbjp7Y2FuSHlkcmF0ZUluc3RhbmNlOmZ1bmN0aW9uKGEsYil7cmV0dXJuIDEhPT1hLm5vZGVUeXBlfHxiLnRvTG93ZXJDYXNlKCkhPT1hLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDphfSxjYW5IeWRyYXRlVGV4dEluc3RhbmNlOmZ1bmN0aW9uKGEsXG5iKXtyZXR1cm5cIlwiPT09Ynx8MyE9PWEubm9kZVR5cGU/bnVsbDphfSxnZXROZXh0SHlkcmF0YWJsZVNpYmxpbmc6ZnVuY3Rpb24oYSl7Zm9yKGE9YS5uZXh0U2libGluZzthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX0sZ2V0Rmlyc3RIeWRyYXRhYmxlQ2hpbGQ6ZnVuY3Rpb24oYSl7Zm9yKGE9YS5maXJzdENoaWxkO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfSxoeWRyYXRlSW5zdGFuY2U6ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe2FbUV09ZjthW29iXT1jO3JldHVybiB1ZyhhLGIsYyxlLGQpfSxoeWRyYXRlVGV4dEluc3RhbmNlOmZ1bmN0aW9uKGEsYixjKXthW1FdPWM7cmV0dXJuIHZnKGEsYil9LGRpZE5vdE1hdGNoSHlkcmF0ZWRDb250YWluZXJUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oKXt9LGRpZE5vdE1hdGNoSHlkcmF0ZWRUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oKXt9LFxuZGlkTm90SHlkcmF0ZUNvbnRhaW5lckluc3RhbmNlOmZ1bmN0aW9uKCl7fSxkaWROb3RIeWRyYXRlSW5zdGFuY2U6ZnVuY3Rpb24oKXt9LGRpZE5vdEZpbmRIeWRyYXRhYmxlQ29udGFpbmVySW5zdGFuY2U6ZnVuY3Rpb24oKXt9LGRpZE5vdEZpbmRIeWRyYXRhYmxlQ29udGFpbmVyVGV4dEluc3RhbmNlOmZ1bmN0aW9uKCl7fSxkaWROb3RGaW5kSHlkcmF0YWJsZUluc3RhbmNlOmZ1bmN0aW9uKCl7fSxkaWROb3RGaW5kSHlkcmF0YWJsZVRleHRJbnN0YW5jZTpmdW5jdGlvbigpe319LHNjaGVkdWxlRGVmZXJyZWRDYWxsYmFjazpzZixjYW5jZWxEZWZlcnJlZENhbGxiYWNrOnRmLHVzZVN5bmNTY2hlZHVsaW5nOiEwfSk7cmM9Wi5iYXRjaGVkVXBkYXRlcztcbmZ1bmN0aW9uIFBnKGEsYixjLGQsZSl7TmcoYyk/dm9pZCAwOkUoXCIyMDBcIik7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpWi51cGRhdGVDb250YWluZXIoYixmLGEsZSk7ZWxzZXtkPWR8fE9nKGMpO2lmKCFkKWZvcihmPXZvaWQgMDtmPWMubGFzdENoaWxkOyljLnJlbW92ZUNoaWxkKGYpO3ZhciBnPVouY3JlYXRlQ29udGFpbmVyKGMsZCk7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9ZztaLnVuYmF0Y2hlZFVwZGF0ZXMoZnVuY3Rpb24oKXtaLnVwZGF0ZUNvbnRhaW5lcihiLGcsYSxlKX0pfXJldHVybiBaLmdldFB1YmxpY1Jvb3RJbnN0YW5jZShmKX1mdW5jdGlvbiBRZyhhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO05nKGIpP3ZvaWQgMDpFKFwiMjAwXCIpO3JldHVybiBwZihhLGIsbnVsbCxjKX1cbmZ1bmN0aW9uIFJnKGEsYil7dGhpcy5fcmVhY3RSb290Q29udGFpbmVyPVouY3JlYXRlQ29udGFpbmVyKGEsYil9UmcucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhLGIpe1oudXBkYXRlQ29udGFpbmVyKGEsdGhpcy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwsYil9O1JnLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKGEpe1oudXBkYXRlQ29udGFpbmVyKG51bGwsdGhpcy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwsYSl9O1xudmFyIFNnPXtjcmVhdGVQb3J0YWw6UWcsZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7aWYoYilyZXR1cm4gWi5maW5kSG9zdEluc3RhbmNlKGIpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj9FKFwiMTg4XCIpOkUoXCIyMTNcIixPYmplY3Qua2V5cyhhKSl9LGh5ZHJhdGU6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBQZyhudWxsLGEsYiwhMCxjKX0scmVuZGVyOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gUGcobnVsbCxhLGIsITEsYyl9LHVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyOmZ1bmN0aW9uKGEsYixjLGQpe251bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxGaWJlcj9FKFwiMzhcIik6dm9pZCAwO3JldHVybiBQZyhhLGIsYywhMSxkKX0sdW5tb3VudENvbXBvbmVudEF0Tm9kZTpmdW5jdGlvbihhKXtOZyhhKT92b2lkIDA6XG5FKFwiNDBcIik7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oWi51bmJhdGNoZWRVcGRhdGVzKGZ1bmN0aW9uKCl7UGcobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6UWcsdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM6dGMsdW5zdGFibGVfZGVmZXJyZWRVcGRhdGVzOlouZGVmZXJyZWRVcGRhdGVzLGZsdXNoU3luYzpaLmZsdXNoU3luYyxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7RXZlbnRQbHVnaW5IdWI6bWIsRXZlbnRQbHVnaW5SZWdpc3RyeTpWYSxFdmVudFByb3BhZ2F0b3JzOkNiLFJlYWN0Q29udHJvbGxlZENvbXBvbmVudDpxYyxSZWFjdERPTUNvbXBvbmVudFRyZWU6c2IsUmVhY3RET01FdmVudExpc3RlbmVyOnhkfX07XG5aLmluamVjdEludG9EZXZUb29scyh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6cGIsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi4yLjBcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTt2YXIgVGc9T2JqZWN0LmZyZWV6ZSh7ZGVmYXVsdDpTZ30pLFVnPVRnJiZTZ3x8VGc7bW9kdWxlLmV4cG9ydHM9VWdbXCJkZWZhdWx0XCJdP1VnW1wiZGVmYXVsdFwiXTpVZztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4vLyBtb2R1bGUgaWQgPSA3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcblxuLyoqXG4gKiBTaW1wbGUsIGxpZ2h0d2VpZ2h0IG1vZHVsZSBhc3Npc3Rpbmcgd2l0aCB0aGUgZGV0ZWN0aW9uIGFuZCBjb250ZXh0IG9mXG4gKiBXb3JrZXIuIEhlbHBzIGF2b2lkIGNpcmN1bGFyIGRlcGVuZGVuY2llcyBhbmQgYWxsb3dzIGNvZGUgdG8gcmVhc29uIGFib3V0XG4gKiB3aGV0aGVyIG9yIG5vdCB0aGV5IGFyZSBpbiBhIFdvcmtlciwgZXZlbiBpZiB0aGV5IG5ldmVyIGluY2x1ZGUgdGhlIG1haW5cbiAqIGBSZWFjdFdvcmtlcmAgZGVwZW5kZW5jeS5cbiAqL1xudmFyIEV4ZWN1dGlvbkVudmlyb25tZW50ID0ge1xuXG4gIGNhblVzZURPTTogY2FuVXNlRE9NLFxuXG4gIGNhblVzZVdvcmtlcnM6IHR5cGVvZiBXb3JrZXIgIT09ICd1bmRlZmluZWQnLFxuXG4gIGNhblVzZUV2ZW50TGlzdGVuZXJzOiBjYW5Vc2VET00gJiYgISEod2luZG93LmFkZEV2ZW50TGlzdGVuZXIgfHwgd2luZG93LmF0dGFjaEV2ZW50KSxcblxuICBjYW5Vc2VWaWV3cG9ydDogY2FuVXNlRE9NICYmICEhd2luZG93LnNjcmVlbixcblxuICBpc0luV29ya2VyOiAhY2FuVXNlRE9NIC8vIEZvciBub3csIHRoaXMgaXMgdHJ1ZSAtIG1pZ2h0IGNoYW5nZSBpbiB0aGUgZnV0dXJlLlxuXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEV4ZWN1dGlvbkVudmlyb25tZW50O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2ZianMvbGliL0V4ZWN1dGlvbkVudmlyb25tZW50LmpzXG4vLyBtb2R1bGUgaWQgPSA4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxudmFyIGVtcHR5RnVuY3Rpb24gPSByZXF1aXJlKCcuL2VtcHR5RnVuY3Rpb24nKTtcblxuLyoqXG4gKiBVcHN0cmVhbSB2ZXJzaW9uIG9mIGV2ZW50IGxpc3RlbmVyLiBEb2VzIG5vdCB0YWtlIGludG8gYWNjb3VudCBzcGVjaWZpY1xuICogbmF0dXJlIG9mIHBsYXRmb3JtLlxuICovXG52YXIgRXZlbnRMaXN0ZW5lciA9IHtcbiAgLyoqXG4gICAqIExpc3RlbiB0byBET00gZXZlbnRzIGR1cmluZyB0aGUgYnViYmxlIHBoYXNlLlxuICAgKlxuICAgKiBAcGFyYW0ge0RPTUV2ZW50VGFyZ2V0fSB0YXJnZXQgRE9NIGVsZW1lbnQgdG8gcmVnaXN0ZXIgbGlzdGVuZXIgb24uXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudFR5cGUgRXZlbnQgdHlwZSwgZS5nLiAnY2xpY2snIG9yICdtb3VzZW92ZXInLlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFjayBDYWxsYmFjayBmdW5jdGlvbi5cbiAgICogQHJldHVybiB7b2JqZWN0fSBPYmplY3Qgd2l0aCBhIGByZW1vdmVgIG1ldGhvZC5cbiAgICovXG4gIGxpc3RlbjogZnVuY3Rpb24gbGlzdGVuKHRhcmdldCwgZXZlbnRUeXBlLCBjYWxsYmFjaykge1xuICAgIGlmICh0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjaywgZmFsc2UpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICAgICAgdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjaywgZmFsc2UpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0gZWxzZSBpZiAodGFyZ2V0LmF0dGFjaEV2ZW50KSB7XG4gICAgICB0YXJnZXQuYXR0YWNoRXZlbnQoJ29uJyArIGV2ZW50VHlwZSwgY2FsbGJhY2spO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICAgICAgdGFyZ2V0LmRldGFjaEV2ZW50KCdvbicgKyBldmVudFR5cGUsIGNhbGxiYWNrKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIExpc3RlbiB0byBET00gZXZlbnRzIGR1cmluZyB0aGUgY2FwdHVyZSBwaGFzZS5cbiAgICpcbiAgICogQHBhcmFtIHtET01FdmVudFRhcmdldH0gdGFyZ2V0IERPTSBlbGVtZW50IHRvIHJlZ2lzdGVyIGxpc3RlbmVyIG9uLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXZlbnRUeXBlIEV2ZW50IHR5cGUsIGUuZy4gJ2NsaWNrJyBvciAnbW91c2VvdmVyJy5cbiAgICogQHBhcmFtIHtmdW5jdGlvbn0gY2FsbGJhY2sgQ2FsbGJhY2sgZnVuY3Rpb24uXG4gICAqIEByZXR1cm4ge29iamVjdH0gT2JqZWN0IHdpdGggYSBgcmVtb3ZlYCBtZXRob2QuXG4gICAqL1xuICBjYXB0dXJlOiBmdW5jdGlvbiBjYXB0dXJlKHRhcmdldCwgZXZlbnRUeXBlLCBjYWxsYmFjaykge1xuICAgIGlmICh0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjaywgdHJ1ZSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgICAgICB0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGNhbGxiYWNrLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignQXR0ZW1wdGVkIHRvIGxpc3RlbiB0byBldmVudHMgZHVyaW5nIHRoZSBjYXB0dXJlIHBoYXNlIG9uIGEgJyArICdicm93c2VyIHRoYXQgZG9lcyBub3Qgc3VwcG9ydCB0aGUgY2FwdHVyZSBwaGFzZS4gWW91ciBhcHBsaWNhdGlvbiAnICsgJ3dpbGwgbm90IHJlY2VpdmUgc29tZSBldmVudHMuJyk7XG4gICAgICB9XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZW1vdmU6IGVtcHR5RnVuY3Rpb25cbiAgICAgIH07XG4gICAgfVxuICB9LFxuXG4gIHJlZ2lzdGVyRGVmYXVsdDogZnVuY3Rpb24gcmVnaXN0ZXJEZWZhdWx0KCkge31cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRXZlbnRMaXN0ZW5lcjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9FdmVudExpc3RlbmVyLmpzXG4vLyBtb2R1bGUgaWQgPSA5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxuLyogZXNsaW50LWRpc2FibGUgZmItd3d3L3R5cGVvZi11bmRlZmluZWQgKi9cblxuLyoqXG4gKiBTYW1lIGFzIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgYnV0IHdyYXBzIGluIGEgdHJ5LWNhdGNoIGJsb2NrLiBJbiBJRSBpdCBpc1xuICogbm90IHNhZmUgdG8gY2FsbCBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGlmIHRoZXJlIGlzIG5vdGhpbmcgZm9jdXNlZC5cbiAqXG4gKiBUaGUgYWN0aXZlRWxlbWVudCB3aWxsIGJlIG51bGwgb25seSBpZiB0aGUgZG9jdW1lbnQgb3IgZG9jdW1lbnQgYm9keSBpcyBub3RcbiAqIHlldCBkZWZpbmVkLlxuICpcbiAqIEBwYXJhbSB7P0RPTURvY3VtZW50fSBkb2MgRGVmYXVsdHMgdG8gY3VycmVudCBkb2N1bWVudC5cbiAqIEByZXR1cm4gez9ET01FbGVtZW50fVxuICovXG5mdW5jdGlvbiBnZXRBY3RpdmVFbGVtZW50KGRvYykgLyo/RE9NRWxlbWVudCove1xuICBkb2MgPSBkb2MgfHwgKHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcgPyBkb2N1bWVudCA6IHVuZGVmaW5lZCk7XG4gIGlmICh0eXBlb2YgZG9jID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHRyeSB7XG4gICAgcmV0dXJuIGRvYy5hY3RpdmVFbGVtZW50IHx8IGRvYy5ib2R5O1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGRvYy5ib2R5O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0QWN0aXZlRWxlbWVudDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXRBY3RpdmVFbGVtZW50LmpzXG4vLyBtb2R1bGUgaWQgPSAxMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqIFxuICovXG5cbi8qZXNsaW50LWRpc2FibGUgbm8tc2VsZi1jb21wYXJlICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBpbmxpbmVkIE9iamVjdC5pcyBwb2x5ZmlsbCB0byBhdm9pZCByZXF1aXJpbmcgY29uc3VtZXJzIHNoaXAgdGhlaXIgb3duXG4gKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9PYmplY3QvaXNcbiAqL1xuZnVuY3Rpb24gaXMoeCwgeSkge1xuICAvLyBTYW1lVmFsdWUgYWxnb3JpdGhtXG4gIGlmICh4ID09PSB5KSB7XG4gICAgLy8gU3RlcHMgMS01LCA3LTEwXG4gICAgLy8gU3RlcHMgNi5iLTYuZTogKzAgIT0gLTBcbiAgICAvLyBBZGRlZCB0aGUgbm9uemVybyB5IGNoZWNrIHRvIG1ha2UgRmxvdyBoYXBweSwgYnV0IGl0IGlzIHJlZHVuZGFudFxuICAgIHJldHVybiB4ICE9PSAwIHx8IHkgIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIC8vIFN0ZXAgNi5hOiBOYU4gPT0gTmFOXG4gICAgcmV0dXJuIHggIT09IHggJiYgeSAhPT0geTtcbiAgfVxufVxuXG4vKipcbiAqIFBlcmZvcm1zIGVxdWFsaXR5IGJ5IGl0ZXJhdGluZyB0aHJvdWdoIGtleXMgb24gYW4gb2JqZWN0IGFuZCByZXR1cm5pbmcgZmFsc2VcbiAqIHdoZW4gYW55IGtleSBoYXMgdmFsdWVzIHdoaWNoIGFyZSBub3Qgc3RyaWN0bHkgZXF1YWwgYmV0d2VlbiB0aGUgYXJndW1lbnRzLlxuICogUmV0dXJucyB0cnVlIHdoZW4gdGhlIHZhbHVlcyBvZiBhbGwga2V5cyBhcmUgc3RyaWN0bHkgZXF1YWwuXG4gKi9cbmZ1bmN0aW9uIHNoYWxsb3dFcXVhbChvYmpBLCBvYmpCKSB7XG4gIGlmIChpcyhvYmpBLCBvYmpCKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvYmpBICE9PSAnb2JqZWN0JyB8fCBvYmpBID09PSBudWxsIHx8IHR5cGVvZiBvYmpCICE9PSAnb2JqZWN0JyB8fCBvYmpCID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIGtleXNBID0gT2JqZWN0LmtleXMob2JqQSk7XG4gIHZhciBrZXlzQiA9IE9iamVjdC5rZXlzKG9iakIpO1xuXG4gIGlmIChrZXlzQS5sZW5ndGggIT09IGtleXNCLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8vIFRlc3QgZm9yIEEncyBrZXlzIGRpZmZlcmVudCBmcm9tIEIuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwga2V5c0EubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoIWhhc093blByb3BlcnR5LmNhbGwob2JqQiwga2V5c0FbaV0pIHx8ICFpcyhvYmpBW2tleXNBW2ldXSwgb2JqQltrZXlzQVtpXV0pKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hhbGxvd0VxdWFsO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2ZianMvbGliL3NoYWxsb3dFcXVhbC5qc1xuLy8gbW9kdWxlIGlkID0gMTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKi9cblxudmFyIGlzVGV4dE5vZGUgPSByZXF1aXJlKCcuL2lzVGV4dE5vZGUnKTtcblxuLyplc2xpbnQtZGlzYWJsZSBuby1iaXR3aXNlICovXG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgZ2l2ZW4gRE9NIG5vZGUgY29udGFpbnMgb3IgaXMgYW5vdGhlciBET00gbm9kZS5cbiAqL1xuZnVuY3Rpb24gY29udGFpbnNOb2RlKG91dGVyTm9kZSwgaW5uZXJOb2RlKSB7XG4gIGlmICghb3V0ZXJOb2RlIHx8ICFpbm5lck5vZGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0gZWxzZSBpZiAob3V0ZXJOb2RlID09PSBpbm5lck5vZGUpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIGlmIChpc1RleHROb2RlKG91dGVyTm9kZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0gZWxzZSBpZiAoaXNUZXh0Tm9kZShpbm5lck5vZGUpKSB7XG4gICAgcmV0dXJuIGNvbnRhaW5zTm9kZShvdXRlck5vZGUsIGlubmVyTm9kZS5wYXJlbnROb2RlKTtcbiAgfSBlbHNlIGlmICgnY29udGFpbnMnIGluIG91dGVyTm9kZSkge1xuICAgIHJldHVybiBvdXRlck5vZGUuY29udGFpbnMoaW5uZXJOb2RlKTtcbiAgfSBlbHNlIGlmIChvdXRlck5vZGUuY29tcGFyZURvY3VtZW50UG9zaXRpb24pIHtcbiAgICByZXR1cm4gISEob3V0ZXJOb2RlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGlubmVyTm9kZSkgJiAxNik7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29udGFpbnNOb2RlO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2NvbnRhaW5zTm9kZS5qc1xuLy8gbW9kdWxlIGlkID0gMTJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG52YXIgaXNOb2RlID0gcmVxdWlyZSgnLi9pc05vZGUnKTtcblxuLyoqXG4gKiBAcGFyYW0geyp9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNoZWNrLlxuICogQHJldHVybiB7Ym9vbGVhbn0gV2hldGhlciBvciBub3QgdGhlIG9iamVjdCBpcyBhIERPTSB0ZXh0IG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGlzVGV4dE5vZGUob2JqZWN0KSB7XG4gIHJldHVybiBpc05vZGUob2JqZWN0KSAmJiBvYmplY3Qubm9kZVR5cGUgPT0gMztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc1RleHROb2RlO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2lzVGV4dE5vZGUuanNcbi8vIG1vZHVsZSBpZCA9IDEzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0geyp9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNoZWNrLlxuICogQHJldHVybiB7Ym9vbGVhbn0gV2hldGhlciBvciBub3QgdGhlIG9iamVjdCBpcyBhIERPTSBub2RlLlxuICovXG5mdW5jdGlvbiBpc05vZGUob2JqZWN0KSB7XG4gIHZhciBkb2MgPSBvYmplY3QgPyBvYmplY3Qub3duZXJEb2N1bWVudCB8fCBvYmplY3QgOiBkb2N1bWVudDtcbiAgdmFyIGRlZmF1bHRWaWV3ID0gZG9jLmRlZmF1bHRWaWV3IHx8IHdpbmRvdztcbiAgcmV0dXJuICEhKG9iamVjdCAmJiAodHlwZW9mIGRlZmF1bHRWaWV3Lk5vZGUgPT09ICdmdW5jdGlvbicgPyBvYmplY3QgaW5zdGFuY2VvZiBkZWZhdWx0Vmlldy5Ob2RlIDogdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG9iamVjdC5ub2RlVHlwZSA9PT0gJ251bWJlcicgJiYgdHlwZW9mIG9iamVjdC5ub2RlTmFtZSA9PT0gJ3N0cmluZycpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc05vZGU7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvaXNOb2RlLmpzXG4vLyBtb2R1bGUgaWQgPSAxNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBAcGFyYW0ge0RPTUVsZW1lbnR9IG5vZGUgaW5wdXQvdGV4dGFyZWEgdG8gZm9jdXNcbiAqL1xuXG5mdW5jdGlvbiBmb2N1c05vZGUobm9kZSkge1xuICAvLyBJRTggY2FuIHRocm93IFwiQ2FuJ3QgbW92ZSBmb2N1cyB0byB0aGUgY29udHJvbCBiZWNhdXNlIGl0IGlzIGludmlzaWJsZSxcbiAgLy8gbm90IGVuYWJsZWQsIG9yIG9mIGEgdHlwZSB0aGF0IGRvZXMgbm90IGFjY2VwdCB0aGUgZm9jdXMuXCIgZm9yIGFsbCBraW5kcyBvZlxuICAvLyByZWFzb25zIHRoYXQgYXJlIHRvbyBleHBlbnNpdmUgYW5kIGZyYWdpbGUgdG8gdGVzdC5cbiAgdHJ5IHtcbiAgICBub2RlLmZvY3VzKCk7XG4gIH0gY2F0Y2ggKGUpIHt9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZm9jdXNOb2RlO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2ZvY3VzTm9kZS5qc1xuLy8gbW9kdWxlIGlkID0gMTVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSAnLi9pbi12aWV3J1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2luZGV4LmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgZmluZERPTU5vZGUgfSBmcm9tICdyZWFjdC1kb20nXG5pbXBvcnQgZGVib3VuY2VGbiBmcm9tICdsb2Rhc2guZGVib3VuY2UnXG5pbXBvcnQgeyBmdW5jLCBudW1iZXIsIGJvb2wgfSBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IHsgb24sIGluVmlld3BvcnQgfSBmcm9tICcuL3V0aWwnXG5cbmNvbnN0IG9uV2luZG93U2Nyb2xsID0gb24oJ3Njcm9sbCcsIHsgY2FwdHVyZTogdHJ1ZSwgcGFzc2l2ZTogdHJ1ZSB9KSh3aW5kb3cpXG5jb25zdCBpc1Byb2QgPSBwcm9jZXNzICYmIHByb2Nlc3MuZW52ICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbidcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW5WaWV3IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogZnVuYy5pc1JlcXVpcmVkLFxuICAgIGJvdW5kaW5nTGVmdDogbnVtYmVyLFxuICAgIGJvdW5kaW5nUmlnaHQ6IG51bWJlcixcbiAgICBkZWJvdW5jZTogbnVtYmVyLFxuICAgIHRocmVzaG9sZDogbnVtYmVyLFxuICAgIG9uY2U6IGJvb2wsXG4gICAgaG9yaXpvbnRhbGx5OiBib29sXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGRlYm91bmNlOiAyNTAsXG4gICAgdGhyZXNob2xkOiAwLFxuICAgIG9uY2U6IGZhbHNlXG4gIH1cblxuICBtb3VudGVkID0gZmFsc2VcbiAgc3RhdGUgPSB7IGlzSW5WaWV3OiBmYWxzZSwgaGFzVXBkYXRlZDogZmFsc2UgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50ICgpIHtcbiAgICB0aGlzLm1vdW50ZWQgPSB0cnVlXG4gICAgdGhpcy5fcmVmID0gZmluZERPTU5vZGUodGhpcylcbiAgICB0aGlzLmlzSW5WaWV3cG9ydCA9IGluVmlld3BvcnQoe1xuICAgICAgdGhyZXNob2xkOiB0aGlzLnByb3BzLnRocmVzaG9sZCxcbiAgICAgIGJvdW5kaW5nTGVmdDogdGhpcy5wcm9wcy5ib3VuZGluZ0xlZnQsXG4gICAgICBib3VuZGluZ1JpZ2h0OiB0aGlzLnByb3BzLmJvdW5kaW5nUmlnaHQsXG4gICAgICByZXF1aXJlRW50aXJlRWxlbWVudEluVmlld3BvcnQ6IHRydWUgfSlcbiAgICB0aGlzLmNoZWNrSXNJblZpZXcoKVxuICAgIHRoaXMuc2Nyb2xsVW5zdWJzY3JpYmUgPSBvbldpbmRvd1Njcm9sbCh0aGlzLmNoZWNrSXNJblZpZXdEZWJvdW5jZWQpXG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCAoKSB7XG4gICAgdGhpcy5tb3VudGVkID0gZmFsc2VcbiAgICB0aGlzLnNjcm9sbFVuc3Vic2NyaWJlKClcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgKG5leHRQcm9wcykge1xuICAgIGNvbnN0IHsgdGhyZXNob2xkLCBkZWJvdW5jZSB9ID0gbmV4dFByb3BzXG4gICAgdGhpcy5pc0luVmlld3BvcnQgPSBpblZpZXdwb3J0KHsgdGhyZXNob2xkLCByZXF1aXJlRW50aXJlRWxlbWVudEluVmlld3BvcnQ6IHRydWUgfSlcbiAgICB0aGlzLmNoZWNrSXNJblZpZXdEZWJvdW5jZWQgPSBkZWJvdW5jZUZuKHRoaXMuY2hlY2tJc0luVmlldywgZGVib3VuY2UpXG4gIH1cblxuICBjaGVja0lzSW5WaWV3ID0gKCkgPT4ge1xuICAgIGlmICghdGhpcy5tb3VudGVkKSByZXR1cm5cbiAgICBpZiAodGhpcy5wcm9wcy5vbmNlICYmIHRoaXMuc3RhdGUuaGFzVXBkYXRlZCkgcmV0dXJuXG4gICAgY29uc3QgeyB0aHJlc2hvbGQgfSA9IHRoaXMucHJvcHNcbiAgICBpZiAodGhyZXNob2xkID4gMTAgJiYgaXNQcm9kKSB7XG4gICAgICBjb25zb2xlLndhcm4oYEhpZ2ggSW5WaWV3IHRocmVzaG9sZDogXCIke3RocmVzaG9sZH1cIi4gVGhyZXNob2xkIGlzIG11bHRpcGxpZWQgYnkgdGhlIHZpZXdwb3J0IGRpbWVuc2lvbnMhYClcbiAgICB9XG5cbiAgICBjb25zdCB3YXNJblZpZXcgPSB0aGlzLnN0YXRlLmlzSW5WaWV3XG4gICAgY29uc3QgaXNOb3dJblZpZXcgPSB0aGlzLmlzSW5WaWV3cG9ydCh0aGlzLl9yZWYpXG5cbiAgICBpZiAod2FzSW5WaWV3ICE9PSBpc05vd0luVmlldykge1xuICAgICAgdGhpcy5zZXRTdGF0ZSgoKSA9PiAoe1xuICAgICAgICBpc0luVmlldzogaXNOb3dJblZpZXcsXG4gICAgICAgIGhhc1VwZGF0ZWQ6IHRydWVcbiAgICAgIH0pKVxuICAgIH1cbiAgfVxuXG4gIGNoZWNrSXNJblZpZXdEZWJvdW5jZWQgPSBkZWJvdW5jZUZuKHRoaXMuY2hlY2tJc0luVmlldywgdGhpcy5wcm9wcy5kZWJvdW5jZSlcbiAgcmVuZGVyICgpIHtcbiAgICByZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbih0aGlzLnN0YXRlLmlzSW5WaWV3KVxuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvaW4tdmlldy5qcyIsIi8vIHNoaW0gZm9yIHVzaW5nIHByb2Nlc3MgaW4gYnJvd3NlclxudmFyIHByb2Nlc3MgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xuXG4vLyBjYWNoZWQgZnJvbSB3aGF0ZXZlciBnbG9iYWwgaXMgcHJlc2VudCBzbyB0aGF0IHRlc3QgcnVubmVycyB0aGF0IHN0dWIgaXRcbi8vIGRvbid0IGJyZWFrIHRoaW5ncy4gIEJ1dCB3ZSBuZWVkIHRvIHdyYXAgaXQgaW4gYSB0cnkgY2F0Y2ggaW4gY2FzZSBpdCBpc1xuLy8gd3JhcHBlZCBpbiBzdHJpY3QgbW9kZSBjb2RlIHdoaWNoIGRvZXNuJ3QgZGVmaW5lIGFueSBnbG9iYWxzLiAgSXQncyBpbnNpZGUgYVxuLy8gZnVuY3Rpb24gYmVjYXVzZSB0cnkvY2F0Y2hlcyBkZW9wdGltaXplIGluIGNlcnRhaW4gZW5naW5lcy5cblxudmFyIGNhY2hlZFNldFRpbWVvdXQ7XG52YXIgY2FjaGVkQ2xlYXJUaW1lb3V0O1xuXG5mdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCkge1xuICAgIHRocm93IG5ldyBFcnJvcignc2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCAoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbihmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBzZXRUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhclRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgfVxufSAoKSlcbmZ1bmN0aW9uIHJ1blRpbWVvdXQoZnVuKSB7XG4gICAgaWYgKGNhY2hlZFNldFRpbWVvdXQgPT09IHNldFRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIC8vIGlmIHNldFRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRTZXRUaW1lb3V0ID09PSBkZWZhdWx0U2V0VGltb3V0IHx8ICFjYWNoZWRTZXRUaW1lb3V0KSAmJiBzZXRUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfSBjYXRjaChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbChudWxsLCBmdW4sIDApO1xuICAgICAgICB9IGNhdGNoKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3JcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwodGhpcywgZnVuLCAwKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG59XG5mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQobWFya2VyKSB7XG4gICAgaWYgKGNhY2hlZENsZWFyVGltZW91dCA9PT0gY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIC8vIGlmIGNsZWFyVGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZENsZWFyVGltZW91dCA9PT0gZGVmYXVsdENsZWFyVGltZW91dCB8fCAhY2FjaGVkQ2xlYXJUaW1lb3V0KSAmJiBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0ICB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKG51bGwsIG1hcmtlcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3IuXG4gICAgICAgICAgICAvLyBTb21lIHZlcnNpb25zIG9mIEkuRS4gaGF2ZSBkaWZmZXJlbnQgcnVsZXMgZm9yIGNsZWFyVGltZW91dCB2cyBzZXRUaW1lb3V0XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwodGhpcywgbWFya2VyKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG5cbn1cbnZhciBxdWV1ZSA9IFtdO1xudmFyIGRyYWluaW5nID0gZmFsc2U7XG52YXIgY3VycmVudFF1ZXVlO1xudmFyIHF1ZXVlSW5kZXggPSAtMTtcblxuZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkge1xuICAgIGlmICghZHJhaW5pbmcgfHwgIWN1cnJlbnRRdWV1ZSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgaWYgKGN1cnJlbnRRdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcXVldWUgPSBjdXJyZW50UXVldWUuY29uY2F0KHF1ZXVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgfVxuICAgIGlmIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgZHJhaW5RdWV1ZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHtcbiAgICBpZiAoZHJhaW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgdGltZW91dCA9IHJ1blRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtcbiAgICBkcmFpbmluZyA9IHRydWU7XG5cbiAgICB2YXIgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIHdoaWxlKGxlbikge1xuICAgICAgICBjdXJyZW50UXVldWUgPSBxdWV1ZTtcbiAgICAgICAgcXVldWUgPSBbXTtcbiAgICAgICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRRdWV1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRRdWV1ZVtxdWV1ZUluZGV4XS5ydW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgICAgIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB9XG4gICAgY3VycmVudFF1ZXVlID0gbnVsbDtcbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIHJ1bkNsZWFyVGltZW91dCh0aW1lb3V0KTtcbn1cblxucHJvY2Vzcy5uZXh0VGljayA9IGZ1bmN0aW9uIChmdW4pIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSk7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5wdXNoKG5ldyBJdGVtKGZ1biwgYXJncykpO1xuICAgIGlmIChxdWV1ZS5sZW5ndGggPT09IDEgJiYgIWRyYWluaW5nKSB7XG4gICAgICAgIHJ1blRpbWVvdXQoZHJhaW5RdWV1ZSk7XG4gICAgfVxufTtcblxuLy8gdjggbGlrZXMgcHJlZGljdGlibGUgb2JqZWN0c1xuZnVuY3Rpb24gSXRlbShmdW4sIGFycmF5KSB7XG4gICAgdGhpcy5mdW4gPSBmdW47XG4gICAgdGhpcy5hcnJheSA9IGFycmF5O1xufVxuSXRlbS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZnVuLmFwcGx5KG51bGwsIHRoaXMuYXJyYXkpO1xufTtcbnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7XG5wcm9jZXNzLmJyb3dzZXIgPSB0cnVlO1xucHJvY2Vzcy5lbnYgPSB7fTtcbnByb2Nlc3MuYXJndiA9IFtdO1xucHJvY2Vzcy52ZXJzaW9uID0gJyc7IC8vIGVtcHR5IHN0cmluZyB0byBhdm9pZCByZWdleHAgaXNzdWVzXG5wcm9jZXNzLnZlcnNpb25zID0ge307XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5wcm9jZXNzLm9uID0gbm9vcDtcbnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5vbmNlID0gbm9vcDtcbnByb2Nlc3Mub2ZmID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBub29wO1xucHJvY2Vzcy5lbWl0ID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZE9uY2VMaXN0ZW5lciA9IG5vb3A7XG5cbnByb2Nlc3MubGlzdGVuZXJzID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIFtdIH1cblxucHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xuXG5wcm9jZXNzLmN3ZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICcvJyB9O1xucHJvY2Vzcy5jaGRpciA9IGZ1bmN0aW9uIChkaXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcbnByb2Nlc3MudW1hc2sgPSBmdW5jdGlvbigpIHsgcmV0dXJuIDA7IH07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9wcm9jZXNzL2Jyb3dzZXIuanNcbi8vIG1vZHVsZSBpZCA9IDE4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiLyoqXG4gKiBsb2Rhc2ggKEN1c3RvbSBCdWlsZCkgPGh0dHBzOi8vbG9kYXNoLmNvbS8+XG4gKiBCdWlsZDogYGxvZGFzaCBtb2R1bGFyaXplIGV4cG9ydHM9XCJucG1cIiAtbyAuL2BcbiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzIDxodHRwczovL2pxdWVyeS5vcmcvPlxuICogUmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UgPGh0dHBzOi8vbG9kYXNoLmNvbS9saWNlbnNlPlxuICogQmFzZWQgb24gVW5kZXJzY29yZS5qcyAxLjguMyA8aHR0cDovL3VuZGVyc2NvcmVqcy5vcmcvTElDRU5TRT5cbiAqIENvcHlyaWdodCBKZXJlbXkgQXNoa2VuYXMsIERvY3VtZW50Q2xvdWQgYW5kIEludmVzdGlnYXRpdmUgUmVwb3J0ZXJzICYgRWRpdG9yc1xuICovXG5cbi8qKiBVc2VkIGFzIHRoZSBgVHlwZUVycm9yYCBtZXNzYWdlIGZvciBcIkZ1bmN0aW9uc1wiIG1ldGhvZHMuICovXG52YXIgRlVOQ19FUlJPUl9URVhUID0gJ0V4cGVjdGVkIGEgZnVuY3Rpb24nO1xuXG4vKiogVXNlZCBhcyByZWZlcmVuY2VzIGZvciB2YXJpb3VzIGBOdW1iZXJgIGNvbnN0YW50cy4gKi9cbnZhciBOQU4gPSAwIC8gMDtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIHN5bWJvbFRhZyA9ICdbb2JqZWN0IFN5bWJvbF0nO1xuXG4vKiogVXNlZCB0byBtYXRjaCBsZWFkaW5nIGFuZCB0cmFpbGluZyB3aGl0ZXNwYWNlLiAqL1xudmFyIHJlVHJpbSA9IC9eXFxzK3xcXHMrJC9nO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgYmFkIHNpZ25lZCBoZXhhZGVjaW1hbCBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlSXNCYWRIZXggPSAvXlstK10weFswLTlhLWZdKyQvaTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IGJpbmFyeSBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlSXNCaW5hcnkgPSAvXjBiWzAxXSskL2k7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBvY3RhbCBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlSXNPY3RhbCA9IC9eMG9bMC03XSskL2k7XG5cbi8qKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyB3aXRob3V0IGEgZGVwZW5kZW5jeSBvbiBgcm9vdGAuICovXG52YXIgZnJlZVBhcnNlSW50ID0gcGFyc2VJbnQ7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgZ2xvYmFsYCBmcm9tIE5vZGUuanMuICovXG52YXIgZnJlZUdsb2JhbCA9IHR5cGVvZiBnbG9iYWwgPT0gJ29iamVjdCcgJiYgZ2xvYmFsICYmIGdsb2JhbC5PYmplY3QgPT09IE9iamVjdCAmJiBnbG9iYWw7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgc2VsZmAuICovXG52YXIgZnJlZVNlbGYgPSB0eXBlb2Ygc2VsZiA9PSAnb2JqZWN0JyAmJiBzZWxmICYmIHNlbGYuT2JqZWN0ID09PSBPYmplY3QgJiYgc2VsZjtcblxuLyoqIFVzZWQgYXMgYSByZWZlcmVuY2UgdG8gdGhlIGdsb2JhbCBvYmplY3QuICovXG52YXIgcm9vdCA9IGZyZWVHbG9iYWwgfHwgZnJlZVNlbGYgfHwgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqXG4gKiBVc2VkIHRvIHJlc29sdmUgdGhlXG4gKiBbYHRvU3RyaW5nVGFnYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtb2JqZWN0LnByb3RvdHlwZS50b3N0cmluZylcbiAqIG9mIHZhbHVlcy5cbiAqL1xudmFyIG9iamVjdFRvU3RyaW5nID0gb2JqZWN0UHJvdG8udG9TdHJpbmc7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIGZvciB0aG9zZSB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgb3RoZXIgYGxvZGFzaGAgbWV0aG9kcy4gKi9cbnZhciBuYXRpdmVNYXggPSBNYXRoLm1heCxcbiAgICBuYXRpdmVNaW4gPSBNYXRoLm1pbjtcblxuLyoqXG4gKiBHZXRzIHRoZSB0aW1lc3RhbXAgb2YgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgdGhhdCBoYXZlIGVsYXBzZWQgc2luY2VcbiAqIHRoZSBVbml4IGVwb2NoICgxIEphbnVhcnkgMTk3MCAwMDowMDowMCBVVEMpLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMi40LjBcbiAqIEBjYXRlZ29yeSBEYXRlXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSB0aW1lc3RhbXAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uZGVmZXIoZnVuY3Rpb24oc3RhbXApIHtcbiAqICAgY29uc29sZS5sb2coXy5ub3coKSAtIHN0YW1wKTtcbiAqIH0sIF8ubm93KCkpO1xuICogLy8gPT4gTG9ncyB0aGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyBpdCB0b29rIGZvciB0aGUgZGVmZXJyZWQgaW52b2NhdGlvbi5cbiAqL1xudmFyIG5vdyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcm9vdC5EYXRlLm5vdygpO1xufTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgZGVib3VuY2VkIGZ1bmN0aW9uIHRoYXQgZGVsYXlzIGludm9raW5nIGBmdW5jYCB1bnRpbCBhZnRlciBgd2FpdGBcbiAqIG1pbGxpc2Vjb25kcyBoYXZlIGVsYXBzZWQgc2luY2UgdGhlIGxhc3QgdGltZSB0aGUgZGVib3VuY2VkIGZ1bmN0aW9uIHdhc1xuICogaW52b2tlZC4gVGhlIGRlYm91bmNlZCBmdW5jdGlvbiBjb21lcyB3aXRoIGEgYGNhbmNlbGAgbWV0aG9kIHRvIGNhbmNlbFxuICogZGVsYXllZCBgZnVuY2AgaW52b2NhdGlvbnMgYW5kIGEgYGZsdXNoYCBtZXRob2QgdG8gaW1tZWRpYXRlbHkgaW52b2tlIHRoZW0uXG4gKiBQcm92aWRlIGBvcHRpb25zYCB0byBpbmRpY2F0ZSB3aGV0aGVyIGBmdW5jYCBzaG91bGQgYmUgaW52b2tlZCBvbiB0aGVcbiAqIGxlYWRpbmcgYW5kL29yIHRyYWlsaW5nIGVkZ2Ugb2YgdGhlIGB3YWl0YCB0aW1lb3V0LiBUaGUgYGZ1bmNgIGlzIGludm9rZWRcbiAqIHdpdGggdGhlIGxhc3QgYXJndW1lbnRzIHByb3ZpZGVkIHRvIHRoZSBkZWJvdW5jZWQgZnVuY3Rpb24uIFN1YnNlcXVlbnRcbiAqIGNhbGxzIHRvIHRoZSBkZWJvdW5jZWQgZnVuY3Rpb24gcmV0dXJuIHRoZSByZXN1bHQgb2YgdGhlIGxhc3QgYGZ1bmNgXG4gKiBpbnZvY2F0aW9uLlxuICpcbiAqICoqTm90ZToqKiBJZiBgbGVhZGluZ2AgYW5kIGB0cmFpbGluZ2Agb3B0aW9ucyBhcmUgYHRydWVgLCBgZnVuY2AgaXNcbiAqIGludm9rZWQgb24gdGhlIHRyYWlsaW5nIGVkZ2Ugb2YgdGhlIHRpbWVvdXQgb25seSBpZiB0aGUgZGVib3VuY2VkIGZ1bmN0aW9uXG4gKiBpcyBpbnZva2VkIG1vcmUgdGhhbiBvbmNlIGR1cmluZyB0aGUgYHdhaXRgIHRpbWVvdXQuXG4gKlxuICogSWYgYHdhaXRgIGlzIGAwYCBhbmQgYGxlYWRpbmdgIGlzIGBmYWxzZWAsIGBmdW5jYCBpbnZvY2F0aW9uIGlzIGRlZmVycmVkXG4gKiB1bnRpbCB0byB0aGUgbmV4dCB0aWNrLCBzaW1pbGFyIHRvIGBzZXRUaW1lb3V0YCB3aXRoIGEgdGltZW91dCBvZiBgMGAuXG4gKlxuICogU2VlIFtEYXZpZCBDb3JiYWNobydzIGFydGljbGVdKGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vZGVib3VuY2luZy10aHJvdHRsaW5nLWV4cGxhaW5lZC1leGFtcGxlcy8pXG4gKiBmb3IgZGV0YWlscyBvdmVyIHRoZSBkaWZmZXJlbmNlcyBiZXR3ZWVuIGBfLmRlYm91bmNlYCBhbmQgYF8udGhyb3R0bGVgLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBGdW5jdGlvblxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gZGVib3VuY2UuXG4gKiBAcGFyYW0ge251bWJlcn0gW3dhaXQ9MF0gVGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgdG8gZGVsYXkuXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnM9e31dIFRoZSBvcHRpb25zIG9iamVjdC5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMubGVhZGluZz1mYWxzZV1cbiAqICBTcGVjaWZ5IGludm9raW5nIG9uIHRoZSBsZWFkaW5nIGVkZ2Ugb2YgdGhlIHRpbWVvdXQuXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMubWF4V2FpdF1cbiAqICBUaGUgbWF4aW11bSB0aW1lIGBmdW5jYCBpcyBhbGxvd2VkIHRvIGJlIGRlbGF5ZWQgYmVmb3JlIGl0J3MgaW52b2tlZC5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMudHJhaWxpbmc9dHJ1ZV1cbiAqICBTcGVjaWZ5IGludm9raW5nIG9uIHRoZSB0cmFpbGluZyBlZGdlIG9mIHRoZSB0aW1lb3V0LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgZGVib3VuY2VkIGZ1bmN0aW9uLlxuICogQGV4YW1wbGVcbiAqXG4gKiAvLyBBdm9pZCBjb3N0bHkgY2FsY3VsYXRpb25zIHdoaWxlIHRoZSB3aW5kb3cgc2l6ZSBpcyBpbiBmbHV4LlxuICogalF1ZXJ5KHdpbmRvdykub24oJ3Jlc2l6ZScsIF8uZGVib3VuY2UoY2FsY3VsYXRlTGF5b3V0LCAxNTApKTtcbiAqXG4gKiAvLyBJbnZva2UgYHNlbmRNYWlsYCB3aGVuIGNsaWNrZWQsIGRlYm91bmNpbmcgc3Vic2VxdWVudCBjYWxscy5cbiAqIGpRdWVyeShlbGVtZW50KS5vbignY2xpY2snLCBfLmRlYm91bmNlKHNlbmRNYWlsLCAzMDAsIHtcbiAqICAgJ2xlYWRpbmcnOiB0cnVlLFxuICogICAndHJhaWxpbmcnOiBmYWxzZVxuICogfSkpO1xuICpcbiAqIC8vIEVuc3VyZSBgYmF0Y2hMb2dgIGlzIGludm9rZWQgb25jZSBhZnRlciAxIHNlY29uZCBvZiBkZWJvdW5jZWQgY2FsbHMuXG4gKiB2YXIgZGVib3VuY2VkID0gXy5kZWJvdW5jZShiYXRjaExvZywgMjUwLCB7ICdtYXhXYWl0JzogMTAwMCB9KTtcbiAqIHZhciBzb3VyY2UgPSBuZXcgRXZlbnRTb3VyY2UoJy9zdHJlYW0nKTtcbiAqIGpRdWVyeShzb3VyY2UpLm9uKCdtZXNzYWdlJywgZGVib3VuY2VkKTtcbiAqXG4gKiAvLyBDYW5jZWwgdGhlIHRyYWlsaW5nIGRlYm91bmNlZCBpbnZvY2F0aW9uLlxuICogalF1ZXJ5KHdpbmRvdykub24oJ3BvcHN0YXRlJywgZGVib3VuY2VkLmNhbmNlbCk7XG4gKi9cbmZ1bmN0aW9uIGRlYm91bmNlKGZ1bmMsIHdhaXQsIG9wdGlvbnMpIHtcbiAgdmFyIGxhc3RBcmdzLFxuICAgICAgbGFzdFRoaXMsXG4gICAgICBtYXhXYWl0LFxuICAgICAgcmVzdWx0LFxuICAgICAgdGltZXJJZCxcbiAgICAgIGxhc3RDYWxsVGltZSxcbiAgICAgIGxhc3RJbnZva2VUaW1lID0gMCxcbiAgICAgIGxlYWRpbmcgPSBmYWxzZSxcbiAgICAgIG1heGluZyA9IGZhbHNlLFxuICAgICAgdHJhaWxpbmcgPSB0cnVlO1xuXG4gIGlmICh0eXBlb2YgZnVuYyAhPSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihGVU5DX0VSUk9SX1RFWFQpO1xuICB9XG4gIHdhaXQgPSB0b051bWJlcih3YWl0KSB8fCAwO1xuICBpZiAoaXNPYmplY3Qob3B0aW9ucykpIHtcbiAgICBsZWFkaW5nID0gISFvcHRpb25zLmxlYWRpbmc7XG4gICAgbWF4aW5nID0gJ21heFdhaXQnIGluIG9wdGlvbnM7XG4gICAgbWF4V2FpdCA9IG1heGluZyA/IG5hdGl2ZU1heCh0b051bWJlcihvcHRpb25zLm1heFdhaXQpIHx8IDAsIHdhaXQpIDogbWF4V2FpdDtcbiAgICB0cmFpbGluZyA9ICd0cmFpbGluZycgaW4gb3B0aW9ucyA/ICEhb3B0aW9ucy50cmFpbGluZyA6IHRyYWlsaW5nO1xuICB9XG5cbiAgZnVuY3Rpb24gaW52b2tlRnVuYyh0aW1lKSB7XG4gICAgdmFyIGFyZ3MgPSBsYXN0QXJncyxcbiAgICAgICAgdGhpc0FyZyA9IGxhc3RUaGlzO1xuXG4gICAgbGFzdEFyZ3MgPSBsYXN0VGhpcyA9IHVuZGVmaW5lZDtcbiAgICBsYXN0SW52b2tlVGltZSA9IHRpbWU7XG4gICAgcmVzdWx0ID0gZnVuYy5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gbGVhZGluZ0VkZ2UodGltZSkge1xuICAgIC8vIFJlc2V0IGFueSBgbWF4V2FpdGAgdGltZXIuXG4gICAgbGFzdEludm9rZVRpbWUgPSB0aW1lO1xuICAgIC8vIFN0YXJ0IHRoZSB0aW1lciBmb3IgdGhlIHRyYWlsaW5nIGVkZ2UuXG4gICAgdGltZXJJZCA9IHNldFRpbWVvdXQodGltZXJFeHBpcmVkLCB3YWl0KTtcbiAgICAvLyBJbnZva2UgdGhlIGxlYWRpbmcgZWRnZS5cbiAgICByZXR1cm4gbGVhZGluZyA/IGludm9rZUZ1bmModGltZSkgOiByZXN1bHQ7XG4gIH1cblxuICBmdW5jdGlvbiByZW1haW5pbmdXYWl0KHRpbWUpIHtcbiAgICB2YXIgdGltZVNpbmNlTGFzdENhbGwgPSB0aW1lIC0gbGFzdENhbGxUaW1lLFxuICAgICAgICB0aW1lU2luY2VMYXN0SW52b2tlID0gdGltZSAtIGxhc3RJbnZva2VUaW1lLFxuICAgICAgICByZXN1bHQgPSB3YWl0IC0gdGltZVNpbmNlTGFzdENhbGw7XG5cbiAgICByZXR1cm4gbWF4aW5nID8gbmF0aXZlTWluKHJlc3VsdCwgbWF4V2FpdCAtIHRpbWVTaW5jZUxhc3RJbnZva2UpIDogcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gc2hvdWxkSW52b2tlKHRpbWUpIHtcbiAgICB2YXIgdGltZVNpbmNlTGFzdENhbGwgPSB0aW1lIC0gbGFzdENhbGxUaW1lLFxuICAgICAgICB0aW1lU2luY2VMYXN0SW52b2tlID0gdGltZSAtIGxhc3RJbnZva2VUaW1lO1xuXG4gICAgLy8gRWl0aGVyIHRoaXMgaXMgdGhlIGZpcnN0IGNhbGwsIGFjdGl2aXR5IGhhcyBzdG9wcGVkIGFuZCB3ZSdyZSBhdCB0aGVcbiAgICAvLyB0cmFpbGluZyBlZGdlLCB0aGUgc3lzdGVtIHRpbWUgaGFzIGdvbmUgYmFja3dhcmRzIGFuZCB3ZSdyZSB0cmVhdGluZ1xuICAgIC8vIGl0IGFzIHRoZSB0cmFpbGluZyBlZGdlLCBvciB3ZSd2ZSBoaXQgdGhlIGBtYXhXYWl0YCBsaW1pdC5cbiAgICByZXR1cm4gKGxhc3RDYWxsVGltZSA9PT0gdW5kZWZpbmVkIHx8ICh0aW1lU2luY2VMYXN0Q2FsbCA+PSB3YWl0KSB8fFxuICAgICAgKHRpbWVTaW5jZUxhc3RDYWxsIDwgMCkgfHwgKG1heGluZyAmJiB0aW1lU2luY2VMYXN0SW52b2tlID49IG1heFdhaXQpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRpbWVyRXhwaXJlZCgpIHtcbiAgICB2YXIgdGltZSA9IG5vdygpO1xuICAgIGlmIChzaG91bGRJbnZva2UodGltZSkpIHtcbiAgICAgIHJldHVybiB0cmFpbGluZ0VkZ2UodGltZSk7XG4gICAgfVxuICAgIC8vIFJlc3RhcnQgdGhlIHRpbWVyLlxuICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgcmVtYWluaW5nV2FpdCh0aW1lKSk7XG4gIH1cblxuICBmdW5jdGlvbiB0cmFpbGluZ0VkZ2UodGltZSkge1xuICAgIHRpbWVySWQgPSB1bmRlZmluZWQ7XG5cbiAgICAvLyBPbmx5IGludm9rZSBpZiB3ZSBoYXZlIGBsYXN0QXJnc2Agd2hpY2ggbWVhbnMgYGZ1bmNgIGhhcyBiZWVuXG4gICAgLy8gZGVib3VuY2VkIGF0IGxlYXN0IG9uY2UuXG4gICAgaWYgKHRyYWlsaW5nICYmIGxhc3RBcmdzKSB7XG4gICAgICByZXR1cm4gaW52b2tlRnVuYyh0aW1lKTtcbiAgICB9XG4gICAgbGFzdEFyZ3MgPSBsYXN0VGhpcyA9IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gY2FuY2VsKCkge1xuICAgIGlmICh0aW1lcklkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lcklkKTtcbiAgICB9XG4gICAgbGFzdEludm9rZVRpbWUgPSAwO1xuICAgIGxhc3RBcmdzID0gbGFzdENhbGxUaW1lID0gbGFzdFRoaXMgPSB0aW1lcklkID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgZnVuY3Rpb24gZmx1c2goKSB7XG4gICAgcmV0dXJuIHRpbWVySWQgPT09IHVuZGVmaW5lZCA/IHJlc3VsdCA6IHRyYWlsaW5nRWRnZShub3coKSk7XG4gIH1cblxuICBmdW5jdGlvbiBkZWJvdW5jZWQoKSB7XG4gICAgdmFyIHRpbWUgPSBub3coKSxcbiAgICAgICAgaXNJbnZva2luZyA9IHNob3VsZEludm9rZSh0aW1lKTtcblxuICAgIGxhc3RBcmdzID0gYXJndW1lbnRzO1xuICAgIGxhc3RUaGlzID0gdGhpcztcbiAgICBsYXN0Q2FsbFRpbWUgPSB0aW1lO1xuXG4gICAgaWYgKGlzSW52b2tpbmcpIHtcbiAgICAgIGlmICh0aW1lcklkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIGxlYWRpbmdFZGdlKGxhc3RDYWxsVGltZSk7XG4gICAgICB9XG4gICAgICBpZiAobWF4aW5nKSB7XG4gICAgICAgIC8vIEhhbmRsZSBpbnZvY2F0aW9ucyBpbiBhIHRpZ2h0IGxvb3AuXG4gICAgICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgd2FpdCk7XG4gICAgICAgIHJldHVybiBpbnZva2VGdW5jKGxhc3RDYWxsVGltZSk7XG4gICAgICB9XG4gICAgfVxuICAgIGlmICh0aW1lcklkID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgd2FpdCk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgZGVib3VuY2VkLmNhbmNlbCA9IGNhbmNlbDtcbiAgZGVib3VuY2VkLmZsdXNoID0gZmx1c2g7XG4gIHJldHVybiBkZWJvdW5jZWQ7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgdGhlXG4gKiBbbGFuZ3VhZ2UgdHlwZV0oaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLWVjbWFzY3JpcHQtbGFuZ3VhZ2UtdHlwZXMpXG4gKiBvZiBgT2JqZWN0YC4gKGUuZy4gYXJyYXlzLCBmdW5jdGlvbnMsIG9iamVjdHMsIHJlZ2V4ZXMsIGBuZXcgTnVtYmVyKDApYCwgYW5kIGBuZXcgU3RyaW5nKCcnKWApXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gb2JqZWN0LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNPYmplY3Qoe30pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KF8ubm9vcCk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChudWxsKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICByZXR1cm4gISF2YWx1ZSAmJiAodHlwZSA9PSAnb2JqZWN0JyB8fCB0eXBlID09ICdmdW5jdGlvbicpO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIG9iamVjdC1saWtlLiBBIHZhbHVlIGlzIG9iamVjdC1saWtlIGlmIGl0J3Mgbm90IGBudWxsYFxuICogYW5kIGhhcyBhIGB0eXBlb2ZgIHJlc3VsdCBvZiBcIm9iamVjdFwiLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIG9iamVjdC1saWtlLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKHt9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKG51bGwpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNPYmplY3RMaWtlKHZhbHVlKSB7XG4gIHJldHVybiAhIXZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PSAnb2JqZWN0Jztcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGEgYFN5bWJvbGAgcHJpbWl0aXZlIG9yIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHN5bWJvbCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzU3ltYm9sKFN5bWJvbC5pdGVyYXRvcik7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc1N5bWJvbCgnYWJjJyk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N5bWJvbCh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdzeW1ib2wnIHx8XG4gICAgKGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgb2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT0gc3ltYm9sVGFnKTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgbnVtYmVyLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBwcm9jZXNzLlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgbnVtYmVyLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLnRvTnVtYmVyKDMuMik7XG4gKiAvLyA9PiAzLjJcbiAqXG4gKiBfLnRvTnVtYmVyKE51bWJlci5NSU5fVkFMVUUpO1xuICogLy8gPT4gNWUtMzI0XG4gKlxuICogXy50b051bWJlcihJbmZpbml0eSk7XG4gKiAvLyA9PiBJbmZpbml0eVxuICpcbiAqIF8udG9OdW1iZXIoJzMuMicpO1xuICogLy8gPT4gMy4yXG4gKi9cbmZ1bmN0aW9uIHRvTnVtYmVyKHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgaWYgKGlzU3ltYm9sKHZhbHVlKSkge1xuICAgIHJldHVybiBOQU47XG4gIH1cbiAgaWYgKGlzT2JqZWN0KHZhbHVlKSkge1xuICAgIHZhciBvdGhlciA9IHR5cGVvZiB2YWx1ZS52YWx1ZU9mID09ICdmdW5jdGlvbicgPyB2YWx1ZS52YWx1ZU9mKCkgOiB2YWx1ZTtcbiAgICB2YWx1ZSA9IGlzT2JqZWN0KG90aGVyKSA/IChvdGhlciArICcnKSA6IG90aGVyO1xuICB9XG4gIGlmICh0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IDAgPyB2YWx1ZSA6ICt2YWx1ZTtcbiAgfVxuICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UocmVUcmltLCAnJyk7XG4gIHZhciBpc0JpbmFyeSA9IHJlSXNCaW5hcnkudGVzdCh2YWx1ZSk7XG4gIHJldHVybiAoaXNCaW5hcnkgfHwgcmVJc09jdGFsLnRlc3QodmFsdWUpKVxuICAgID8gZnJlZVBhcnNlSW50KHZhbHVlLnNsaWNlKDIpLCBpc0JpbmFyeSA/IDIgOiA4KVxuICAgIDogKHJlSXNCYWRIZXgudGVzdCh2YWx1ZSkgPyBOQU4gOiArdmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRlYm91bmNlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoLmRlYm91bmNlL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSIsImV4cG9ydCBjb25zdCBvbiA9IChldnROYW1lLCBvcHRzKSA9PiAoZWwpID0+IChmbikgPT4ge1xuICBlbC5hZGRFdmVudExpc3RlbmVyKGV2dE5hbWUsIGZuLCBvcHRzKVxuICByZXR1cm4gKCkgPT4ge1xuICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZ0TmFtZSwgZm4pXG4gICAgZm4uY2FuY2VsICYmIGZuLmNhbmNlbCgpXG4gIH1cbn1cblxuY29uc3QgaXNCZXR3ZWVuID0gKG1pbkluY2x1c2l2ZSwgbWF4KSA9PiAodGFyZ2V0KSA9PiBNYXRoLm1heChNYXRoLm1pbihtYXgsIHRhcmdldCksIG1pbkluY2x1c2l2ZSkgPT09IHRhcmdldFxuY29uc3QgaXNCb3VuZGluZ0NsaWVudFJlY3RJblJhbmdlID0gKHsgdGFyZ2V0UmVjdCwgYm91bmRpbmdSZWN0LCBmdWxseUNvbnRhaW5lZCB9KSA9PiB7XG4gIGNvbnN0IGhvcml6Qm91bmRzID0gaXNCZXR3ZWVuKGJvdW5kaW5nUmVjdC5sZWZ0LCBib3VuZGluZ1JlY3QucmlnaHQpXG4gIGNvbnN0IHZlcnRCb3VuZHMgPSBpc0JldHdlZW4oYm91bmRpbmdSZWN0LnRvcCwgYm91bmRpbmdSZWN0LmJvdHRvbSlcbiAgcmV0dXJuIGZ1bGx5Q29udGFpbmVkXG4gICAgPyBob3JpekJvdW5kcyh0YXJnZXRSZWN0LmxlZnQpICYmIGhvcml6Qm91bmRzKHRhcmdldFJlY3QucmlnaHQpICYmXG4gICAgICB2ZXJ0Qm91bmRzKHRhcmdldFJlY3QudG9wKSAmJiB2ZXJ0Qm91bmRzKHRhcmdldFJlY3QuYm90dG9tKVxuICAgIDogaG9yaXpCb3VuZHModGFyZ2V0UmVjdC5sZWZ0KSB8fCBob3JpekJvdW5kcyh0YXJnZXRSZWN0LnJpZ2h0KSB8fFxuICAgICAgdmVydEJvdW5kcyh0YXJnZXRSZWN0LnRvcCkgfHwgdmVydEJvdW5kcyh0YXJnZXRSZWN0LmJvdHRvbSlcbn1cblxuZXhwb3J0IGNvbnN0IGluVmlld3BvcnQgPSAoe1xuICB0aHJlc2hvbGQgPSAwLFxuICBvZmZzZXRWZXJ0ID0gd2luZG93LmlubmVySGVpZ2h0ICogdGhyZXNob2xkLFxuICBvZmZzZXRIb3JpeiA9IHdpbmRvdy5pbm5lcldpZHRoICogdGhyZXNob2xkLFxuICBib3VuZGluZ0xlZnQsXG4gIGJvdW5kaW5nUmlnaHQsXG4gIHJlcXVpcmVFbnRpcmVFbGVtZW50SW5WaWV3cG9ydCA9IGZhbHNlXG59ID0ge30pID0+IHtcbiAgY29uc3QgaXNFbEluVmlldyA9IChlbGVtZW50KSA9PiB7XG4gICAgaWYgKCFlbGVtZW50KSByZXR1cm4gZmFsc2VcbiAgICBpZiAoIWVsZW1lbnQub2Zmc2V0UGFyZW50KSByZXR1cm4gdHJ1ZVxuICAgIGNvbnN0IGhvcml6TWluID0gMCAtIG9mZnNldEhvcml6XG4gICAgY29uc3QgaG9yaXpNYXggPSB3aW5kb3cuaW5uZXJXaWR0aCArIG9mZnNldEhvcml6XG4gICAgY29uc3QgdmVydE1pbiA9IDAgLSBvZmZzZXRWZXJ0XG4gICAgY29uc3QgdmVydE1heCA9IHdpbmRvdy5pbm5lckhlaWdodCArIG9mZnNldFZlcnRcbiAgICByZXR1cm4gaXNCb3VuZGluZ0NsaWVudFJlY3RJblJhbmdlKHtcbiAgICAgIHRhcmdldFJlY3Q6IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksXG4gICAgICBib3VuZGluZ1JlY3Q6IHtcbiAgICAgICAgdG9wOiB2ZXJ0TWluLFxuICAgICAgICBib3R0b206IHZlcnRNYXgsXG4gICAgICAgIGxlZnQ6IGlzTmFOKGJvdW5kaW5nTGVmdCkgPyBob3Jpek1pbiA6IGJvdW5kaW5nTGVmdCxcbiAgICAgICAgcmlnaHQ6IGlzTmFOKGJvdW5kaW5nUmlnaHQpID8gaG9yaXpNYXggOiBib3VuZGluZ1JpZ2h0IH0sXG4gICAgICBmdWxseUNvbnRhaW5lZDogcmVxdWlyZUVudGlyZUVsZW1lbnRJblZpZXdwb3J0IH0pXG4gIH1cblxuICByZXR1cm4gaXNFbEluVmlld1xufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3V0aWwuanMiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyByZW5kZXIgfSBmcm9tICdyZWFjdC1kb20nXG5pbXBvcnQgSW5WaWV3IGZyb20gJy4vc3JjJ1xuaW1wb3J0IHsgYm9vbCwgbnVtYmVyIH0gZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBtYXJrZWQgZnJvbSAnbWFya2VkJ1xuXG5jb25zdCBjb2xvcnMgPSBbXG4gICcjZjQ3NDY3JyxcbiAgJyM5NWRkMTInLFxuICAnIzI0YzBlZCcsXG4gICcjMGFmMWJhJyxcbiAgJyNkZWNjZWQnLFxuICAnI2JkZjZjMCcsXG4gICcjZTdlZTI4JyxcbiAgJyNlMDgzODgnLFxuICAnIzYyZmQxZScsXG4gICcjZWFhMzBhJ1xuXVxuXG5jbGFzcyBCb3ggZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcHR5cGVzID0ge1xuICAgIGlzSW5WaWV3OiBib29sLFxuICAgIGk6IG51bWJlci5pc1JlcXVpcmVkXG4gIH1cblxuICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIChuZXh0UHJvcHMpIHtcbiAgICBpZiAobmV4dFByb3BzLmlzSW5WaWV3ICYmICF0aGlzLnByb3BzLmlzSW5WaWV3KSB7XG4gICAgICB3aW5kb3cuZG9jdW1lbnQudGl0bGUgPSB0aGlzLnByb3BzLmkgKyAxXG4gICAgfVxuICB9XG5cbiAgcmVuZGVyICgpIHtcbiAgICBjb25zdCB7IGkgfSA9IHRoaXMucHJvcHNcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3hcIiBzdHlsZT17eyBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9yc1tpXSB9fT5cbiAgICAgICAgPGgzPjxjb2RlPmxvY2F0aW9uLnRpdGxlPC9jb2RlPiBzaG91bGQgbm93IGJlIHtpICsgMX08L2gzPlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59XG5cbmNsYXNzIERlbW8gZXh0ZW5kcyBDb21wb25lbnQge1xuICB1cGRhdGVUaXRsZSA9IChzKSA9PiAoKSA9PiB7XG4gICAgd2luZG93LmRvY3VtZW50LnRpdGxlID0gc1xuICB9XG5cbiAgcmVuZGVyICgpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBzdHlsZT17eyBoZWlnaHQ6ICdjYWxjKDEwMHZoICogMTApJyB9fT5cbiAgICAgICAge0FycmF5KDEwKS5maWxsKCkubWFwKChfLCBpKSA9PlxuICAgICAgICAgIDxJblZpZXcga2V5PXtpfSB0aHJlc2hvbGQ9ezB9PlxuICAgICAgICAgICAgeyhpc0luVmlldykgPT5cbiAgICAgICAgICAgICAgPEJveCBpPXtpfSBpc0luVmlldz17aXNJblZpZXd9IC8+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgPC9JblZpZXc+XG4gICAgICAgICl9XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn1cblxuY2xhc3MgRG9jcyBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRlID0geyBkb2NzOiAnJyB9XG5cbiAgY29tcG9uZW50V2lsbE1vdW50ICgpIHtcbiAgICB3aW5kb3cuZmV0Y2goJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9qYW5lL3JlYWN0LW5vdy15b3Utc2VlLW1lL21hc3Rlci9SRUFETUUubWQnKVxuICAgICAgLnRoZW4oKGEpID0+IGEudGV4dCgpKVxuICAgICAgLnRoZW4oKHQpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGRvY3M6IG1hcmtlZCh0KSB9KVxuICAgICAgfSlcbiAgICAgIC5jYXRjaChjb25zb2xlLmVycm9yKVxuICB9XG5cbiAgcmVuZGVyICgpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3cmFwcGVyXCI+XG4gICAgICAgIDxkaXYgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiB0aGlzLnN0YXRlLmRvY3MgfX0gY2xhc3NOYW1lPVwibWRcIiAvPlxuICAgICAgICA8RGVtbyAvPlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59XG5cbnJlbmRlcig8RG9jcyAvPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKSlcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Rldi5qcyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9ICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmXG4gICAgU3ltYm9sLmZvciAmJlxuICAgIFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSkgfHxcbiAgICAweGVhYzc7XG5cbiAgdmFyIGlzVmFsaWRFbGVtZW50ID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmXG4gICAgICBvYmplY3QgIT09IG51bGwgJiZcbiAgICAgIG9iamVjdC4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFO1xuICB9O1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoaXNWYWxpZEVsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDIyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW1wdHlGdW5jdGlvbiA9IHJlcXVpcmUoJ2ZianMvbGliL2VtcHR5RnVuY3Rpb24nKTtcbnZhciBpbnZhcmlhbnQgPSByZXF1aXJlKCdmYmpzL2xpYi9pbnZhcmlhbnQnKTtcbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpbnZhcmlhbnQoXG4gICAgICBmYWxzZSxcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMgPSBlbXB0eUZ1bmN0aW9uO1xuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanNcbi8vIG1vZHVsZSBpZCA9IDIzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIHZhbGlkYXRlRm9ybWF0ID0gZnVuY3Rpb24gdmFsaWRhdGVGb3JtYXQoZm9ybWF0KSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFsaWRhdGVGb3JtYXQgPSBmdW5jdGlvbiB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpO1xuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgKyAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICB9KSk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pbnZhcmlhbnQuanNcbi8vIG1vZHVsZSBpZCA9IDI0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanNcbi8vIG1vZHVsZSBpZCA9IDI1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8qKlxuICogbWFya2VkIC0gYSBtYXJrZG93biBwYXJzZXJcbiAqIENvcHlyaWdodCAoYykgMjAxMS0yMDE0LCBDaHJpc3RvcGhlciBKZWZmcmV5LiAoTUlUIExpY2Vuc2VkKVxuICogaHR0cHM6Ly9naXRodWIuY29tL2NoamovbWFya2VkXG4gKi9cblxuOyhmdW5jdGlvbigpIHtcbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBCbG9jay1MZXZlbCBHcmFtbWFyXG4gKi9cblxudmFyIGJsb2NrID0ge1xuICBuZXdsaW5lOiAvXlxcbisvLFxuICBjb2RlOiAvXiggezR9W15cXG5dK1xcbiopKy8sXG4gIGZlbmNlczogbm9vcCxcbiAgaHI6IC9eKCAqWy0qX10pezMsfSAqKD86XFxuK3wkKS8sXG4gIGhlYWRpbmc6IC9eICooI3sxLDZ9KSAqKFteXFxuXSs/KSAqIyogKig/Olxcbit8JCkvLFxuICBucHRhYmxlOiBub29wLFxuICBsaGVhZGluZzogL14oW15cXG5dKylcXG4gKig9fC0pezIsfSAqKD86XFxuK3wkKS8sXG4gIGJsb2NrcXVvdGU6IC9eKCAqPlteXFxuXSsoXFxuKD8hZGVmKVteXFxuXSspKlxcbiopKy8sXG4gIGxpc3Q6IC9eKCAqKShidWxsKSBbXFxzXFxTXSs/KD86aHJ8ZGVmfFxcbnsyLH0oPyEgKSg/IVxcMWJ1bGwgKVxcbip8XFxzKiQpLyxcbiAgaHRtbDogL14gKig/OmNvbW1lbnQgKig/OlxcbnxcXHMqJCl8Y2xvc2VkICooPzpcXG57Mix9fFxccyokKXxjbG9zaW5nICooPzpcXG57Mix9fFxccyokKSkvLFxuICBkZWY6IC9eICpcXFsoW15cXF1dKylcXF06ICo8PyhbXlxccz5dKyk+Pyg/OiArW1wiKF0oW15cXG5dKylbXCIpXSk/ICooPzpcXG4rfCQpLyxcbiAgdGFibGU6IG5vb3AsXG4gIHBhcmFncmFwaDogL14oKD86W15cXG5dK1xcbj8oPyFocnxoZWFkaW5nfGxoZWFkaW5nfGJsb2NrcXVvdGV8dGFnfGRlZikpKylcXG4qLyxcbiAgdGV4dDogL15bXlxcbl0rL1xufTtcblxuYmxvY2suYnVsbGV0ID0gLyg/OlsqKy1dfFxcZCtcXC4pLztcbmJsb2NrLml0ZW0gPSAvXiggKikoYnVsbCkgW15cXG5dKig/Olxcbig/IVxcMWJ1bGwgKVteXFxuXSopKi87XG5ibG9jay5pdGVtID0gcmVwbGFjZShibG9jay5pdGVtLCAnZ20nKVxuICAoL2J1bGwvZywgYmxvY2suYnVsbGV0KVxuICAoKTtcblxuYmxvY2subGlzdCA9IHJlcGxhY2UoYmxvY2subGlzdClcbiAgKC9idWxsL2csIGJsb2NrLmJ1bGxldClcbiAgKCdocicsICdcXFxcbisoPz1cXFxcMT8oPzpbLSpfXSAqKXszLH0oPzpcXFxcbit8JCkpJylcbiAgKCdkZWYnLCAnXFxcXG4rKD89JyArIGJsb2NrLmRlZi5zb3VyY2UgKyAnKScpXG4gICgpO1xuXG5ibG9jay5ibG9ja3F1b3RlID0gcmVwbGFjZShibG9jay5ibG9ja3F1b3RlKVxuICAoJ2RlZicsIGJsb2NrLmRlZilcbiAgKCk7XG5cbmJsb2NrLl90YWcgPSAnKD8hKD86J1xuICArICdhfGVtfHN0cm9uZ3xzbWFsbHxzfGNpdGV8cXxkZm58YWJicnxkYXRhfHRpbWV8Y29kZSdcbiAgKyAnfHZhcnxzYW1wfGtiZHxzdWJ8c3VwfGl8Ynx1fG1hcmt8cnVieXxydHxycHxiZGl8YmRvJ1xuICArICd8c3Bhbnxicnx3YnJ8aW5zfGRlbHxpbWcpXFxcXGIpXFxcXHcrKD8hOi98W15cXFxcd1xcXFxzQF0qQClcXFxcYic7XG5cbmJsb2NrLmh0bWwgPSByZXBsYWNlKGJsb2NrLmh0bWwpXG4gICgnY29tbWVudCcsIC88IS0tW1xcc1xcU10qPy0tPi8pXG4gICgnY2xvc2VkJywgLzwodGFnKVtcXHNcXFNdKz88XFwvXFwxPi8pXG4gICgnY2xvc2luZycsIC88dGFnKD86XCJbXlwiXSpcInwnW14nXSonfFteJ1wiPl0pKj8+LylcbiAgKC90YWcvZywgYmxvY2suX3RhZylcbiAgKCk7XG5cbmJsb2NrLnBhcmFncmFwaCA9IHJlcGxhY2UoYmxvY2sucGFyYWdyYXBoKVxuICAoJ2hyJywgYmxvY2suaHIpXG4gICgnaGVhZGluZycsIGJsb2NrLmhlYWRpbmcpXG4gICgnbGhlYWRpbmcnLCBibG9jay5saGVhZGluZylcbiAgKCdibG9ja3F1b3RlJywgYmxvY2suYmxvY2txdW90ZSlcbiAgKCd0YWcnLCAnPCcgKyBibG9jay5fdGFnKVxuICAoJ2RlZicsIGJsb2NrLmRlZilcbiAgKCk7XG5cbi8qKlxuICogTm9ybWFsIEJsb2NrIEdyYW1tYXJcbiAqL1xuXG5ibG9jay5ub3JtYWwgPSBtZXJnZSh7fSwgYmxvY2spO1xuXG4vKipcbiAqIEdGTSBCbG9jayBHcmFtbWFyXG4gKi9cblxuYmxvY2suZ2ZtID0gbWVyZ2Uoe30sIGJsb2NrLm5vcm1hbCwge1xuICBmZW5jZXM6IC9eICooYHszLH18fnszLH0pWyBcXC5dKihcXFMrKT8gKlxcbihbXFxzXFxTXSo/KVxccypcXDEgKig/Olxcbit8JCkvLFxuICBwYXJhZ3JhcGg6IC9eLyxcbiAgaGVhZGluZzogL14gKigjezEsNn0pICsoW15cXG5dKz8pICojKiAqKD86XFxuK3wkKS9cbn0pO1xuXG5ibG9jay5nZm0ucGFyYWdyYXBoID0gcmVwbGFjZShibG9jay5wYXJhZ3JhcGgpXG4gICgnKD8hJywgJyg/ISdcbiAgICArIGJsb2NrLmdmbS5mZW5jZXMuc291cmNlLnJlcGxhY2UoJ1xcXFwxJywgJ1xcXFwyJykgKyAnfCdcbiAgICArIGJsb2NrLmxpc3Quc291cmNlLnJlcGxhY2UoJ1xcXFwxJywgJ1xcXFwzJykgKyAnfCcpXG4gICgpO1xuXG4vKipcbiAqIEdGTSArIFRhYmxlcyBCbG9jayBHcmFtbWFyXG4gKi9cblxuYmxvY2sudGFibGVzID0gbWVyZ2Uoe30sIGJsb2NrLmdmbSwge1xuICBucHRhYmxlOiAvXiAqKFxcUy4qXFx8LiopXFxuICooWy06XSsgKlxcfFstfCA6XSopXFxuKCg/Oi4qXFx8LiooPzpcXG58JCkpKilcXG4qLyxcbiAgdGFibGU6IC9eICpcXHwoLispXFxuICpcXHwoICpbLTpdK1stfCA6XSopXFxuKCg/OiAqXFx8LiooPzpcXG58JCkpKilcXG4qL1xufSk7XG5cbi8qKlxuICogQmxvY2sgTGV4ZXJcbiAqL1xuXG5mdW5jdGlvbiBMZXhlcihvcHRpb25zKSB7XG4gIHRoaXMudG9rZW5zID0gW107XG4gIHRoaXMudG9rZW5zLmxpbmtzID0ge307XG4gIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgfHwgbWFya2VkLmRlZmF1bHRzO1xuICB0aGlzLnJ1bGVzID0gYmxvY2subm9ybWFsO1xuXG4gIGlmICh0aGlzLm9wdGlvbnMuZ2ZtKSB7XG4gICAgaWYgKHRoaXMub3B0aW9ucy50YWJsZXMpIHtcbiAgICAgIHRoaXMucnVsZXMgPSBibG9jay50YWJsZXM7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucnVsZXMgPSBibG9jay5nZm07XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogRXhwb3NlIEJsb2NrIFJ1bGVzXG4gKi9cblxuTGV4ZXIucnVsZXMgPSBibG9jaztcblxuLyoqXG4gKiBTdGF0aWMgTGV4IE1ldGhvZFxuICovXG5cbkxleGVyLmxleCA9IGZ1bmN0aW9uKHNyYywgb3B0aW9ucykge1xuICB2YXIgbGV4ZXIgPSBuZXcgTGV4ZXIob3B0aW9ucyk7XG4gIHJldHVybiBsZXhlci5sZXgoc3JjKTtcbn07XG5cbi8qKlxuICogUHJlcHJvY2Vzc2luZ1xuICovXG5cbkxleGVyLnByb3RvdHlwZS5sZXggPSBmdW5jdGlvbihzcmMpIHtcbiAgc3JjID0gc3JjXG4gICAgLnJlcGxhY2UoL1xcclxcbnxcXHIvZywgJ1xcbicpXG4gICAgLnJlcGxhY2UoL1xcdC9nLCAnICAgICcpXG4gICAgLnJlcGxhY2UoL1xcdTAwYTAvZywgJyAnKVxuICAgIC5yZXBsYWNlKC9cXHUyNDI0L2csICdcXG4nKTtcblxuICByZXR1cm4gdGhpcy50b2tlbihzcmMsIHRydWUpO1xufTtcblxuLyoqXG4gKiBMZXhpbmdcbiAqL1xuXG5MZXhlci5wcm90b3R5cGUudG9rZW4gPSBmdW5jdGlvbihzcmMsIHRvcCwgYnEpIHtcbiAgdmFyIHNyYyA9IHNyYy5yZXBsYWNlKC9eICskL2dtLCAnJylcbiAgICAsIG5leHRcbiAgICAsIGxvb3NlXG4gICAgLCBjYXBcbiAgICAsIGJ1bGxcbiAgICAsIGJcbiAgICAsIGl0ZW1cbiAgICAsIHNwYWNlXG4gICAgLCBpXG4gICAgLCBsO1xuXG4gIHdoaWxlIChzcmMpIHtcbiAgICAvLyBuZXdsaW5lXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMubmV3bGluZS5leGVjKHNyYykpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICBpZiAoY2FwWzBdLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgdGhpcy50b2tlbnMucHVzaCh7XG4gICAgICAgICAgdHlwZTogJ3NwYWNlJ1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjb2RlXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuY29kZS5leGVjKHNyYykpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICBjYXAgPSBjYXBbMF0ucmVwbGFjZSgvXiB7NH0vZ20sICcnKTtcbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAnY29kZScsXG4gICAgICAgIHRleHQ6ICF0aGlzLm9wdGlvbnMucGVkYW50aWNcbiAgICAgICAgICA/IGNhcC5yZXBsYWNlKC9cXG4rJC8sICcnKVxuICAgICAgICAgIDogY2FwXG4gICAgICB9KTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGZlbmNlcyAoZ2ZtKVxuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmZlbmNlcy5leGVjKHNyYykpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICB0aGlzLnRva2Vucy5wdXNoKHtcbiAgICAgICAgdHlwZTogJ2NvZGUnLFxuICAgICAgICBsYW5nOiBjYXBbMl0sXG4gICAgICAgIHRleHQ6IGNhcFszXSB8fCAnJ1xuICAgICAgfSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBoZWFkaW5nXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuaGVhZGluZy5leGVjKHNyYykpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICB0aGlzLnRva2Vucy5wdXNoKHtcbiAgICAgICAgdHlwZTogJ2hlYWRpbmcnLFxuICAgICAgICBkZXB0aDogY2FwWzFdLmxlbmd0aCxcbiAgICAgICAgdGV4dDogY2FwWzJdXG4gICAgICB9KTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIHRhYmxlIG5vIGxlYWRpbmcgcGlwZSAoZ2ZtKVxuICAgIGlmICh0b3AgJiYgKGNhcCA9IHRoaXMucnVsZXMubnB0YWJsZS5leGVjKHNyYykpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuXG4gICAgICBpdGVtID0ge1xuICAgICAgICB0eXBlOiAndGFibGUnLFxuICAgICAgICBoZWFkZXI6IGNhcFsxXS5yZXBsYWNlKC9eICp8ICpcXHwgKiQvZywgJycpLnNwbGl0KC8gKlxcfCAqLyksXG4gICAgICAgIGFsaWduOiBjYXBbMl0ucmVwbGFjZSgvXiAqfFxcfCAqJC9nLCAnJykuc3BsaXQoLyAqXFx8ICovKSxcbiAgICAgICAgY2VsbHM6IGNhcFszXS5yZXBsYWNlKC9cXG4kLywgJycpLnNwbGl0KCdcXG4nKVxuICAgICAgfTtcblxuICAgICAgZm9yIChpID0gMDsgaSA8IGl0ZW0uYWxpZ24ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKC9eICotKzogKiQvLnRlc3QoaXRlbS5hbGlnbltpXSkpIHtcbiAgICAgICAgICBpdGVtLmFsaWduW2ldID0gJ3JpZ2h0JztcbiAgICAgICAgfSBlbHNlIGlmICgvXiAqOi0rOiAqJC8udGVzdChpdGVtLmFsaWduW2ldKSkge1xuICAgICAgICAgIGl0ZW0uYWxpZ25baV0gPSAnY2VudGVyJztcbiAgICAgICAgfSBlbHNlIGlmICgvXiAqOi0rICokLy50ZXN0KGl0ZW0uYWxpZ25baV0pKSB7XG4gICAgICAgICAgaXRlbS5hbGlnbltpXSA9ICdsZWZ0JztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtLmFsaWduW2ldID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBmb3IgKGkgPSAwOyBpIDwgaXRlbS5jZWxscy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpdGVtLmNlbGxzW2ldID0gaXRlbS5jZWxsc1tpXS5zcGxpdCgvICpcXHwgKi8pO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnRva2Vucy5wdXNoKGl0ZW0pO1xuXG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBsaGVhZGluZ1xuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmxoZWFkaW5nLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAnaGVhZGluZycsXG4gICAgICAgIGRlcHRoOiBjYXBbMl0gPT09ICc9JyA/IDEgOiAyLFxuICAgICAgICB0ZXh0OiBjYXBbMV1cbiAgICAgIH0pO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gaHJcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5oci5leGVjKHNyYykpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICB0aGlzLnRva2Vucy5wdXNoKHtcbiAgICAgICAgdHlwZTogJ2hyJ1xuICAgICAgfSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBibG9ja3F1b3RlXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuYmxvY2txdW90ZS5leGVjKHNyYykpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG5cbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAnYmxvY2txdW90ZV9zdGFydCdcbiAgICAgIH0pO1xuXG4gICAgICBjYXAgPSBjYXBbMF0ucmVwbGFjZSgvXiAqPiA/L2dtLCAnJyk7XG5cbiAgICAgIC8vIFBhc3MgYHRvcGAgdG8ga2VlcCB0aGUgY3VycmVudFxuICAgICAgLy8gXCJ0b3BsZXZlbFwiIHN0YXRlLiBUaGlzIGlzIGV4YWN0bHlcbiAgICAgIC8vIGhvdyBtYXJrZG93bi5wbCB3b3Jrcy5cbiAgICAgIHRoaXMudG9rZW4oY2FwLCB0b3AsIHRydWUpO1xuXG4gICAgICB0aGlzLnRva2Vucy5wdXNoKHtcbiAgICAgICAgdHlwZTogJ2Jsb2NrcXVvdGVfZW5kJ1xuICAgICAgfSk7XG5cbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGxpc3RcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5saXN0LmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIGJ1bGwgPSBjYXBbMl07XG5cbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiAnbGlzdF9zdGFydCcsXG4gICAgICAgIG9yZGVyZWQ6IGJ1bGwubGVuZ3RoID4gMVxuICAgICAgfSk7XG5cbiAgICAgIC8vIEdldCBlYWNoIHRvcC1sZXZlbCBpdGVtLlxuICAgICAgY2FwID0gY2FwWzBdLm1hdGNoKHRoaXMucnVsZXMuaXRlbSk7XG5cbiAgICAgIG5leHQgPSBmYWxzZTtcbiAgICAgIGwgPSBjYXAubGVuZ3RoO1xuICAgICAgaSA9IDA7XG5cbiAgICAgIGZvciAoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGl0ZW0gPSBjYXBbaV07XG5cbiAgICAgICAgLy8gUmVtb3ZlIHRoZSBsaXN0IGl0ZW0ncyBidWxsZXRcbiAgICAgICAgLy8gc28gaXQgaXMgc2VlbiBhcyB0aGUgbmV4dCB0b2tlbi5cbiAgICAgICAgc3BhY2UgPSBpdGVtLmxlbmd0aDtcbiAgICAgICAgaXRlbSA9IGl0ZW0ucmVwbGFjZSgvXiAqKFsqKy1dfFxcZCtcXC4pICsvLCAnJyk7XG5cbiAgICAgICAgLy8gT3V0ZGVudCB3aGF0ZXZlciB0aGVcbiAgICAgICAgLy8gbGlzdCBpdGVtIGNvbnRhaW5zLiBIYWNreS5cbiAgICAgICAgaWYgKH5pdGVtLmluZGV4T2YoJ1xcbiAnKSkge1xuICAgICAgICAgIHNwYWNlIC09IGl0ZW0ubGVuZ3RoO1xuICAgICAgICAgIGl0ZW0gPSAhdGhpcy5vcHRpb25zLnBlZGFudGljXG4gICAgICAgICAgICA/IGl0ZW0ucmVwbGFjZShuZXcgUmVnRXhwKCdeIHsxLCcgKyBzcGFjZSArICd9JywgJ2dtJyksICcnKVxuICAgICAgICAgICAgOiBpdGVtLnJlcGxhY2UoL14gezEsNH0vZ20sICcnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIERldGVybWluZSB3aGV0aGVyIHRoZSBuZXh0IGxpc3QgaXRlbSBiZWxvbmdzIGhlcmUuXG4gICAgICAgIC8vIEJhY2twZWRhbCBpZiBpdCBkb2VzIG5vdCBiZWxvbmcgaW4gdGhpcyBsaXN0LlxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLnNtYXJ0TGlzdHMgJiYgaSAhPT0gbCAtIDEpIHtcbiAgICAgICAgICBiID0gYmxvY2suYnVsbGV0LmV4ZWMoY2FwW2kgKyAxXSlbMF07XG4gICAgICAgICAgaWYgKGJ1bGwgIT09IGIgJiYgIShidWxsLmxlbmd0aCA+IDEgJiYgYi5sZW5ndGggPiAxKSkge1xuICAgICAgICAgICAgc3JjID0gY2FwLnNsaWNlKGkgKyAxKS5qb2luKCdcXG4nKSArIHNyYztcbiAgICAgICAgICAgIGkgPSBsIC0gMTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBEZXRlcm1pbmUgd2hldGhlciBpdGVtIGlzIGxvb3NlIG9yIG5vdC5cbiAgICAgICAgLy8gVXNlOiAvKF58XFxuKSg/ISApW15cXG5dK1xcblxcbig/IVxccyokKS9cbiAgICAgICAgLy8gZm9yIGRpc2NvdW50IGJlaGF2aW9yLlxuICAgICAgICBsb29zZSA9IG5leHQgfHwgL1xcblxcbig/IVxccyokKS8udGVzdChpdGVtKTtcbiAgICAgICAgaWYgKGkgIT09IGwgLSAxKSB7XG4gICAgICAgICAgbmV4dCA9IGl0ZW0uY2hhckF0KGl0ZW0ubGVuZ3RoIC0gMSkgPT09ICdcXG4nO1xuICAgICAgICAgIGlmICghbG9vc2UpIGxvb3NlID0gbmV4dDtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICAgIHR5cGU6IGxvb3NlXG4gICAgICAgICAgICA/ICdsb29zZV9pdGVtX3N0YXJ0J1xuICAgICAgICAgICAgOiAnbGlzdF9pdGVtX3N0YXJ0J1xuICAgICAgICB9KTtcblxuICAgICAgICAvLyBSZWN1cnNlLlxuICAgICAgICB0aGlzLnRva2VuKGl0ZW0sIGZhbHNlLCBicSk7XG5cbiAgICAgICAgdGhpcy50b2tlbnMucHVzaCh7XG4gICAgICAgICAgdHlwZTogJ2xpc3RfaXRlbV9lbmQnXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnRva2Vucy5wdXNoKHtcbiAgICAgICAgdHlwZTogJ2xpc3RfZW5kJ1xuICAgICAgfSk7XG5cbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGh0bWxcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5odG1sLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIHRoaXMudG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiB0aGlzLm9wdGlvbnMuc2FuaXRpemVcbiAgICAgICAgICA/ICdwYXJhZ3JhcGgnXG4gICAgICAgICAgOiAnaHRtbCcsXG4gICAgICAgIHByZTogIXRoaXMub3B0aW9ucy5zYW5pdGl6ZXJcbiAgICAgICAgICAmJiAoY2FwWzFdID09PSAncHJlJyB8fCBjYXBbMV0gPT09ICdzY3JpcHQnIHx8IGNhcFsxXSA9PT0gJ3N0eWxlJyksXG4gICAgICAgIHRleHQ6IGNhcFswXVxuICAgICAgfSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBkZWZcbiAgICBpZiAoKCFicSAmJiB0b3ApICYmIChjYXAgPSB0aGlzLnJ1bGVzLmRlZi5leGVjKHNyYykpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgdGhpcy50b2tlbnMubGlua3NbY2FwWzFdLnRvTG93ZXJDYXNlKCldID0ge1xuICAgICAgICBocmVmOiBjYXBbMl0sXG4gICAgICAgIHRpdGxlOiBjYXBbM11cbiAgICAgIH07XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyB0YWJsZSAoZ2ZtKVxuICAgIGlmICh0b3AgJiYgKGNhcCA9IHRoaXMucnVsZXMudGFibGUuZXhlYyhzcmMpKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcblxuICAgICAgaXRlbSA9IHtcbiAgICAgICAgdHlwZTogJ3RhYmxlJyxcbiAgICAgICAgaGVhZGVyOiBjYXBbMV0ucmVwbGFjZSgvXiAqfCAqXFx8ICokL2csICcnKS5zcGxpdCgvICpcXHwgKi8pLFxuICAgICAgICBhbGlnbjogY2FwWzJdLnJlcGxhY2UoL14gKnxcXHwgKiQvZywgJycpLnNwbGl0KC8gKlxcfCAqLyksXG4gICAgICAgIGNlbGxzOiBjYXBbM10ucmVwbGFjZSgvKD86ICpcXHwgKik/XFxuJC8sICcnKS5zcGxpdCgnXFxuJylcbiAgICAgIH07XG5cbiAgICAgIGZvciAoaSA9IDA7IGkgPCBpdGVtLmFsaWduLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICgvXiAqLSs6ICokLy50ZXN0KGl0ZW0uYWxpZ25baV0pKSB7XG4gICAgICAgICAgaXRlbS5hbGlnbltpXSA9ICdyaWdodCc7XG4gICAgICAgIH0gZWxzZSBpZiAoL14gKjotKzogKiQvLnRlc3QoaXRlbS5hbGlnbltpXSkpIHtcbiAgICAgICAgICBpdGVtLmFsaWduW2ldID0gJ2NlbnRlcic7XG4gICAgICAgIH0gZWxzZSBpZiAoL14gKjotKyAqJC8udGVzdChpdGVtLmFsaWduW2ldKSkge1xuICAgICAgICAgIGl0ZW0uYWxpZ25baV0gPSAnbGVmdCc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbS5hbGlnbltpXSA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZm9yIChpID0gMDsgaSA8IGl0ZW0uY2VsbHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaXRlbS5jZWxsc1tpXSA9IGl0ZW0uY2VsbHNbaV1cbiAgICAgICAgICAucmVwbGFjZSgvXiAqXFx8ICp8ICpcXHwgKiQvZywgJycpXG4gICAgICAgICAgLnNwbGl0KC8gKlxcfCAqLyk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMudG9rZW5zLnB1c2goaXRlbSk7XG5cbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIHRvcC1sZXZlbCBwYXJhZ3JhcGhcbiAgICBpZiAodG9wICYmIChjYXAgPSB0aGlzLnJ1bGVzLnBhcmFncmFwaC5leGVjKHNyYykpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgdGhpcy50b2tlbnMucHVzaCh7XG4gICAgICAgIHR5cGU6ICdwYXJhZ3JhcGgnLFxuICAgICAgICB0ZXh0OiBjYXBbMV0uY2hhckF0KGNhcFsxXS5sZW5ndGggLSAxKSA9PT0gJ1xcbidcbiAgICAgICAgICA/IGNhcFsxXS5zbGljZSgwLCAtMSlcbiAgICAgICAgICA6IGNhcFsxXVxuICAgICAgfSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyB0ZXh0XG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMudGV4dC5leGVjKHNyYykpIHtcbiAgICAgIC8vIFRvcC1sZXZlbCBzaG91bGQgbmV2ZXIgcmVhY2ggaGVyZS5cbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICB0aGlzLnRva2Vucy5wdXNoKHtcbiAgICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgICB0ZXh0OiBjYXBbMF1cbiAgICAgIH0pO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKHNyYykge1xuICAgICAgdGhyb3cgbmV3XG4gICAgICAgIEVycm9yKCdJbmZpbml0ZSBsb29wIG9uIGJ5dGU6ICcgKyBzcmMuY2hhckNvZGVBdCgwKSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRoaXMudG9rZW5zO1xufTtcblxuLyoqXG4gKiBJbmxpbmUtTGV2ZWwgR3JhbW1hclxuICovXG5cbnZhciBpbmxpbmUgPSB7XG4gIGVzY2FwZTogL15cXFxcKFtcXFxcYCp7fVxcW1xcXSgpIytcXC0uIV8+XSkvLFxuICBhdXRvbGluazogL148KFteIDw+XSsoQHw6XFwvKVteIDw+XSspPi8sXG4gIHVybDogbm9vcCxcbiAgdGFnOiAvXjwhLS1bXFxzXFxTXSo/LS0+fF48XFwvP1xcdysoPzpcIlteXCJdKlwifCdbXiddKid8W148J1wiPl0pKj8+LyxcbiAgbGluazogL14hP1xcWyhpbnNpZGUpXFxdXFwoaHJlZlxcKS8sXG4gIHJlZmxpbms6IC9eIT9cXFsoaW5zaWRlKVxcXVxccypcXFsoW15cXF1dKilcXF0vLFxuICBub2xpbms6IC9eIT9cXFsoKD86XFxbW15cXF1dKlxcXXxbXlxcW1xcXV0pKilcXF0vLFxuICBzdHJvbmc6IC9eX18oW1xcc1xcU10rPylfXyg/IV8pfF5cXCpcXCooW1xcc1xcU10rPylcXCpcXCooPyFcXCopLyxcbiAgZW06IC9eXFxiXygoPzpbXl9dfF9fKSs/KV9cXGJ8XlxcKigoPzpcXCpcXCp8W1xcc1xcU10pKz8pXFwqKD8hXFwqKS8sXG4gIGNvZGU6IC9eKGArKShbXFxzXFxTXSo/W15gXSlcXDEoPyFgKS8sXG4gIGJyOiAvXiB7Mix9XFxuKD8hXFxzKiQpLyxcbiAgZGVsOiBub29wLFxuICB0ZXh0OiAvXltcXHNcXFNdKz8oPz1bXFxcXDwhXFxbXypgXXwgezIsfVxcbnwkKS9cbn07XG5cbmlubGluZS5faW5zaWRlID0gLyg/OlxcW1teXFxdXSpcXF18XFxcXFtcXFtcXF1dfFteXFxbXFxdXXxcXF0oPz1bXlxcW10qXFxdKSkqLztcbmlubGluZS5faHJlZiA9IC9cXHMqPD8oW1xcc1xcU10qPyk+Pyg/OlxccytbJ1wiXShbXFxzXFxTXSo/KVsnXCJdKT9cXHMqLztcblxuaW5saW5lLmxpbmsgPSByZXBsYWNlKGlubGluZS5saW5rKVxuICAoJ2luc2lkZScsIGlubGluZS5faW5zaWRlKVxuICAoJ2hyZWYnLCBpbmxpbmUuX2hyZWYpXG4gICgpO1xuXG5pbmxpbmUucmVmbGluayA9IHJlcGxhY2UoaW5saW5lLnJlZmxpbmspXG4gICgnaW5zaWRlJywgaW5saW5lLl9pbnNpZGUpXG4gICgpO1xuXG4vKipcbiAqIE5vcm1hbCBJbmxpbmUgR3JhbW1hclxuICovXG5cbmlubGluZS5ub3JtYWwgPSBtZXJnZSh7fSwgaW5saW5lKTtcblxuLyoqXG4gKiBQZWRhbnRpYyBJbmxpbmUgR3JhbW1hclxuICovXG5cbmlubGluZS5wZWRhbnRpYyA9IG1lcmdlKHt9LCBpbmxpbmUubm9ybWFsLCB7XG4gIHN0cm9uZzogL15fXyg/PVxcUykoW1xcc1xcU10qP1xcUylfXyg/IV8pfF5cXCpcXCooPz1cXFMpKFtcXHNcXFNdKj9cXFMpXFwqXFwqKD8hXFwqKS8sXG4gIGVtOiAvXl8oPz1cXFMpKFtcXHNcXFNdKj9cXFMpXyg/IV8pfF5cXCooPz1cXFMpKFtcXHNcXFNdKj9cXFMpXFwqKD8hXFwqKS9cbn0pO1xuXG4vKipcbiAqIEdGTSBJbmxpbmUgR3JhbW1hclxuICovXG5cbmlubGluZS5nZm0gPSBtZXJnZSh7fSwgaW5saW5lLm5vcm1hbCwge1xuICBlc2NhcGU6IHJlcGxhY2UoaW5saW5lLmVzY2FwZSkoJ10pJywgJ358XSknKSgpLFxuICB1cmw6IC9eKGh0dHBzPzpcXC9cXC9bXlxcczxdK1tePC4sOjtcIicpXFxdXFxzXSkvLFxuICBkZWw6IC9efn4oPz1cXFMpKFtcXHNcXFNdKj9cXFMpfn4vLFxuICB0ZXh0OiByZXBsYWNlKGlubGluZS50ZXh0KVxuICAgICgnXXwnLCAnfl18JylcbiAgICAoJ3wnLCAnfGh0dHBzPzovL3wnKVxuICAgICgpXG59KTtcblxuLyoqXG4gKiBHRk0gKyBMaW5lIEJyZWFrcyBJbmxpbmUgR3JhbW1hclxuICovXG5cbmlubGluZS5icmVha3MgPSBtZXJnZSh7fSwgaW5saW5lLmdmbSwge1xuICBicjogcmVwbGFjZShpbmxpbmUuYnIpKCd7Mix9JywgJyonKSgpLFxuICB0ZXh0OiByZXBsYWNlKGlubGluZS5nZm0udGV4dCkoJ3syLH0nLCAnKicpKClcbn0pO1xuXG4vKipcbiAqIElubGluZSBMZXhlciAmIENvbXBpbGVyXG4gKi9cblxuZnVuY3Rpb24gSW5saW5lTGV4ZXIobGlua3MsIG9wdGlvbnMpIHtcbiAgdGhpcy5vcHRpb25zID0gb3B0aW9ucyB8fCBtYXJrZWQuZGVmYXVsdHM7XG4gIHRoaXMubGlua3MgPSBsaW5rcztcbiAgdGhpcy5ydWxlcyA9IGlubGluZS5ub3JtYWw7XG4gIHRoaXMucmVuZGVyZXIgPSB0aGlzLm9wdGlvbnMucmVuZGVyZXIgfHwgbmV3IFJlbmRlcmVyO1xuICB0aGlzLnJlbmRlcmVyLm9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG5cbiAgaWYgKCF0aGlzLmxpbmtzKSB7XG4gICAgdGhyb3cgbmV3XG4gICAgICBFcnJvcignVG9rZW5zIGFycmF5IHJlcXVpcmVzIGEgYGxpbmtzYCBwcm9wZXJ0eS4nKTtcbiAgfVxuXG4gIGlmICh0aGlzLm9wdGlvbnMuZ2ZtKSB7XG4gICAgaWYgKHRoaXMub3B0aW9ucy5icmVha3MpIHtcbiAgICAgIHRoaXMucnVsZXMgPSBpbmxpbmUuYnJlYWtzO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnJ1bGVzID0gaW5saW5lLmdmbTtcbiAgICB9XG4gIH0gZWxzZSBpZiAodGhpcy5vcHRpb25zLnBlZGFudGljKSB7XG4gICAgdGhpcy5ydWxlcyA9IGlubGluZS5wZWRhbnRpYztcbiAgfVxufVxuXG4vKipcbiAqIEV4cG9zZSBJbmxpbmUgUnVsZXNcbiAqL1xuXG5JbmxpbmVMZXhlci5ydWxlcyA9IGlubGluZTtcblxuLyoqXG4gKiBTdGF0aWMgTGV4aW5nL0NvbXBpbGluZyBNZXRob2RcbiAqL1xuXG5JbmxpbmVMZXhlci5vdXRwdXQgPSBmdW5jdGlvbihzcmMsIGxpbmtzLCBvcHRpb25zKSB7XG4gIHZhciBpbmxpbmUgPSBuZXcgSW5saW5lTGV4ZXIobGlua3MsIG9wdGlvbnMpO1xuICByZXR1cm4gaW5saW5lLm91dHB1dChzcmMpO1xufTtcblxuLyoqXG4gKiBMZXhpbmcvQ29tcGlsaW5nXG4gKi9cblxuSW5saW5lTGV4ZXIucHJvdG90eXBlLm91dHB1dCA9IGZ1bmN0aW9uKHNyYykge1xuICB2YXIgb3V0ID0gJydcbiAgICAsIGxpbmtcbiAgICAsIHRleHRcbiAgICAsIGhyZWZcbiAgICAsIGNhcDtcblxuICB3aGlsZSAoc3JjKSB7XG4gICAgLy8gZXNjYXBlXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuZXNjYXBlLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIG91dCArPSBjYXBbMV07XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBhdXRvbGlua1xuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmF1dG9saW5rLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIGlmIChjYXBbMl0gPT09ICdAJykge1xuICAgICAgICB0ZXh0ID0gZXNjYXBlKFxuICAgICAgICAgIGNhcFsxXS5jaGFyQXQoNikgPT09ICc6J1xuICAgICAgICAgID8gdGhpcy5tYW5nbGUoY2FwWzFdLnN1YnN0cmluZyg3KSlcbiAgICAgICAgICA6IHRoaXMubWFuZ2xlKGNhcFsxXSlcbiAgICAgICAgKTtcbiAgICAgICAgaHJlZiA9IHRoaXMubWFuZ2xlKCdtYWlsdG86JykgKyB0ZXh0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGV4dCA9IGVzY2FwZShjYXBbMV0pO1xuICAgICAgICBocmVmID0gdGV4dDtcbiAgICAgIH1cbiAgICAgIG91dCArPSB0aGlzLnJlbmRlcmVyLmxpbmsoaHJlZiwgbnVsbCwgdGV4dCk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyB1cmwgKGdmbSlcbiAgICBpZiAoIXRoaXMuaW5MaW5rICYmIChjYXAgPSB0aGlzLnJ1bGVzLnVybC5leGVjKHNyYykpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgdGV4dCA9IGVzY2FwZShjYXBbMV0pO1xuICAgICAgaHJlZiA9IHRleHQ7XG4gICAgICBvdXQgKz0gdGhpcy5yZW5kZXJlci5saW5rKGhyZWYsIG51bGwsIHRleHQpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gdGFnXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMudGFnLmV4ZWMoc3JjKSkge1xuICAgICAgaWYgKCF0aGlzLmluTGluayAmJiAvXjxhIC9pLnRlc3QoY2FwWzBdKSkge1xuICAgICAgICB0aGlzLmluTGluayA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuaW5MaW5rICYmIC9ePFxcL2E+L2kudGVzdChjYXBbMF0pKSB7XG4gICAgICAgIHRoaXMuaW5MaW5rID0gZmFsc2U7XG4gICAgICB9XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgb3V0ICs9IHRoaXMub3B0aW9ucy5zYW5pdGl6ZVxuICAgICAgICA/IHRoaXMub3B0aW9ucy5zYW5pdGl6ZXJcbiAgICAgICAgICA/IHRoaXMub3B0aW9ucy5zYW5pdGl6ZXIoY2FwWzBdKVxuICAgICAgICAgIDogZXNjYXBlKGNhcFswXSlcbiAgICAgICAgOiBjYXBbMF1cbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGxpbmtcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5saW5rLmV4ZWMoc3JjKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIHRoaXMuaW5MaW5rID0gdHJ1ZTtcbiAgICAgIG91dCArPSB0aGlzLm91dHB1dExpbmsoY2FwLCB7XG4gICAgICAgIGhyZWY6IGNhcFsyXSxcbiAgICAgICAgdGl0bGU6IGNhcFszXVxuICAgICAgfSk7XG4gICAgICB0aGlzLmluTGluayA9IGZhbHNlO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gcmVmbGluaywgbm9saW5rXG4gICAgaWYgKChjYXAgPSB0aGlzLnJ1bGVzLnJlZmxpbmsuZXhlYyhzcmMpKVxuICAgICAgICB8fCAoY2FwID0gdGhpcy5ydWxlcy5ub2xpbmsuZXhlYyhzcmMpKSkge1xuICAgICAgc3JjID0gc3JjLnN1YnN0cmluZyhjYXBbMF0ubGVuZ3RoKTtcbiAgICAgIGxpbmsgPSAoY2FwWzJdIHx8IGNhcFsxXSkucmVwbGFjZSgvXFxzKy9nLCAnICcpO1xuICAgICAgbGluayA9IHRoaXMubGlua3NbbGluay50b0xvd2VyQ2FzZSgpXTtcbiAgICAgIGlmICghbGluayB8fCAhbGluay5ocmVmKSB7XG4gICAgICAgIG91dCArPSBjYXBbMF0uY2hhckF0KDApO1xuICAgICAgICBzcmMgPSBjYXBbMF0uc3Vic3RyaW5nKDEpICsgc3JjO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIHRoaXMuaW5MaW5rID0gdHJ1ZTtcbiAgICAgIG91dCArPSB0aGlzLm91dHB1dExpbmsoY2FwLCBsaW5rKTtcbiAgICAgIHRoaXMuaW5MaW5rID0gZmFsc2U7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBzdHJvbmdcbiAgICBpZiAoY2FwID0gdGhpcy5ydWxlcy5zdHJvbmcuZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgb3V0ICs9IHRoaXMucmVuZGVyZXIuc3Ryb25nKHRoaXMub3V0cHV0KGNhcFsyXSB8fCBjYXBbMV0pKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGVtXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuZW0uZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgb3V0ICs9IHRoaXMucmVuZGVyZXIuZW0odGhpcy5vdXRwdXQoY2FwWzJdIHx8IGNhcFsxXSkpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gY29kZVxuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmNvZGUuZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgb3V0ICs9IHRoaXMucmVuZGVyZXIuY29kZXNwYW4oZXNjYXBlKGNhcFsyXS50cmltKCksIHRydWUpKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGJyXG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMuYnIuZXhlYyhzcmMpKSB7XG4gICAgICBzcmMgPSBzcmMuc3Vic3RyaW5nKGNhcFswXS5sZW5ndGgpO1xuICAgICAgb3V0ICs9IHRoaXMucmVuZGVyZXIuYnIoKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIGRlbCAoZ2ZtKVxuICAgIGlmIChjYXAgPSB0aGlzLnJ1bGVzLmRlbC5leGVjKHNyYykpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICBvdXQgKz0gdGhpcy5yZW5kZXJlci5kZWwodGhpcy5vdXRwdXQoY2FwWzFdKSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyB0ZXh0XG4gICAgaWYgKGNhcCA9IHRoaXMucnVsZXMudGV4dC5leGVjKHNyYykpIHtcbiAgICAgIHNyYyA9IHNyYy5zdWJzdHJpbmcoY2FwWzBdLmxlbmd0aCk7XG4gICAgICBvdXQgKz0gdGhpcy5yZW5kZXJlci50ZXh0KGVzY2FwZSh0aGlzLnNtYXJ0eXBhbnRzKGNhcFswXSkpKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGlmIChzcmMpIHtcbiAgICAgIHRocm93IG5ld1xuICAgICAgICBFcnJvcignSW5maW5pdGUgbG9vcCBvbiBieXRlOiAnICsgc3JjLmNoYXJDb2RlQXQoMCkpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvdXQ7XG59O1xuXG4vKipcbiAqIENvbXBpbGUgTGlua1xuICovXG5cbklubGluZUxleGVyLnByb3RvdHlwZS5vdXRwdXRMaW5rID0gZnVuY3Rpb24oY2FwLCBsaW5rKSB7XG4gIHZhciBocmVmID0gZXNjYXBlKGxpbmsuaHJlZilcbiAgICAsIHRpdGxlID0gbGluay50aXRsZSA/IGVzY2FwZShsaW5rLnRpdGxlKSA6IG51bGw7XG5cbiAgcmV0dXJuIGNhcFswXS5jaGFyQXQoMCkgIT09ICchJ1xuICAgID8gdGhpcy5yZW5kZXJlci5saW5rKGhyZWYsIHRpdGxlLCB0aGlzLm91dHB1dChjYXBbMV0pKVxuICAgIDogdGhpcy5yZW5kZXJlci5pbWFnZShocmVmLCB0aXRsZSwgZXNjYXBlKGNhcFsxXSkpO1xufTtcblxuLyoqXG4gKiBTbWFydHlwYW50cyBUcmFuc2Zvcm1hdGlvbnNcbiAqL1xuXG5JbmxpbmVMZXhlci5wcm90b3R5cGUuc21hcnR5cGFudHMgPSBmdW5jdGlvbih0ZXh0KSB7XG4gIGlmICghdGhpcy5vcHRpb25zLnNtYXJ0eXBhbnRzKSByZXR1cm4gdGV4dDtcbiAgcmV0dXJuIHRleHRcbiAgICAvLyBlbS1kYXNoZXNcbiAgICAucmVwbGFjZSgvLS0tL2csICdcXHUyMDE0JylcbiAgICAvLyBlbi1kYXNoZXNcbiAgICAucmVwbGFjZSgvLS0vZywgJ1xcdTIwMTMnKVxuICAgIC8vIG9wZW5pbmcgc2luZ2xlc1xuICAgIC5yZXBsYWNlKC8oXnxbLVxcdTIwMTQvKFxcW3tcIlxcc10pJy9nLCAnJDFcXHUyMDE4JylcbiAgICAvLyBjbG9zaW5nIHNpbmdsZXMgJiBhcG9zdHJvcGhlc1xuICAgIC5yZXBsYWNlKC8nL2csICdcXHUyMDE5JylcbiAgICAvLyBvcGVuaW5nIGRvdWJsZXNcbiAgICAucmVwbGFjZSgvKF58Wy1cXHUyMDE0LyhcXFt7XFx1MjAxOFxcc10pXCIvZywgJyQxXFx1MjAxYycpXG4gICAgLy8gY2xvc2luZyBkb3VibGVzXG4gICAgLnJlcGxhY2UoL1wiL2csICdcXHUyMDFkJylcbiAgICAvLyBlbGxpcHNlc1xuICAgIC5yZXBsYWNlKC9cXC57M30vZywgJ1xcdTIwMjYnKTtcbn07XG5cbi8qKlxuICogTWFuZ2xlIExpbmtzXG4gKi9cblxuSW5saW5lTGV4ZXIucHJvdG90eXBlLm1hbmdsZSA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgaWYgKCF0aGlzLm9wdGlvbnMubWFuZ2xlKSByZXR1cm4gdGV4dDtcbiAgdmFyIG91dCA9ICcnXG4gICAgLCBsID0gdGV4dC5sZW5ndGhcbiAgICAsIGkgPSAwXG4gICAgLCBjaDtcblxuICBmb3IgKDsgaSA8IGw7IGkrKykge1xuICAgIGNoID0gdGV4dC5jaGFyQ29kZUF0KGkpO1xuICAgIGlmIChNYXRoLnJhbmRvbSgpID4gMC41KSB7XG4gICAgICBjaCA9ICd4JyArIGNoLnRvU3RyaW5nKDE2KTtcbiAgICB9XG4gICAgb3V0ICs9ICcmIycgKyBjaCArICc7JztcbiAgfVxuXG4gIHJldHVybiBvdXQ7XG59O1xuXG4vKipcbiAqIFJlbmRlcmVyXG4gKi9cblxuZnVuY3Rpb24gUmVuZGVyZXIob3B0aW9ucykge1xuICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xufVxuXG5SZW5kZXJlci5wcm90b3R5cGUuY29kZSA9IGZ1bmN0aW9uKGNvZGUsIGxhbmcsIGVzY2FwZWQpIHtcbiAgaWYgKHRoaXMub3B0aW9ucy5oaWdobGlnaHQpIHtcbiAgICB2YXIgb3V0ID0gdGhpcy5vcHRpb25zLmhpZ2hsaWdodChjb2RlLCBsYW5nKTtcbiAgICBpZiAob3V0ICE9IG51bGwgJiYgb3V0ICE9PSBjb2RlKSB7XG4gICAgICBlc2NhcGVkID0gdHJ1ZTtcbiAgICAgIGNvZGUgPSBvdXQ7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFsYW5nKSB7XG4gICAgcmV0dXJuICc8cHJlPjxjb2RlPidcbiAgICAgICsgKGVzY2FwZWQgPyBjb2RlIDogZXNjYXBlKGNvZGUsIHRydWUpKVxuICAgICAgKyAnXFxuPC9jb2RlPjwvcHJlPic7XG4gIH1cblxuICByZXR1cm4gJzxwcmU+PGNvZGUgY2xhc3M9XCInXG4gICAgKyB0aGlzLm9wdGlvbnMubGFuZ1ByZWZpeFxuICAgICsgZXNjYXBlKGxhbmcsIHRydWUpXG4gICAgKyAnXCI+J1xuICAgICsgKGVzY2FwZWQgPyBjb2RlIDogZXNjYXBlKGNvZGUsIHRydWUpKVxuICAgICsgJ1xcbjwvY29kZT48L3ByZT5cXG4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLmJsb2NrcXVvdGUgPSBmdW5jdGlvbihxdW90ZSkge1xuICByZXR1cm4gJzxibG9ja3F1b3RlPlxcbicgKyBxdW90ZSArICc8L2Jsb2NrcXVvdGU+XFxuJztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5odG1sID0gZnVuY3Rpb24oaHRtbCkge1xuICByZXR1cm4gaHRtbDtcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5oZWFkaW5nID0gZnVuY3Rpb24odGV4dCwgbGV2ZWwsIHJhdykge1xuICByZXR1cm4gJzxoJ1xuICAgICsgbGV2ZWxcbiAgICArICcgaWQ9XCInXG4gICAgKyB0aGlzLm9wdGlvbnMuaGVhZGVyUHJlZml4XG4gICAgKyByYXcudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9bXlxcd10rL2csICctJylcbiAgICArICdcIj4nXG4gICAgKyB0ZXh0XG4gICAgKyAnPC9oJ1xuICAgICsgbGV2ZWxcbiAgICArICc+XFxuJztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5ociA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5vcHRpb25zLnhodG1sID8gJzxoci8+XFxuJyA6ICc8aHI+XFxuJztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5saXN0ID0gZnVuY3Rpb24oYm9keSwgb3JkZXJlZCkge1xuICB2YXIgdHlwZSA9IG9yZGVyZWQgPyAnb2wnIDogJ3VsJztcbiAgcmV0dXJuICc8JyArIHR5cGUgKyAnPlxcbicgKyBib2R5ICsgJzwvJyArIHR5cGUgKyAnPlxcbic7XG59O1xuXG5SZW5kZXJlci5wcm90b3R5cGUubGlzdGl0ZW0gPSBmdW5jdGlvbih0ZXh0KSB7XG4gIHJldHVybiAnPGxpPicgKyB0ZXh0ICsgJzwvbGk+XFxuJztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5wYXJhZ3JhcGggPSBmdW5jdGlvbih0ZXh0KSB7XG4gIHJldHVybiAnPHA+JyArIHRleHQgKyAnPC9wPlxcbic7XG59O1xuXG5SZW5kZXJlci5wcm90b3R5cGUudGFibGUgPSBmdW5jdGlvbihoZWFkZXIsIGJvZHkpIHtcbiAgcmV0dXJuICc8dGFibGU+XFxuJ1xuICAgICsgJzx0aGVhZD5cXG4nXG4gICAgKyBoZWFkZXJcbiAgICArICc8L3RoZWFkPlxcbidcbiAgICArICc8dGJvZHk+XFxuJ1xuICAgICsgYm9keVxuICAgICsgJzwvdGJvZHk+XFxuJ1xuICAgICsgJzwvdGFibGU+XFxuJztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS50YWJsZXJvdyA9IGZ1bmN0aW9uKGNvbnRlbnQpIHtcbiAgcmV0dXJuICc8dHI+XFxuJyArIGNvbnRlbnQgKyAnPC90cj5cXG4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLnRhYmxlY2VsbCA9IGZ1bmN0aW9uKGNvbnRlbnQsIGZsYWdzKSB7XG4gIHZhciB0eXBlID0gZmxhZ3MuaGVhZGVyID8gJ3RoJyA6ICd0ZCc7XG4gIHZhciB0YWcgPSBmbGFncy5hbGlnblxuICAgID8gJzwnICsgdHlwZSArICcgc3R5bGU9XCJ0ZXh0LWFsaWduOicgKyBmbGFncy5hbGlnbiArICdcIj4nXG4gICAgOiAnPCcgKyB0eXBlICsgJz4nO1xuICByZXR1cm4gdGFnICsgY29udGVudCArICc8LycgKyB0eXBlICsgJz5cXG4nO1xufTtcblxuLy8gc3BhbiBsZXZlbCByZW5kZXJlclxuUmVuZGVyZXIucHJvdG90eXBlLnN0cm9uZyA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgcmV0dXJuICc8c3Ryb25nPicgKyB0ZXh0ICsgJzwvc3Ryb25nPic7XG59O1xuXG5SZW5kZXJlci5wcm90b3R5cGUuZW0gPSBmdW5jdGlvbih0ZXh0KSB7XG4gIHJldHVybiAnPGVtPicgKyB0ZXh0ICsgJzwvZW0+Jztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5jb2Rlc3BhbiA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgcmV0dXJuICc8Y29kZT4nICsgdGV4dCArICc8L2NvZGU+Jztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5iciA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5vcHRpb25zLnhodG1sID8gJzxici8+JyA6ICc8YnI+Jztcbn07XG5cblJlbmRlcmVyLnByb3RvdHlwZS5kZWwgPSBmdW5jdGlvbih0ZXh0KSB7XG4gIHJldHVybiAnPGRlbD4nICsgdGV4dCArICc8L2RlbD4nO1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLmxpbmsgPSBmdW5jdGlvbihocmVmLCB0aXRsZSwgdGV4dCkge1xuICBpZiAodGhpcy5vcHRpb25zLnNhbml0aXplKSB7XG4gICAgdHJ5IHtcbiAgICAgIHZhciBwcm90ID0gZGVjb2RlVVJJQ29tcG9uZW50KHVuZXNjYXBlKGhyZWYpKVxuICAgICAgICAucmVwbGFjZSgvW15cXHc6XS9nLCAnJylcbiAgICAgICAgLnRvTG93ZXJDYXNlKCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIHRleHQ7XG4gICAgfVxuICAgIGlmIChwcm90LmluZGV4T2YoJ2phdmFzY3JpcHQ6JykgPT09IDAgfHwgcHJvdC5pbmRleE9mKCd2YnNjcmlwdDonKSA9PT0gMCB8fCBwcm90LmluZGV4T2YoJ2RhdGE6JykgPT09IDApIHtcbiAgICAgIHJldHVybiB0ZXh0O1xuICAgIH1cbiAgfVxuICBpZiAodGhpcy5vcHRpb25zLmJhc2VVcmwgJiYgIW9yaWdpbkluZGVwZW5kZW50VXJsLnRlc3QoaHJlZikpIHtcbiAgICBocmVmID0gcmVzb2x2ZVVybCh0aGlzLm9wdGlvbnMuYmFzZVVybCwgaHJlZik7XG4gIH1cbiAgdmFyIG91dCA9ICc8YSBocmVmPVwiJyArIGhyZWYgKyAnXCInO1xuICBpZiAodGl0bGUpIHtcbiAgICBvdXQgKz0gJyB0aXRsZT1cIicgKyB0aXRsZSArICdcIic7XG4gIH1cbiAgb3V0ICs9ICc+JyArIHRleHQgKyAnPC9hPic7XG4gIHJldHVybiBvdXQ7XG59O1xuXG5SZW5kZXJlci5wcm90b3R5cGUuaW1hZ2UgPSBmdW5jdGlvbihocmVmLCB0aXRsZSwgdGV4dCkge1xuICBpZiAodGhpcy5vcHRpb25zLmJhc2VVcmwgJiYgIW9yaWdpbkluZGVwZW5kZW50VXJsLnRlc3QoaHJlZikpIHtcbiAgICBocmVmID0gcmVzb2x2ZVVybCh0aGlzLm9wdGlvbnMuYmFzZVVybCwgaHJlZik7XG4gIH1cbiAgdmFyIG91dCA9ICc8aW1nIHNyYz1cIicgKyBocmVmICsgJ1wiIGFsdD1cIicgKyB0ZXh0ICsgJ1wiJztcbiAgaWYgKHRpdGxlKSB7XG4gICAgb3V0ICs9ICcgdGl0bGU9XCInICsgdGl0bGUgKyAnXCInO1xuICB9XG4gIG91dCArPSB0aGlzLm9wdGlvbnMueGh0bWwgPyAnLz4nIDogJz4nO1xuICByZXR1cm4gb3V0O1xufTtcblxuUmVuZGVyZXIucHJvdG90eXBlLnRleHQgPSBmdW5jdGlvbih0ZXh0KSB7XG4gIHJldHVybiB0ZXh0O1xufTtcblxuLyoqXG4gKiBQYXJzaW5nICYgQ29tcGlsaW5nXG4gKi9cblxuZnVuY3Rpb24gUGFyc2VyKG9wdGlvbnMpIHtcbiAgdGhpcy50b2tlbnMgPSBbXTtcbiAgdGhpcy50b2tlbiA9IG51bGw7XG4gIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgfHwgbWFya2VkLmRlZmF1bHRzO1xuICB0aGlzLm9wdGlvbnMucmVuZGVyZXIgPSB0aGlzLm9wdGlvbnMucmVuZGVyZXIgfHwgbmV3IFJlbmRlcmVyO1xuICB0aGlzLnJlbmRlcmVyID0gdGhpcy5vcHRpb25zLnJlbmRlcmVyO1xuICB0aGlzLnJlbmRlcmVyLm9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG59XG5cbi8qKlxuICogU3RhdGljIFBhcnNlIE1ldGhvZFxuICovXG5cblBhcnNlci5wYXJzZSA9IGZ1bmN0aW9uKHNyYywgb3B0aW9ucywgcmVuZGVyZXIpIHtcbiAgdmFyIHBhcnNlciA9IG5ldyBQYXJzZXIob3B0aW9ucywgcmVuZGVyZXIpO1xuICByZXR1cm4gcGFyc2VyLnBhcnNlKHNyYyk7XG59O1xuXG4vKipcbiAqIFBhcnNlIExvb3BcbiAqL1xuXG5QYXJzZXIucHJvdG90eXBlLnBhcnNlID0gZnVuY3Rpb24oc3JjKSB7XG4gIHRoaXMuaW5saW5lID0gbmV3IElubGluZUxleGVyKHNyYy5saW5rcywgdGhpcy5vcHRpb25zLCB0aGlzLnJlbmRlcmVyKTtcbiAgdGhpcy50b2tlbnMgPSBzcmMucmV2ZXJzZSgpO1xuXG4gIHZhciBvdXQgPSAnJztcbiAgd2hpbGUgKHRoaXMubmV4dCgpKSB7XG4gICAgb3V0ICs9IHRoaXMudG9rKCk7XG4gIH1cblxuICByZXR1cm4gb3V0O1xufTtcblxuLyoqXG4gKiBOZXh0IFRva2VuXG4gKi9cblxuUGFyc2VyLnByb3RvdHlwZS5uZXh0ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLnRva2VuID0gdGhpcy50b2tlbnMucG9wKCk7XG59O1xuXG4vKipcbiAqIFByZXZpZXcgTmV4dCBUb2tlblxuICovXG5cblBhcnNlci5wcm90b3R5cGUucGVlayA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy50b2tlbnNbdGhpcy50b2tlbnMubGVuZ3RoIC0gMV0gfHwgMDtcbn07XG5cbi8qKlxuICogUGFyc2UgVGV4dCBUb2tlbnNcbiAqL1xuXG5QYXJzZXIucHJvdG90eXBlLnBhcnNlVGV4dCA9IGZ1bmN0aW9uKCkge1xuICB2YXIgYm9keSA9IHRoaXMudG9rZW4udGV4dDtcblxuICB3aGlsZSAodGhpcy5wZWVrKCkudHlwZSA9PT0gJ3RleHQnKSB7XG4gICAgYm9keSArPSAnXFxuJyArIHRoaXMubmV4dCgpLnRleHQ7XG4gIH1cblxuICByZXR1cm4gdGhpcy5pbmxpbmUub3V0cHV0KGJvZHkpO1xufTtcblxuLyoqXG4gKiBQYXJzZSBDdXJyZW50IFRva2VuXG4gKi9cblxuUGFyc2VyLnByb3RvdHlwZS50b2sgPSBmdW5jdGlvbigpIHtcbiAgc3dpdGNoICh0aGlzLnRva2VuLnR5cGUpIHtcbiAgICBjYXNlICdzcGFjZSc6IHtcbiAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgY2FzZSAnaHInOiB7XG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5ocigpO1xuICAgIH1cbiAgICBjYXNlICdoZWFkaW5nJzoge1xuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIuaGVhZGluZyhcbiAgICAgICAgdGhpcy5pbmxpbmUub3V0cHV0KHRoaXMudG9rZW4udGV4dCksXG4gICAgICAgIHRoaXMudG9rZW4uZGVwdGgsXG4gICAgICAgIHRoaXMudG9rZW4udGV4dCk7XG4gICAgfVxuICAgIGNhc2UgJ2NvZGUnOiB7XG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5jb2RlKHRoaXMudG9rZW4udGV4dCxcbiAgICAgICAgdGhpcy50b2tlbi5sYW5nLFxuICAgICAgICB0aGlzLnRva2VuLmVzY2FwZWQpO1xuICAgIH1cbiAgICBjYXNlICd0YWJsZSc6IHtcbiAgICAgIHZhciBoZWFkZXIgPSAnJ1xuICAgICAgICAsIGJvZHkgPSAnJ1xuICAgICAgICAsIGlcbiAgICAgICAgLCByb3dcbiAgICAgICAgLCBjZWxsXG4gICAgICAgICwgZmxhZ3NcbiAgICAgICAgLCBqO1xuXG4gICAgICAvLyBoZWFkZXJcbiAgICAgIGNlbGwgPSAnJztcbiAgICAgIGZvciAoaSA9IDA7IGkgPCB0aGlzLnRva2VuLmhlYWRlci5sZW5ndGg7IGkrKykge1xuICAgICAgICBmbGFncyA9IHsgaGVhZGVyOiB0cnVlLCBhbGlnbjogdGhpcy50b2tlbi5hbGlnbltpXSB9O1xuICAgICAgICBjZWxsICs9IHRoaXMucmVuZGVyZXIudGFibGVjZWxsKFxuICAgICAgICAgIHRoaXMuaW5saW5lLm91dHB1dCh0aGlzLnRva2VuLmhlYWRlcltpXSksXG4gICAgICAgICAgeyBoZWFkZXI6IHRydWUsIGFsaWduOiB0aGlzLnRva2VuLmFsaWduW2ldIH1cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIGhlYWRlciArPSB0aGlzLnJlbmRlcmVyLnRhYmxlcm93KGNlbGwpO1xuXG4gICAgICBmb3IgKGkgPSAwOyBpIDwgdGhpcy50b2tlbi5jZWxscy5sZW5ndGg7IGkrKykge1xuICAgICAgICByb3cgPSB0aGlzLnRva2VuLmNlbGxzW2ldO1xuXG4gICAgICAgIGNlbGwgPSAnJztcbiAgICAgICAgZm9yIChqID0gMDsgaiA8IHJvdy5sZW5ndGg7IGorKykge1xuICAgICAgICAgIGNlbGwgKz0gdGhpcy5yZW5kZXJlci50YWJsZWNlbGwoXG4gICAgICAgICAgICB0aGlzLmlubGluZS5vdXRwdXQocm93W2pdKSxcbiAgICAgICAgICAgIHsgaGVhZGVyOiBmYWxzZSwgYWxpZ246IHRoaXMudG9rZW4uYWxpZ25bal0gfVxuICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICBib2R5ICs9IHRoaXMucmVuZGVyZXIudGFibGVyb3coY2VsbCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci50YWJsZShoZWFkZXIsIGJvZHkpO1xuICAgIH1cbiAgICBjYXNlICdibG9ja3F1b3RlX3N0YXJ0Jzoge1xuICAgICAgdmFyIGJvZHkgPSAnJztcblxuICAgICAgd2hpbGUgKHRoaXMubmV4dCgpLnR5cGUgIT09ICdibG9ja3F1b3RlX2VuZCcpIHtcbiAgICAgICAgYm9keSArPSB0aGlzLnRvaygpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5ibG9ja3F1b3RlKGJvZHkpO1xuICAgIH1cbiAgICBjYXNlICdsaXN0X3N0YXJ0Jzoge1xuICAgICAgdmFyIGJvZHkgPSAnJ1xuICAgICAgICAsIG9yZGVyZWQgPSB0aGlzLnRva2VuLm9yZGVyZWQ7XG5cbiAgICAgIHdoaWxlICh0aGlzLm5leHQoKS50eXBlICE9PSAnbGlzdF9lbmQnKSB7XG4gICAgICAgIGJvZHkgKz0gdGhpcy50b2soKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZXIubGlzdChib2R5LCBvcmRlcmVkKTtcbiAgICB9XG4gICAgY2FzZSAnbGlzdF9pdGVtX3N0YXJ0Jzoge1xuICAgICAgdmFyIGJvZHkgPSAnJztcblxuICAgICAgd2hpbGUgKHRoaXMubmV4dCgpLnR5cGUgIT09ICdsaXN0X2l0ZW1fZW5kJykge1xuICAgICAgICBib2R5ICs9IHRoaXMudG9rZW4udHlwZSA9PT0gJ3RleHQnXG4gICAgICAgICAgPyB0aGlzLnBhcnNlVGV4dCgpXG4gICAgICAgICAgOiB0aGlzLnRvaygpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5saXN0aXRlbShib2R5KTtcbiAgICB9XG4gICAgY2FzZSAnbG9vc2VfaXRlbV9zdGFydCc6IHtcbiAgICAgIHZhciBib2R5ID0gJyc7XG5cbiAgICAgIHdoaWxlICh0aGlzLm5leHQoKS50eXBlICE9PSAnbGlzdF9pdGVtX2VuZCcpIHtcbiAgICAgICAgYm9keSArPSB0aGlzLnRvaygpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5saXN0aXRlbShib2R5KTtcbiAgICB9XG4gICAgY2FzZSAnaHRtbCc6IHtcbiAgICAgIHZhciBodG1sID0gIXRoaXMudG9rZW4ucHJlICYmICF0aGlzLm9wdGlvbnMucGVkYW50aWNcbiAgICAgICAgPyB0aGlzLmlubGluZS5vdXRwdXQodGhpcy50b2tlbi50ZXh0KVxuICAgICAgICA6IHRoaXMudG9rZW4udGV4dDtcbiAgICAgIHJldHVybiB0aGlzLnJlbmRlcmVyLmh0bWwoaHRtbCk7XG4gICAgfVxuICAgIGNhc2UgJ3BhcmFncmFwaCc6IHtcbiAgICAgIHJldHVybiB0aGlzLnJlbmRlcmVyLnBhcmFncmFwaCh0aGlzLmlubGluZS5vdXRwdXQodGhpcy50b2tlbi50ZXh0KSk7XG4gICAgfVxuICAgIGNhc2UgJ3RleHQnOiB7XG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5wYXJhZ3JhcGgodGhpcy5wYXJzZVRleHQoKSk7XG4gICAgfVxuICB9XG59O1xuXG4vKipcbiAqIEhlbHBlcnNcbiAqL1xuXG5mdW5jdGlvbiBlc2NhcGUoaHRtbCwgZW5jb2RlKSB7XG4gIHJldHVybiBodG1sXG4gICAgLnJlcGxhY2UoIWVuY29kZSA/IC8mKD8hIz9cXHcrOykvZyA6IC8mL2csICcmYW1wOycpXG4gICAgLnJlcGxhY2UoLzwvZywgJyZsdDsnKVxuICAgIC5yZXBsYWNlKC8+L2csICcmZ3Q7JylcbiAgICAucmVwbGFjZSgvXCIvZywgJyZxdW90OycpXG4gICAgLnJlcGxhY2UoLycvZywgJyYjMzk7Jyk7XG59XG5cbmZ1bmN0aW9uIHVuZXNjYXBlKGh0bWwpIHtcblx0Ly8gZXhwbGljaXRseSBtYXRjaCBkZWNpbWFsLCBoZXgsIGFuZCBuYW1lZCBIVE1MIGVudGl0aWVzXG4gIHJldHVybiBodG1sLnJlcGxhY2UoLyYoIyg/OlxcZCspfCg/OiN4WzAtOUEtRmEtZl0rKXwoPzpcXHcrKSk7Py9pZywgZnVuY3Rpb24oXywgbikge1xuICAgIG4gPSBuLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKG4gPT09ICdjb2xvbicpIHJldHVybiAnOic7XG4gICAgaWYgKG4uY2hhckF0KDApID09PSAnIycpIHtcbiAgICAgIHJldHVybiBuLmNoYXJBdCgxKSA9PT0gJ3gnXG4gICAgICAgID8gU3RyaW5nLmZyb21DaGFyQ29kZShwYXJzZUludChuLnN1YnN0cmluZygyKSwgMTYpKVxuICAgICAgICA6IFN0cmluZy5mcm9tQ2hhckNvZGUoK24uc3Vic3RyaW5nKDEpKTtcbiAgICB9XG4gICAgcmV0dXJuICcnO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZShyZWdleCwgb3B0KSB7XG4gIHJlZ2V4ID0gcmVnZXguc291cmNlO1xuICBvcHQgPSBvcHQgfHwgJyc7XG4gIHJldHVybiBmdW5jdGlvbiBzZWxmKG5hbWUsIHZhbCkge1xuICAgIGlmICghbmFtZSkgcmV0dXJuIG5ldyBSZWdFeHAocmVnZXgsIG9wdCk7XG4gICAgdmFsID0gdmFsLnNvdXJjZSB8fCB2YWw7XG4gICAgdmFsID0gdmFsLnJlcGxhY2UoLyhefFteXFxbXSlcXF4vZywgJyQxJyk7XG4gICAgcmVnZXggPSByZWdleC5yZXBsYWNlKG5hbWUsIHZhbCk7XG4gICAgcmV0dXJuIHNlbGY7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVVcmwoYmFzZSwgaHJlZikge1xuICBpZiAoIWJhc2VVcmxzWycgJyArIGJhc2VdKSB7XG4gICAgLy8gd2UgY2FuIGlnbm9yZSBldmVyeXRoaW5nIGluIGJhc2UgYWZ0ZXIgdGhlIGxhc3Qgc2xhc2ggb2YgaXRzIHBhdGggY29tcG9uZW50LFxuICAgIC8vIGJ1dCB3ZSBtaWdodCBuZWVkIHRvIGFkZCBfdGhhdF9cbiAgICAvLyBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzk4NiNzZWN0aW9uLTNcbiAgICBpZiAoL15bXjpdKzpcXC8qW14vXSokLy50ZXN0KGJhc2UpKSB7XG4gICAgICBiYXNlVXJsc1snICcgKyBiYXNlXSA9IGJhc2UgKyAnLyc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJhc2VVcmxzWycgJyArIGJhc2VdID0gYmFzZS5yZXBsYWNlKC9bXi9dKiQvLCAnJyk7XG4gICAgfVxuICB9XG4gIGJhc2UgPSBiYXNlVXJsc1snICcgKyBiYXNlXTtcblxuICBpZiAoaHJlZi5zbGljZSgwLCAyKSA9PT0gJy8vJykge1xuICAgIHJldHVybiBiYXNlLnJlcGxhY2UoLzpbXFxzXFxTXSovLCAnOicpICsgaHJlZjtcbiAgfSBlbHNlIGlmIChocmVmLmNoYXJBdCgwKSA9PT0gJy8nKSB7XG4gICAgcmV0dXJuIGJhc2UucmVwbGFjZSgvKDpcXC8qW14vXSopW1xcc1xcU10qLywgJyQxJykgKyBocmVmO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBiYXNlICsgaHJlZjtcbiAgfVxufVxudmFyIGJhc2VVcmxzID0ge307XG52YXIgb3JpZ2luSW5kZXBlbmRlbnRVcmwgPSAvXiR8XlthLXpdW2EtejAtOSsuLV0qOnxeWz8jXS9pO1xuXG5mdW5jdGlvbiBub29wKCkge31cbm5vb3AuZXhlYyA9IG5vb3A7XG5cbmZ1bmN0aW9uIG1lcmdlKG9iaikge1xuICB2YXIgaSA9IDFcbiAgICAsIHRhcmdldFxuICAgICwga2V5O1xuXG4gIGZvciAoOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdGFyZ2V0ID0gYXJndW1lbnRzW2ldO1xuICAgIGZvciAoa2V5IGluIHRhcmdldCkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0YXJnZXQsIGtleSkpIHtcbiAgICAgICAgb2JqW2tleV0gPSB0YXJnZXRba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5cbi8qKlxuICogTWFya2VkXG4gKi9cblxuZnVuY3Rpb24gbWFya2VkKHNyYywgb3B0LCBjYWxsYmFjaykge1xuICBpZiAoY2FsbGJhY2sgfHwgdHlwZW9mIG9wdCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGlmICghY2FsbGJhY2spIHtcbiAgICAgIGNhbGxiYWNrID0gb3B0O1xuICAgICAgb3B0ID0gbnVsbDtcbiAgICB9XG5cbiAgICBvcHQgPSBtZXJnZSh7fSwgbWFya2VkLmRlZmF1bHRzLCBvcHQgfHwge30pO1xuXG4gICAgdmFyIGhpZ2hsaWdodCA9IG9wdC5oaWdobGlnaHRcbiAgICAgICwgdG9rZW5zXG4gICAgICAsIHBlbmRpbmdcbiAgICAgICwgaSA9IDA7XG5cbiAgICB0cnkge1xuICAgICAgdG9rZW5zID0gTGV4ZXIubGV4KHNyYywgb3B0KVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBjYWxsYmFjayhlKTtcbiAgICB9XG5cbiAgICBwZW5kaW5nID0gdG9rZW5zLmxlbmd0aDtcblxuICAgIHZhciBkb25lID0gZnVuY3Rpb24oZXJyKSB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIG9wdC5oaWdobGlnaHQgPSBoaWdobGlnaHQ7XG4gICAgICAgIHJldHVybiBjYWxsYmFjayhlcnIpO1xuICAgICAgfVxuXG4gICAgICB2YXIgb3V0O1xuXG4gICAgICB0cnkge1xuICAgICAgICBvdXQgPSBQYXJzZXIucGFyc2UodG9rZW5zLCBvcHQpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBlcnIgPSBlO1xuICAgICAgfVxuXG4gICAgICBvcHQuaGlnaGxpZ2h0ID0gaGlnaGxpZ2h0O1xuXG4gICAgICByZXR1cm4gZXJyXG4gICAgICAgID8gY2FsbGJhY2soZXJyKVxuICAgICAgICA6IGNhbGxiYWNrKG51bGwsIG91dCk7XG4gICAgfTtcblxuICAgIGlmICghaGlnaGxpZ2h0IHx8IGhpZ2hsaWdodC5sZW5ndGggPCAzKSB7XG4gICAgICByZXR1cm4gZG9uZSgpO1xuICAgIH1cblxuICAgIGRlbGV0ZSBvcHQuaGlnaGxpZ2h0O1xuXG4gICAgaWYgKCFwZW5kaW5nKSByZXR1cm4gZG9uZSgpO1xuXG4gICAgZm9yICg7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIChmdW5jdGlvbih0b2tlbikge1xuICAgICAgICBpZiAodG9rZW4udHlwZSAhPT0gJ2NvZGUnKSB7XG4gICAgICAgICAgcmV0dXJuIC0tcGVuZGluZyB8fCBkb25lKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGhpZ2hsaWdodCh0b2tlbi50ZXh0LCB0b2tlbi5sYW5nLCBmdW5jdGlvbihlcnIsIGNvZGUpIHtcbiAgICAgICAgICBpZiAoZXJyKSByZXR1cm4gZG9uZShlcnIpO1xuICAgICAgICAgIGlmIChjb2RlID09IG51bGwgfHwgY29kZSA9PT0gdG9rZW4udGV4dCkge1xuICAgICAgICAgICAgcmV0dXJuIC0tcGVuZGluZyB8fCBkb25lKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRva2VuLnRleHQgPSBjb2RlO1xuICAgICAgICAgIHRva2VuLmVzY2FwZWQgPSB0cnVlO1xuICAgICAgICAgIC0tcGVuZGluZyB8fCBkb25lKCk7XG4gICAgICAgIH0pO1xuICAgICAgfSkodG9rZW5zW2ldKTtcbiAgICB9XG5cbiAgICByZXR1cm47XG4gIH1cbiAgdHJ5IHtcbiAgICBpZiAob3B0KSBvcHQgPSBtZXJnZSh7fSwgbWFya2VkLmRlZmF1bHRzLCBvcHQpO1xuICAgIHJldHVybiBQYXJzZXIucGFyc2UoTGV4ZXIubGV4KHNyYywgb3B0KSwgb3B0KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGUubWVzc2FnZSArPSAnXFxuUGxlYXNlIHJlcG9ydCB0aGlzIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS9jaGpqL21hcmtlZC4nO1xuICAgIGlmICgob3B0IHx8IG1hcmtlZC5kZWZhdWx0cykuc2lsZW50KSB7XG4gICAgICByZXR1cm4gJzxwPkFuIGVycm9yIG9jY3VycmVkOjwvcD48cHJlPidcbiAgICAgICAgKyBlc2NhcGUoZS5tZXNzYWdlICsgJycsIHRydWUpXG4gICAgICAgICsgJzwvcHJlPic7XG4gICAgfVxuICAgIHRocm93IGU7XG4gIH1cbn1cblxuLyoqXG4gKiBPcHRpb25zXG4gKi9cblxubWFya2VkLm9wdGlvbnMgPVxubWFya2VkLnNldE9wdGlvbnMgPSBmdW5jdGlvbihvcHQpIHtcbiAgbWVyZ2UobWFya2VkLmRlZmF1bHRzLCBvcHQpO1xuICByZXR1cm4gbWFya2VkO1xufTtcblxubWFya2VkLmRlZmF1bHRzID0ge1xuICBnZm06IHRydWUsXG4gIHRhYmxlczogdHJ1ZSxcbiAgYnJlYWtzOiBmYWxzZSxcbiAgcGVkYW50aWM6IGZhbHNlLFxuICBzYW5pdGl6ZTogZmFsc2UsXG4gIHNhbml0aXplcjogbnVsbCxcbiAgbWFuZ2xlOiB0cnVlLFxuICBzbWFydExpc3RzOiBmYWxzZSxcbiAgc2lsZW50OiBmYWxzZSxcbiAgaGlnaGxpZ2h0OiBudWxsLFxuICBsYW5nUHJlZml4OiAnbGFuZy0nLFxuICBzbWFydHlwYW50czogZmFsc2UsXG4gIGhlYWRlclByZWZpeDogJycsXG4gIHJlbmRlcmVyOiBuZXcgUmVuZGVyZXIsXG4gIHhodG1sOiBmYWxzZSxcbiAgYmFzZVVybDogbnVsbFxufTtcblxuLyoqXG4gKiBFeHBvc2VcbiAqL1xuXG5tYXJrZWQuUGFyc2VyID0gUGFyc2VyO1xubWFya2VkLnBhcnNlciA9IFBhcnNlci5wYXJzZTtcblxubWFya2VkLlJlbmRlcmVyID0gUmVuZGVyZXI7XG5cbm1hcmtlZC5MZXhlciA9IExleGVyO1xubWFya2VkLmxleGVyID0gTGV4ZXIubGV4O1xuXG5tYXJrZWQuSW5saW5lTGV4ZXIgPSBJbmxpbmVMZXhlcjtcbm1hcmtlZC5pbmxpbmVMZXhlciA9IElubGluZUxleGVyLm91dHB1dDtcblxubWFya2VkLnBhcnNlID0gbWFya2VkO1xuXG5pZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gbWFya2VkO1xufSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgZGVmaW5lKGZ1bmN0aW9uKCkgeyByZXR1cm4gbWFya2VkOyB9KTtcbn0gZWxzZSB7XG4gIHRoaXMubWFya2VkID0gbWFya2VkO1xufVxuXG59KS5jYWxsKGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcyB8fCAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiBnbG9iYWwpO1xufSgpKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL21hcmtlZC9saWIvbWFya2VkLmpzXG4vLyBtb2R1bGUgaWQgPSAyNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9